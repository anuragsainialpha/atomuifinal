{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/fgs-operations/drafted-loadslips/drafted-loadslip.module.ts","webpack:///./src/app/fgs-operations/drafted-loadslips/drafted-loadslips.component.html","webpack:///./src/app/fgs-operations/drafted-loadslips/drafted-loadslips.component.scss","webpack:///./src/app/fgs-operations/drafted-loadslips/drafted-loadslips.component.ts"],"names":[],"mappings":"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","file":"fgs-operations-drafted-loadslips-drafted-loadslip-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { customMaterialModule } from '../../angular-material';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { DraftedLoadslipsComponent } from './drafted-loadslips.component';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\n\nconst routes: Routes = [\n  { path: '', component: DraftedLoadslipsComponent},\n  { path: ':loadslipId', component: DraftedLoadslipsComponent},\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    customMaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n    LoaderModule,\n    NgxDatatableModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    DraftedLoadslipsComponent\n  ],\n  providers:\n    [\n    ],\n})\nexport class draftedLoadslipModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    <b> Loadslip > Drafted Loadslips</b>\\n\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n  <div class=\\\"manualplan-fields\\\">\\n    <div class=\\\"col-md-12 row\\\" *ngIf=\\\"isShow\\\">\\n      <div class=\\\"col-md-12 padding-right-40\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"formPicker\\\" placeholder=\\\"From Date\\\" [(ngModel)]=\\\"fromDate\\\"\\n                  name=\\\"fromDate\\\" (dateChange)=\\\"addEvent('fromDate', $event)\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"formPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #formPicker disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1  pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"toPicker\\\" [min]=\\\"fromDate\\\" placeholder=\\\"To Date\\\"\\n                  [(ngModel)]=\\\"toDate\\\" name=\\\"toDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toPicker [disabled]=\\\"!fromDate\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1  pl-0\\\" *ngIf=\\\"isDPREPRole()\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Source\\\" (keyup)=\\\"getfilterSource($event)\\\" autocomplete=\\\"off\\\"\\n                [matAutocomplete]=\\\"sourceAutocomplete\\\" [(ngModel)]=\\\"sourceCode\\\" name=\\\"source\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\">\\n                <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n                  <span matTooltip={{list.value}}>{{list.value}} - ({{list.description}})</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1  pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Destination\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n                  [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\" (keyup)=\\\"getDestinationList($event)\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\"\\n                    (click)=\\\"setDestDescription(list.description)\\\"\\n                    (onSelectionChange)=\\\"setDestDescription(list.description)\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"pl-0\\\" [ngClass]=\\\"(isDPREPRole())?'col-md-1':'col-md-2'\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"State\\\"\\n                  [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destination\\\"\\n                  (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                    (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                    <span>({{list.description}})</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"pl-0 col-md-1\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Truck \\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"truckNumber\\\" name=\\\"truckNumber\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"pl-0 col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Truck/Container Type\\\" [(ngModel)]=\\\"truckType\\\" name=\\\"trcktype\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let truck of truckList\\\" [value]=\\\"truck.value\\\"> {{truck.value}} </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Container\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"container\\\" name=\\\"container\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput aria-label=\\\"Transporter\\\" placeholder=\\\"Transporter\\\"\\n                  (keyup)=\\\"getfilterTransporter($event)\\\" autocomplete=\\\"off\\\" [matAutocomplete]=\\\"transporterAutocomplete\\\"\\n                  [(ngModel)]=\\\"transporter\\\" name=\\\"transporter\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #transporterAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of transporterList\\\" [value]=\\\"list.value\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Material Code\\\" autocomplete=\\\"off\\\" aria-label=\\\"Material Code\\\"\\n                  [matAutocomplete]=\\\"materialCodeAutocomplete\\\" [(ngModel)]=\\\"materialCode\\\" name=\\\"materialCode\\\"\\n                  (keyup)=\\\"filterMaterialCode($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #materialCodeAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of materilcodelist\\\" [value]=\\\"list.value\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Type\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"type\\\" name=\\\"type\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n\\n          <!-- <div class=\\\"col-md-7 pd-0\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Destination\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n                      [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\" autocomplete=\\\"off\\\" (keyup)=\\\"getDestinationList($event)\\\">\\n                    <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\">\\n                        <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-2\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Material Code\\\" autocomplete=\\\"off\\\" aria-label=\\\"Material Code\\\"\\n                      [matAutocomplete]=\\\"materialCodeAutocomplete\\\" [(ngModel)]=\\\"materialCode\\\" name=\\\"materialCode\\\"\\n                      (keyup)=\\\"filterMaterialCode($event)\\\">\\n                    <mat-autocomplete #materialCodeAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of materilcodelist\\\" [value]=\\\"list.value\\\">\\n                        <span>{{list.value}}</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n            </div>\\n          </div> -->\\n        </div>\\n      </div>\\n      <div class=\\\"pull-right\\\">\\n        <div class=\\\"search-fileds\\\">\\n          <button class=\\\"theme-small-button\\\" (click)=\\\"filterDraftLoadSlip()\\\" matTooltip=\\\"Search\\\">\\n            <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <button class=\\\"theme-delete-button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear\\\">\\n            <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-12 tab-pr-40\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"MKT Segment\\\" [(ngModel)]=\\\"mktsegment\\\" name=\\\"mktsegment\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let mktsegment of mktsegmentList\\\" [value]=\\\"mktsegment\\\">\\n                    {{mktsegment}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Load Slip Id\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"loadSlipId\\\" name=\\\"loadslipID\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Shipment Id\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"shipmentId\\\" name=\\\"shipmentId\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <mat-form-field>\\n              <input matInput aria-label=\\\"Country of Destination\\\" placeholder=\\\"Country of Destination\\\"\\n                (keyup)=\\\"countryOfDestinationFilter($event,'destCountrySearch')\\\" autocomplete=\\\"off\\\"\\n                [matAutocomplete]=\\\"dischargeAutocomplete\\\" [(ngModel)]=\\\"destCountryName\\\" name=\\\"destCountryName\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              <mat-autocomplete #dischargeAutocomplete=\\\"matAutocomplete\\\">\\n                <mat-option *ngFor=\\\"let country of countryList\\\" [value]=\\\"country.description\\\">\\n                  <span matTooltip={{country.description}}>{{country.value}} - ({{country.description}})</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Invoice\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"invoice\\\" name=\\\"Invoice\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"loadslipstatustype\\\" name=\\\"status\\\" multiple>\\n                <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                <mat-option *ngFor=\\\"let item of loadslipstatus\\\" [value]=\\\"item.value\\\"> {{item.key}} </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"LS Category\\\" [(ngModel)]=\\\"draftedLoadslipCategory\\\" name=\\\"lsCategory\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let item of lsCategoryList\\\" [value]=\\\"item\\\"> {{item}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"clearfix\\\"></div>\\n  <ngx-datatable #table class='material ngx-table-custom-scroll  ngx-table-tr-custom-scroll' #table\\n    [rows]='draftedLoadslipsList' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\"\\n    [externalPaging]=\\\"true\\\" [scrollbarH]=\\\"true\\\" [limit]=\\\"page.limit\\\" (page)=\\\"datatablePageData($event)\\\"\\n    [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\">\\n    <ngx-datatable-column name=\\\"Load Slip Id\\\" [frozenLeft]=\\\"true\\\" [width]=\\\"170\\\" [resizeable]=\\\"false\\\" prop=\\\"loadslipId\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <!-- [routerLink]=\\\"['/fgs/create-load-slip',row.loadslipId]\\\" -->\\n        <a (click)=\\\"viewDraftLoadSlipData(row)\\\">{{row.loadslipId}}</a>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Shipment ID\\\" [frozenLeft]=\\\"freezeLeftValue\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" prop=\\\"shipmentId\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.shipmentId}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Source\\\" [width]=\\\"70\\\" [frozenLeft]=\\\"true\\\" [resizeable]=\\\"false\\\" prop=\\\"sourceLoc\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sourceLoc}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Dest\\\" [width]=\\\"100\\\" [frozenLeft]=\\\"true\\\" [resizeable]=\\\"false\\\" prop=\\\"destLoc\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destLoc}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Truck\\\" [width]=\\\"120\\\" [frozenLeft]=\\\"freezeLeftValue\\\" [resizeable]=\\\"false\\\" prop=\\\"truckNumber\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.truckNumber}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Dest Description\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"destDis\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destDis}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Type\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\" prop=\\\"stopType\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.stopType || '--'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Order Type\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"type\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.type || '--'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Created Date\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"createdDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.createdDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Truck/Cont Type\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"truckType\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.truckType}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Transporter\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"servprov\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.servprov || '--'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"STO/SO\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"stoSoNum\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.stoSoNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Delivery\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"delivery\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.delivery}}\\n      </ng-template>\\n    </ngx-datatable-column>]\\n    <ngx-datatable-column name=\\\"Invoice\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"sapInvoice\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvoice}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Invoice Dt.\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"sapInvoiceDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvoiceDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <!-- <ngx-datatable-column name=\\\"Confirm Dt.\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"gatedOutDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.gatedOutDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column> -->\\n    <ngx-datatable-column name=\\\"Actual Arrival Dt.\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"actualArrivalDate\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.actualArrivalDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"LR\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"lrNum\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.lrNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"LR Date\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"lrDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.lrDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Container\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"containerNum\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.containerNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Country of Destination\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"destCountryName\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destCountryName}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"DIT_QTY\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"ditQty\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.ditQty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SHORTAGE_QTY\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"shortQty\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.shortQty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Total Loaded\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"qty\\\" [sortable]=\\\"true\\\"\\n      [flexGrow]=\\\"1\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.qty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tyre\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"totTyres\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totTyres}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tube\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"totTubes\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totTubes}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Flap\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"totFlaps\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totFlaps}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Valve\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"totValve\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totValve}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"PCTR\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"totPctr\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totPctr || '0'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Other Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"otherQty\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.otherQty || '0'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Total Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"transhipment\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totQty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"GRN\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"grn\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.grn}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"GRN Date\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" prop=\\\"grnDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.grnDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tranship\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"transhipment\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.transhipment}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Freight Avail\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"transhipment\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.freightAvailability}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Cat\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" prop=\\\"itemCategory\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.itemCategory}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"TTE Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"tteQty\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.tteQty | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"TTE Util\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"tteUtil\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.tteUtil | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Wt Util\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"weightUtil\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.weightUtil | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Vol Util\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"volumeUtil\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.volumeUtil | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"DSeq\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.dropSeq}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Arrived Bay\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"bayArrivedDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.bayArrivedDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Print LS\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"lsPrintDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.lsPrintDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Send For Barcode\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"sendForBarcodeDate\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sendForBarcodeDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Loading Start\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"loadingStartDate\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.loadingStartDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Loading End\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"loadingEndDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.loadingEndDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Confirm\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"confirmedDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.confirmedDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Release\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"releaseDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.releaseDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"insertUser\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.insertUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Update User\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"updateUser\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.updateUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Status\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" prop=\\\"status\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.status}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Integration Status\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" prop=\\\"integrationStatus\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.integrationStatus}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Integration Msg\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"integrationMsg\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <!-- <button class=\\\"theme-small-button\\\" matTooltip=\\\"Integration Message\\\" (click)=\\\"showIntegrationMessage(row)\\\" *ngIf=\\\"(row.integrationMsg)\\\">\\n          <i class=\\\"fa fa-commenting-o\\\" aria-hidden=\\\"true\\\"></i>\\n        </button> -->\\n        <span class=\\\"edit-label\\\" [title]=\\\"row.integrationMsg\\\" (click)=\\\"showIntegrationMessage(row,'integrationMsg')\\\"\\n          *ngIf=\\\"(row.integrationMsg)\\\">{{(row.integrationMsg?.length>9)? (row.integrationMsg |\\n          slice:0:9)+'..':(row.integrationMsg)}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"LoadSlip Comments\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"comments\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <!-- For DP_REP ROLE Comments only readble -->\\n        <ng-container *ngIf=\\\"(Role_DP_REP == 'DP_REP');else otherRole\\\">\\n          <span class=\\\"edit-label\\\" [attr.title]=\\\"row.comments\\\" (click)=\\\"showIntegrationMessage(row,'loadslipComments')\\\">{{\\n            (row.comments?.length>9)? (row.comments | slice:0:9)+'..':(row.comments)}}</span>\\n        </ng-container>\\n        <!-- Else condition for other roles otherthan DP_REP role-->\\n        <ng-template #otherRole>\\n          <div class=\\\"edit-field\\\" [attr.title]=\\\"row.comments\\\">\\n            <span class=\\\"edit-label\\\">{{(row.comments?.length>6)? (row.comments | slice:0:6)+'..':(row.comments)}}</span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"showComments(row.comments,row)\\\"></i>\\n          </div>\\n        </ng-template>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SAP invoice weight (Kg)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvWeight}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SAP invoice value (INR)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvValue}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Eway bill No\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"ewayBillNo\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.ewayBillNo}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"MKT Seg\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"marketSegment\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.marketSegment}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Cust Inv Num\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"custInvNum\\\" [sortable]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.customInvoiceNumber}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"FT Trip ID\\\" [width]=\\\"1000\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"ftTripId\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          <a (click)=\\\"goToLink(row.ftTripId)\\\">{{row.ftTripId}}</a>\\n        </ng-template>\\n      </ngx-datatable-column>\\n    <!-- Action column can be visible for Other roles ,Otherthan DP_REP, L1_MGR, L2_MGR role -->\\n    <ng-container *ngIf=\\\"(!isDPREPRole())\\\">\\n      <ngx-datatable-column name=\\\"Action\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          <button class=\\\"theme-delete-button\\\" matTooltip=\\\"Cancel Loadslip\\\" (click)=\\\"confirmCancelAction(row.loadslipId)\\\"\\n            *ngIf=\\\"(row.canLSCancelled)\\\">\\n            <i class=\\\"fa fa-times fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n    </ng-container>\\n    <!-- Footer Template starts -->\\n    <ngx-datatable-footer>\\n      <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n        let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n        <div class=\\\"page-count\\\">\\n          <span *ngIf=\\\"selectedCount\\\">\\n            {{selectedCount.toLocaleString()}} Selected |\\n          </span>\\n          Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n          (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n          {{(rowCount)}} records.\\n        </div>\\n        <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n          [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\"\\n          [size]=\\\"pageSize\\\" [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n          (change)=\\\"table.onFooterPage($event)\\\">\\n        </datatable-pager>\\n      </ng-template>\\n    </ngx-datatable-footer>\\n    <!-- Footer Template Ends -->\\n  </ngx-datatable>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"integrationMsgModal\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Message !!!</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p class=\\\"text-center text-danger\\\">{{integrationMsg}}</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <!-- <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"saveComments()\\\">Save</button> -->\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n\\n\\n<!--  -->\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <form name=\\\"form\\\" #f=\\\"ngForm\\\">\\n        <!-- Modal Header -->\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Loadslip Comments</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <!-- Modal body -->\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <mat-form-field appearance=\\\"standard\\\" class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Comments\\\" aria-label=\\\"State\\\" [(ngModel)]=\\\"loadslipComments\\\" name=\\\"Comments\\\"\\n                #comments=\\\"ngModel\\\" autocomplete=\\\"off\\\">\\n              <!-- <mat-error *ngIf=\\\"(f.submitted && comments.invalid)\\\">\\n                <p *ngIf=\\\"comments.errors.required\\\">Comment is\\n                  <strong>required</strong>\\n                </p>\\n              </mat-error> -->\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <!-- Modal footer -->\\n        <div class=\\\"modal-footer\\\">\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" >Close</button> -->\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"save(f)\\\">Save</button>\\n          <button type=\\\"button\\\" mat-raised-button class=\\\"mat-default\\\" color=\\\"default\\\"\\n            data-dismiss=\\\"modal\\\">Close</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Confirm Delete modal -->\\n<div class=\\\"modal\\\" id=\\\"confirmDelete\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <form name=\\\"form\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title text-danger\\\">Are you sure you want to cancel loadslip</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"cancelLoadslip(selectedLoadslipId)\\\" matTooltip = \\\"Cancel Loadslip\\\">YES</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" color=\\\"default\\\" data-dismiss=\\\"modal\\\">NO</button>\\n          \\n        </div>\\n        <!-- <p class=\\\"text-danger\\\" style=\\\"font-size: 12px;margin-left: 15px;\\\"><b><u>NOTE:</u></b>&nbsp;Once Loadslip is cancelled, you cannot revert back\\n        </p> -->\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zncy1vcGVyYXRpb25zL2RyYWZ0ZWQtbG9hZHNsaXBzL2RyYWZ0ZWQtbG9hZHNsaXBzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { HelperServiceService } from './../../services/helper-service/helper-service.service';\nimport { Component, OnInit, ViewChild, DoCheck } from '@angular/core';\nimport { ApiserviceService } from 'src/app/services/api/apiservice.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { loadslipStatus, constants } from 'src/app/constants';\nimport * as XLSX from 'xlsx';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/public/date.adapters';\nimport * as moment from 'moment';\nimport { NgForm } from '@angular/forms';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\ndeclare var $: any;\n@Component({\n  selector: 'app-drafted-loadslips',\n  templateUrl: './drafted-loadslips.component.html',\n  styleUrls: ['./drafted-loadslips.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: AppDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\n  ]\n})\nexport class DraftedLoadslipsComponent implements OnInit, DoCheck {\n  isLoading: boolean = false;\n  draftedLoadslipsList = [];\n  page = {\n    limit: 10,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n  isShow: boolean = true;\n  destinationList: any[];\n  materilcodelist: any[];\n  destination: any;\n  destinationDesc: any;\n  descriptionList = [];\n  truckType=[];\n  materialCode: any;\n  type: any;\n  loadSlipId: any;\n  transhipment: any;\n  invoice: any;\n  mktsegment=[];\n  shipmentId: string;\n  loadslipComments: string;\n  rowloadslipId: string;\n  roles: any;\n  currentDate = '';\n  currentDateAsString = '';\n  statusList = [\"CREATED\", \"PRINTED\", \"LOADING\", \"LOADED\", \"SENT_SAP\"];\n  mktsegmentList = [];\n  truckList = [];\n  fromCreatedDate: string = '';\n  toCreatedDate: string = '';\n  toDate: string = '';\n  fromDate: string = '';\n  integrationMsg: string;\n  loadslipstatus = [];\n  loadslipstatustype=[];\n  // Role_DP_REP: string;\n  truckNumber: any;\n  container: string;\n  check_Role_DP_REP: string\n  sourceList: any[];\n  sourceCode: any;\n  transporter: any;\n  transporterList: any[];\n  destCountryName: string;\n  countryList: any[];\n  lsCategoryList = [];\n  draftedLoadslipCategory = [];\n  trackingConsentStatus = '';\n  consentPhoneTelecom = '';\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  rowData: any = {};\n  selectedLoadslipId: any;\n  freezeLeftValue: boolean = true;\n  constructor(\n    private service: ApiserviceService,\n    private toastr: ToastrService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private helperService: HelperServiceService\n  ) { }\n  ngDoCheck(){\n    let width = $(window).width();\n    if(width < 1024) {\n      this.freezeLeftValue = false;\n    }\n    else {\n      this.freezeLeftValue = true;\n    }\n  }\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"load-slip\");\n    this.loadSlipId = this.activatedRoute.snapshot.params['loadslipId']\n    this.roles = constants.roles;\n    this.loadslipstatus = constants.draftedLoadlslipstatus;\n    this.check_Role_DP_REP = this.service.checkRole();\n    //get the load slip based on search \n    if (this.loadSlipId) {\n      this.loadSlipId = this.loadSlipId\n    }\n    this.forDateValidation();\n    let bodyData = {\n      // 'fromCreatedDate': this.currentDate,\n      // 'toCreatedDate': this.currentDate,\n      'loadslipId': this.loadSlipId,\n      'type': loadslipStatus.created + \",\" + loadslipStatus.printed + \",\" + loadslipStatus.loading + \",\" + loadslipStatus.loaded + \",\" + loadslipStatus.sentSAP,\n      'status': this.statusList\n    }\n    this.fromDate = this.currentDateAsString;\n    this.toDate = this.fromDate;\n    this.getDraftLoadSlipData(bodyData);\n\n    // for getting truck type master\n    this.getTruckTypeMasterData();\n    this.getMarketSegment();\n    this.getLSCategoryList();\n\n    // this.Role_DP_REP = this.service.checkRole();\n  }\n\n  // Checking if the logged in role is DP_REP or L1_MGR or L2_MGR\n  isDPREPRole(){\n    if(this.service.checkRole() == this.roles.planner3 || this.service.checkRole() == this.roles.L1MGR || this.service.checkRole() == this.roles.L2MGR){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  // for getting truck type master\n  getTruckTypeMasterData() {\n    this.service.get_service(ApiserviceService.apisList.truckTypeMasterData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.truckList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    });\n  }\n\n  //show the filter\n  showFilter() {\n    this.isShow = !this.isShow\n  }\n  // get destaination list on search\n  getDestinationList(event) {\n    this.destinationDesc = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.destinationList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        this.destinationList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  getLSCategoryList() {\n    this.service.get_service(ApiserviceService.apisList.getLSCategoryList).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.lsCategoryList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    });\n  }\n\n  //filter material code \n  filterMaterialCode(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.materilcodelist = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?materialCode=' + filtervalue).subscribe(response => {\n        this.materilcodelist = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // Refresh data\n  refreshData() {\n    this.clearAll();\n    // this.fromDate = this.currentDateAsString;\n    // this.toDate = this.fromDate;\n    this.table.offset = 0;\n    let bodyData = {\n      // 'fromCreatedDate': this.currentDate,\n      // 'toCreatedDate': this.currentDate,\n      'type': loadslipStatus.created + \",\" + loadslipStatus.printed + \",\" + loadslipStatus.loading + \",\" + loadslipStatus.loaded + \",\" + loadslipStatus.sentSAP,\n      'status': this.statusList,\n    }\n    this.getDraftLoadSlipData(bodyData);\n  }\n  // Date Validation\n  forDateValidation() {\n    if (this.fromDate != '' && this.fromDate != null) {\n      this.fromCreatedDate = moment(new Date(this.fromDate)).format(\"DD/MM/YYYY\");\n    } else {\n      this.fromCreatedDate = '';\n    }\n    if (this.toDate != '' && this.toDate != null) {\n      this.toCreatedDate = moment(new Date(this.toDate)).format(\"DD/MM/YYYY\");\n    } else {\n      this.toCreatedDate = '';\n    }\n  }\n\n  addEvent(type, event) {\n    if (event.target.value) {\n       /* Checking if selected from date greater than to date.\n      Clearing the toDate field when from date greater than to date */\n      if(this.toDate && (this.fromDate > this.toDate)){\n        this.toDate = '';\n      }\n      // this.toDate = '';\n    }\n  }\n  onFooterPage(pageInfo){\n    console.log(pageInfo);\n    \n  }\n\n  //clear data \n  clearAll() {\n    this.destination = '';\n    this.invoice = \"\";\n    this.materialCode = \"\";\n    this.loadSlipId = \"\";\n    this.type = \"\";\n    this.transhipment = \"\";\n    this.truckType = [];\n    this.mktsegment = [];\n    this.destinationDesc = \"\";\n    this.descriptionList = [];\n    this.destinationList = [];\n    this.materilcodelist = [];\n    this.shipmentId = '';\n    this.fromDate = '';\n    this.toDate = '';\n    this.loadslipstatustype = [];\n    this.truckNumber = '';\n    this.container = '';\n    this.sourceCode = '';\n    this.transporter = '';\n    this.destCountryName = '';\n    this.countryList = [];\n    this.draftedLoadslipCategory = [];\n  }\n\n\n\n  //get filter destination result\n  countryOfDestinationFilter(event, type) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?' + type + '=' + filtervalue).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.countryList = [];\n          this.countryList = response['data'].searchResult;\n          this.isLoading = false;\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        }\n\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // drafted load slips filter creatria\n  getDraftLoadSlipData(bodyData) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.getDraftedLoadslips, bodyData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'].loadslips;\n        this.draftedLoadslipsList = responseData;\n        this.draftedLoadslipsList = [...this.draftedLoadslipsList]\n        this.page.count = response['data'].total;\n        this.page.limit = response['data'].pageLength;\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  // for filter load slip data\n  filterDraftLoadSlip() {\n    this.table.offset = 0;\n    this.forDateValidation();\n    let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n    let bodyData = {\n      'fromCreatedDate': this.fromCreatedDate,\n      'toCreatedDate': this.toCreatedDate,\n      'destination': this.destination,\n      'invoice': this.invoice,\n      'itemId': this.materialCode,\n      'loadslipId': this.loadSlipId,\n      'stopType': this.type,\n      'transhipment': this.transhipment,\n      'truckType': this.truckType,\n      'marketSegment': this.mktsegment,\n      'shipmentId': this.shipmentId,\n      'type': loadslipStatus.created + \",\" + loadslipStatus.printed + \",\" + loadslipStatus.loading + \",\" + loadslipStatus.loaded + \",\" + loadslipStatus.sentSAP,\n      'status': this.statusList,\n      \"lsStatus\": this.loadslipstatustype,\n      \"truckNumber\": this.truckNumber,\n      \"containerNum\": this.container,\n      \"source\": this.sourceCode,\n      \"transporter\": this.transporter,\n      \"destCountry\": obj ? (obj.value) : '',\n      'itemCategories' : this.draftedLoadslipCategory\n      ,\n              \"trackingConsentStatus\": this.trackingConsentStatus,\n              \"consentPhoneTelecom\": this.consentPhoneTelecom,\n    }\n\n    if (this.fromDate != '' && this.fromDate != null) \n    {\n      if (this.toDate != '' && this.toDate != null) {\n        this.getDraftLoadSlipData(bodyData);\n      } else {\n        this.toastr.error(\"Please select To Date\", \"!Error\")\n      }\n    } else {\n      this.getDraftLoadSlipData(bodyData);\n    }\n  }\n\n\n\n  // export to excel file\n  export() {\n    if (this.draftedLoadslipsList.length > 0) {\n      this.isLoading = true;\n      this.forDateValidation();\n      let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n      let data = {\n        'fromCreatedDate': this.fromCreatedDate,\n        'toCreatedDate': this.toCreatedDate,\n        'marketSegment': this.mktsegment,\n        'destination': this.destination,\n        'invoice': this.invoice,\n        'itemId': this.materialCode,\n        'loadslipId': this.loadSlipId,\n        'stopType': this.type,\n        'transhipment': this.transhipment,\n        'shipmentId': this.shipmentId,\n        'truckType': this.truckType,\n        'type': loadslipStatus.created + \",\" + loadslipStatus.printed + \",\" + loadslipStatus.loading + \",\" + loadslipStatus.loaded + \",\" + loadslipStatus.sentSAP,\n        'status': this.statusList,\n        'pageLength': this.page.count,\n        \"lsStatus\": this.loadslipstatustype,\n        \"truckNumber\": this.truckNumber,\n        \"containerNum\": this.container,\n        \"source\": this.sourceCode,\n        \"transporter\": this.transporter,\n        \"destCountry\": obj ? (obj.value) : '',\n        'itemCategories' : this.draftedLoadslipCategory,\n      }\n      this.service.post_service(ApiserviceService.apisList.getDraftedLoadslips, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          let newPrintLoadslipData = response['data'].loadslips;\n          let excelRawData = newPrintLoadslipData;\n          let newExcelData = [];\n          for (let i = 0; i < excelRawData.length; i++) {\n            let data = {\n              \"Load Slip ID\": excelRawData[i].loadslipId,\n              \"Shipment Id\": excelRawData[i].shipmentId,\n              \"Source\": excelRawData[i].sourceLoc,\n              \"Destination\": excelRawData[i].destLoc,\n              \"Truck Number\": excelRawData[i].truckNumber,\n              \"Dest Description\": excelRawData[i].destDis,\n              \"Type\": excelRawData[i].stopType,\n              \"Order Type\": excelRawData[i].type,\n              \"Created Date\": this.service.customDateTimeFormat(excelRawData[i].createdDate),\n              \"Truck/Container Type\": excelRawData[i].truckType,\n              \"Transporter\": excelRawData[i].servprov,\n              \"STO/SO\": excelRawData[i].stoSoNum,\n              \"Delivery\": excelRawData[i].delivery,\n              \"Invoice\": excelRawData[i].sapInvoice,\n              \"Invoice Date\": this.service.customDateTimeFormat(excelRawData[i].sapInvoiceDate),\n              \"Actual Arrival Date\": excelRawData[i].actualArrivalDate,\n              \"LR\": excelRawData[i].lrNum,\n              \"LR Date\": this.service.customDateTimeFormat(excelRawData[i].lrDate),\n              \"Container\": excelRawData[i].containerNum,\n              \"Country of Destination\": excelRawData[i].destCountryName,\n              \"DIT Quantity\": excelRawData[i].ditQty,\n              \"Shortage Quantity\": excelRawData[i].shortQty,\n              \"Total Loaded\": excelRawData[i].qty,\n              \"Tyre\": +excelRawData[i].totTyres,\n              \"Tube\": +excelRawData[i].totTubes,\n              \"Flap\": +excelRawData[i].totFlaps,\n              \"Valve\": +excelRawData[i].totValve,\n              \"PCTR\": (excelRawData[i].totPctr) ? (+excelRawData[i].totPctr) : 0,\n              \"Other Qty\": (excelRawData[i].otherQty) ? (+excelRawData[i].otherQty) : 0,\n              \"Total Qty\": +excelRawData[i].totQty,\n              \"GRN\": excelRawData[i].grn,\n              \"GRN Date\": this.service.customDateTimeFormat(excelRawData[i].grnDate),\n              \"Transhipment\": excelRawData[i].transhipment,\n              \"Freight Available\": excelRawData[i].freightAvailability,\n              \"Item Category\": excelRawData[i].itemCategory,\n              \"TTE Quantity\": excelRawData[i].tteQty ? +excelRawData[i].tteQty.toFixed(2) : 0,\n              \"TTE Util\": excelRawData[i].tteUtil ? +excelRawData[i].tteUtil .toFixed(2) : 0,\n              \"Weight Util\": excelRawData[i].weightUtil ? +excelRawData[i].weightUtil.toFixed(2) : 0,\n              \"Volume Util\": excelRawData[i].volumeUtil ? +excelRawData[i].volumeUtil.toFixed(2) : 0 ,\n              \"Drop Sequence\": excelRawData[i].dropSeq,\n              \"Arrived Bay\": this.service.customDateTimeFormat(excelRawData[i].bayArrivedDate),\n              \"Print LS\": this.service.customDateTimeFormat(excelRawData[i].lsPrintDate),\n              \"Send For Barcode\": this.service.customDateTimeFormat(excelRawData[i].sendForBarcodeDate),\n              \"Loading Start\": this.service.customDateTimeFormat(excelRawData[i].loadingStartDate),\n              \"Loading End\": this.service.customDateTimeFormat(excelRawData[i].loadingEndDate),\n              \"Confirm\": this.service.customDateTimeFormat(excelRawData[i].confirmedDate),\n              \"Release\": this.service.customDateTimeFormat(excelRawData[i].releaseDate),\n              \"Insert User\": excelRawData[i].insertUser,\n              \"Update User\": excelRawData[i].updateUser,\n              \"Status\": excelRawData[i].status,\n              // \"Integration Status\": excelRawData[i].integrationStatus,\n              // \"Integration Message\": \"\",\n              \"Loadslip Comments\": excelRawData[i].comments,\n              \"SAP invoice weight(Kg)\": excelRawData[i].sapInvWeight,\n              \"SAP invoice value(INR)\": excelRawData[i].sapInvValue,\n              \"Eway bill No\": excelRawData[i].ewayBillNo,\n              \"MKT Seg\": excelRawData[i].marketSegment,\n              \"Cust Inv Num\": excelRawData[i].customInvoiceNumber,\n              \"Tracking Consent Status\": excelRawData[i].trackingConsentStatus,\n              \"Consent Phone Tracking\": excelRawData[i].consentPhoneTelecom\n              \n            }\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'DraftedLoadslips.xlsx');\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.toastr.error(\"No records found to export\", \"Error!\");\n    }\n\n  }\n\n  //set value destination\n  setDestination(value) {\n    //  this.destinationDesc = value;\n    this.destination = value;\n  }\n\n  //set value to destination description\n  setDestDescription(value) {\n    this.destinationDesc = value;\n  }\n\n  getUserDestinationList(event) {\n    this.destination = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.getDestinationDescriptionDataList + event.target.value).subscribe(response => {\n        if (response['data']) {\n          this.descriptionList = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  getMarketSegment() {\n    this.service.get_service(ApiserviceService.apisList.getMarketSegment).subscribe(response => {\n      if (response['statusCode'] == '200') {\n        this.mktsegmentList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Some Thing Went Wrong !!!')\n      }\n    })\n  }\n\n  //server side pagination\n  datatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    this.forDateValidation();\n    let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n    let bodyData = {\n      'fromCreatedDate': this.fromCreatedDate,\n      'toCreatedDate': this.toCreatedDate,\n      'index': pageInfo.offset,\n      'pageLength': pageInfo.pageSize,\n      'marketSegment': this.mktsegment,\n      'destination': this.destination,\n      'invoice': this.invoice,\n      'itemId': this.materialCode,\n      'loadslipId': this.loadSlipId,\n      'stopType': this.type,\n      'transhipment': this.transhipment,\n      'shipmentId': this.shipmentId,\n      'truckType': this.truckType,\n      'type': loadslipStatus.created + \",\" + loadslipStatus.printed + \",\" + loadslipStatus.loading + \",\" + loadslipStatus.loaded + \",\" + loadslipStatus.sentSAP,\n      'status': this.statusList,\n      \"lsStatus\": this.loadslipstatustype,\n      \"truckNumber\": this.truckNumber,\n      \"containerNum\": this.container,\n      \"source\": this.sourceCode,\n      \"transporter\": this.transporter,\n      \"destCountry\": obj ? (obj.value) : '',\n      'itemCategories' : this.draftedLoadslipCategory,\n    }\n    this.getDraftLoadSlipData(bodyData);\n\n  }\n\n  //cancel Loadslip \n  cancelLoadslip(loadslipId) {\n    this.isLoading = true;\n    let data;\n    this.service.post_service(ApiserviceService.apisList.cancelLoadslip + \"/\" + loadslipId, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        // let responseData = response['data'].loadslips;\n        let modifybleIndex = this.draftedLoadslipsList.findIndex(resp => resp.loadslipId == loadslipId);\n        this.draftedLoadslipsList.splice(modifybleIndex, 1)\n        // this.draftedLoadslipsList[modifybleIndex]=responseData;\n        this.draftedLoadslipsList = [...this.draftedLoadslipsList]\n        // this.page.count = response['data'].total;\n        // this.page.limit = response['data'].pageLength;\n        this.toastr.success(response['message']);\n        $('#confirmDelete').modal('hide');\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        $('#confirmDelete').modal('hide');\n\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n      $('#confirmDelete').modal('hide');\n\n    })\n  }\n\n  viewDraftLoadSlipData(loadSlipData) {\n    let loadSlipId = loadSlipData.loadslipId;\n    let type = loadSlipData.type;\n    // For DP_REP View loadslip data can't be edit only view , that why we are navigating view only pages \n    // Else condition we are navigating to \n    if (this.check_Role_DP_REP == 'DP_REP' || this.check_Role_DP_REP == 'L1_MGR' || this.check_Role_DP_REP == 'L2_MGR' ) {\n      if (loadSlipId != null) {\n        if (type == 'FGS_EXP') {\n          this.router.navigateByUrl('/load-slip-view-for-export/' + loadSlipId);\n        } else if (type == 'JIT_OEM') {\n          this.router.navigateByUrl('/load-slip-view-for-jit/' + loadSlipId);\n        } else {\n          this.router.navigateByUrl('/load-slip-view/' + loadSlipId);\n        }\n      }\n    } else {\n      if (loadSlipId != null) {\n        if (type == 'FGS_EXP') {\n          this.router.navigateByUrl('/fgs/create-load-slip-for-export/' + loadSlipId);\n        } else if (type == 'JIT_OEM') {\n          this.router.navigateByUrl('/jit/create-load-slip-for-jit/' + loadSlipId);\n        } else {\n          this.router.navigateByUrl('/fgs/create-load-slip/' + loadSlipId);\n        }\n      }\n    }\n\n  }\n\n  // filter Transporter details\n  getfilterTransporter(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.transporterList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?transporter=' + filtervalue).subscribe(response => {\n        this.transporterList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // check the cancel loadslip or not\n  // IsCancelLoadslip(row) {\n  //   //for FGS ROLE\n  //   if ((this.service.checkRole() == this.roles.fgsOperations1) || (this.service.checkRole() == this.roles.fgsOperations2) || (this.service.checkRole() == this.roles.fgsOperations3) ||\n  //     (this.service.checkRole() == this.roles.fgsOperations4)) {\n  //     if (!row.sapInvoiceAvailable && (row.type != 'FGS_EXP')) {\n  //       return true;\n  //     } else if (row.type == 'FGS_EXP') {\n  //       return true;\n  //     } else {\n  //       return false\n  //     }\n  //     //for RDC \n  //   } else if (this.service.checkRole() == this.roles.rdc_PLN) {\n  //     if (!row.sapInvoiceAvailable && (row.type != 'RDC_EXP')) {\n  //       return true;\n  //     } else if (row.type == 'RDC_EXP') {\n  //       return true;\n  //     } else {\n  //       return false\n  //     }\n  //     // For JIT\n  //   } else if (this.service.checkRole() == this.roles.JIT_OPERATION) {\n  //     if (!row.sapInvoiceAvailable && (row.type != 'JIT_OEM')) {\n  //       return true;\n  //     } else if (row.type == 'JIT_OEM') {\n  //       return true;\n  //     } else {\n  //       return false\n  //     }\n  //   }\n  // }\n\n  showIntegrationMessage(data, type) {\n    if (type == 'loadslipComments') {\n      this.integrationMsg = data.comments;\n    } else {\n      this.integrationMsg = data.integrationMsg;\n    }\n    $('#integrationMsgModal').modal('show');\n\n  }\n\n  showComments(comment, row) {\n    this.loadslipComments = comment;\n    this.rowData  = row;\n    $(\"#myModal\").modal('show');\n  }\n\n  save(form: NgForm) {\n    if (form.valid) {\n\n      this.isLoading = true;\n      // let data = {\n      //   \"comments\": this.loadslipComments,\n      //   \"loadSlipId\": this.rowloadslipId\n      // }\n      // Sending the entire row to the backend\n      let data = this.rowData;\n      data.comments = this.loadslipComments;\n      this.service.post_service(ApiserviceService.apisList.saveloadslipComments, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.isLoading = false;\n          let index = this.draftedLoadslipsList.findIndex(item => item.loadslipId == response['data'].loadslipId);\n          this.draftedLoadslipsList[index] = response['data'];\n          this.draftedLoadslipsList = [...this.draftedLoadslipsList]\n          this.toastr.success(response['message']);\n          $(\"#myModal\").modal('hide');\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // Filter source location\n  getfilterSource(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.sourceList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        console.log(\"respio\", response)\n        this.sourceList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  confirmCancelAction(loadslipId){\n    this.selectedLoadslipId = loadslipId;\n    $('#confirmDelete').modal('show');\n  }\n\n  goToLink(url: string){\n    window.open(url, \"_blank\");\n  }\n\n}\n\n"],"sourceRoot":""}