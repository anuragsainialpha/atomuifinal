{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/masters/freight/mt-truck-dedicated/mt-truck-dedicated.component.html","webpack:///./src/app/masters/freight/mt-truck-dedicated/mt-truck-dedicated.component.scss","webpack:///./src/app/masters/freight/mt-truck-dedicated/mt-truck-dedicated.component.ts","webpack:///./src/app/masters/freight/mt-truck-dedicated/mt-truck-dedicated.module.ts"],"names":[],"mappings":"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","file":"masters-freight-mt-truck-dedicated-mt-truck-dedicated-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"mt-item-header\\\">\\n    <b> PaaS Master &gt; Truck Dedicated </b>\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <!-- <button class=\\\"theme-small-button\\\" (click)=\\\"upload()\\\" matTooltip=\\\"Upload excel\\\">\\n        <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i>\\n      </button> -->\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"displayAddForm()\\\" matTooltip=\\\"Add New Truck Dedicated\\\">\\n        <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <!-- <button class=\\\"theme-small-button\\\" [routerLink]=\\\"['/admin/paas-masters/upload-location-scan']\\\" matTooltip=\\\"Upload excel\\\">\\n        <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i>\\n      </button> -->\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n\\n\\n\\n\\n\\n\\n\\n\\n  <div class=\\\"mt-item-fields\\\">\\n    <div class=\\\"col-md-12 row\\\">\\n      <div class=\\\"col-md-12 padding-right-40\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"formPicker\\\" placeholder=\\\"From Expiry Date\\\"\\n                  [(ngModel)]=\\\"fromExpiryDate\\\" name=\\\"fromExpiryDate\\\" (dateChange)=\\\"addEvent('fromExpiryDate', $event)\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"formPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #formPicker disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"toPicker\\\" [min]=\\\"fromExpiryDate\\\" placeholder=\\\"To Expiry Date\\\"\\n                  [(ngModel)]=\\\"toExpiryDate\\\" name=\\\"toExpiryDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toPicker [disabled]=\\\"!fromExpiryDate\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Source\\\" (keyup)=\\\"getfilterSource($event, 'SEARCH')\\\" autocomplete=\\\"off\\\"\\n                [matAutocomplete]=\\\"sourceAutocomplete\\\" [(ngModel)]=\\\"sourceLoc\\\" name=\\\"sourceLoc\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\">\\n                <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n                  <span matTooltip={{list.value}}>{{list.value}} - ({{list.description}})</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput aria-label=\\\"Destination\\\" placeholder=\\\"Destination\\\"\\n                  (keyup)=\\\"getfilterDestination($event, 'SEARCH')\\\" autocomplete=\\\"off\\\"\\n                  [matAutocomplete]=\\\"destinationAutocomplete\\\" [(ngModel)]=\\\"destLoc\\\" name=\\\"destLoc\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #destinationAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\">\\n                    <!-- (click)=\\\"setDestDescription(list.description)\\\"\\n              (onSelectionChange)=\\\"setDestDescription(list.valdescriptionue)\\\" -->\\n                    <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"col-md-2 pr-0\\\">\\n      <div class=\\\"form-group\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"State\\\"\\n            [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destination\\\"\\n            (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n          <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n            <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n              (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n              <span>({{list.description}})</span>\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </div>\\n    </div> -->\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Truck/Container Type\\\" [(ngModel)]=\\\"truckType\\\" name=\\\"trcktype\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let truck of truckList\\\" [value]=\\\"truck.value\\\"> {{truck.value}} </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput aria-label=\\\"Transporter\\\" placeholder=\\\"Transporter\\\"\\n                  (keyup)=\\\"getfilterTransporter($event,'SEARCH')\\\" autocomplete=\\\"off\\\"\\n                  [matAutocomplete]=\\\"transporterAutocomplete\\\" [(ngModel)]=\\\"servprov\\\" name=\\\"servprov\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #transporterAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of transporterList\\\" [value]=\\\"list.value\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput [(ngModel)]=\\\"truckNumber\\\" name=\\\"truckNumber\\\" placeholder=\\\"Truck Number\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"pull-right\\\">\\n        <div class=\\\"search-fileds\\\">\\n          <button class=\\\"theme-small-button\\\" (click)=\\\"doSearch()\\\" matTooltip=\\\"Search\\\">\\n            <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <button class=\\\"theme-delete-button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear All\\\">\\n            <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n\\n  <div class=\\\"mt-item-table\\\">\\n    <div>\\n      <!-- class='material ngx-table-custom-scroll  ngx-table-tr-custom-scroll' -->\\n      <!-- <ngx-datatable class='material ngx-table-custom-scroll  ngx-table-tr-custom-scroll' #table \\n        [rows]='resultDataList' [externalPaging]=\\\"true\\\"\\n        (page)=\\\"datatablePageData($event)\\\" [scrollbarH]=\\\"true\\\" [headerHeight]=\\\"50\\\" \\n        [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\n        [limit]=\\\"page.limit\\\" [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\"> -->\\n      <ngx-datatable class='material ngx-table-custom-scroll  ngx-table-tr-custom-scroll' #table [columnMode]=\\\"'force'\\\"\\n        [rows]='resultDataList' [externalPaging]=\\\"true\\\" (page)=\\\"datatablePageData($event)\\\" [scrollbarH]=\\\"false\\\"\\n        [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"page.limit\\\" [count]=\\\"page.count\\\"\\n        [offset]=\\\"page.offset\\\">\\n\\n        <ngx-datatable-column name=\\\"Source\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"source\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.sourceLoc}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Source Desc\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"scannable\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.sourceDesc}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Destination\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"destLoc\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.destLoc}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Dest Desc\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"destDesc\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.destDesc}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Service Provider\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"servprov\\\"\\n          [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.servprov}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Truck Type\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"truckType\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.truckType}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Truck Number\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"truckNumber\\\"\\n          [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.truckNumber}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Expiry Date\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"expiryDate\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.expiryDate ? (row.expiryDate | customDateFormat | date:'dd-MMM-yyyy') : '--'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"insertUser\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.insertUser}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Insert Date\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"insertDate\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.insertDate ? (row.insertDate | customDateFormat | date:'dd-MMM-yyyy HH:mm') : '--'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Update User\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"upadteUser\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.updateUser}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Update Date\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"updateDate\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.updateDate ? (row.updateDate | customDateFormat | date:'dd-MMM-yyyy HH:mm') : '--'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <!-- <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"showComments(row.comments,row.loadslipId)\\\"></i> -->\\n        <ngx-datatable-column name=\\\"Action\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n            <button class=\\\"theme-small-button btn\\\" matTooltip=\\\"Modify Item\\\" (click)=\\\"showUpdateModel(row)\\\">\\n              <i class=\\\"fa fa-edit fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n            <button class=\\\"theme-delete-button btn\\\" matTooltip=\\\"Delete plan\\\" (click)=\\\"confirmDeleteAction(row)\\\">\\n              <i class=\\\"fa fa-trash-o fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <!-- Footer Template starts -->\\n        <ngx-datatable-footer>\\n          <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n            let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n            <div class=\\\"page-count\\\">\\n              <span *ngIf=\\\"selectedCount\\\">\\n                {{selectedCount.toLocaleString()}} Selected |\\n              </span>\\n              Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n            (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n              {{(rowCount)}} records.\\n            </div>\\n            <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n              [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\"\\n              [size]=\\\"pageSize\\\" [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n              (change)=\\\"table.onFooterPage($event)\\\">\\n            </datatable-pager>\\n          </ng-template>\\n        </ngx-datatable-footer>\\n        <!-- Footer Template Ends -->\\n      </ngx-datatable>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"editTruck\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"(f.form.valid && validateUpadteTruckData())\\\">\\n        <!-- Modal Header -->\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title text-primary\\\">Update Truck Dedicated</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"col-md-12 \\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"expiryUpdatePicker\\\" placeholder=\\\"Expiry Date\\\"\\n                  [(ngModel)]=\\\"selectedTruck.expiryDate\\\" name=\\\"selectedTruck.expiryDate\\\" #updateExpiryDate=\\\"ngModel\\\"\\n                  required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"expiryUpdatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #expiryUpdatePicker disabled=\\\"false\\\"></mat-datepicker>\\n                <mat-error *ngIf=\\\"(f.submitted && updateExpiryDate.invalid)\\\">\\n                  <p *ngIf=\\\"updateExpiryDate.errors.required\\\"> Expiry Date is\\n                    <strong>required</strong>\\n                  </p>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12 \\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Source\\\" (keyup)=\\\"getfilterSource($event, 'UPDATE')\\\" autocomplete=\\\"off\\\"\\n                [matAutocomplete]=\\\"sourceUpdateAutocomplete\\\" [(ngModel)]=\\\"selectedTruck.sourceLoc\\\"\\n                name=\\\"selectedTruck.sourceLoc\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                #updateSourceLoc=\\\"ngModel\\\" required>\\n              <mat-autocomplete #sourceUpdateAutocomplete=\\\"matAutocomplete\\\">\\n                <mat-option *ngFor=\\\"let list of sourceListUpdate\\\" [value]=\\\"list.value\\\">\\n                  <span matTooltip={{list.value}}>{{list.value}} - ({{list.description}})</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n              <mat-error *ngIf=\\\"(f.submitted && updateSourceLoc.invalid)\\\">\\n                <p *ngIf=\\\"updateSourceLoc.errors.required\\\"> Source is\\n                  <strong>required</strong>\\n                </p>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput aria-label=\\\"Destination\\\" placeholder=\\\"Destination\\\"\\n                  (keyup)=\\\"getfilterDestination($event, 'UPDATE')\\\" autocomplete=\\\"off\\\"\\n                  [matAutocomplete]=\\\"destinationUpdateAutocomplete\\\" [(ngModel)]=\\\"selectedTruck.destLoc\\\"\\n                  name=\\\"selectedTruck.destLoc\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" #updateDestLoc=\\\"ngModel\\\"\\n                  required>\\n                <mat-autocomplete #destinationUpdateAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of destinationListUpdate\\\" [value]=\\\"list.value\\\">\\n                    <!-- (click)=\\\"setDestDescription(list.description)\\\"\\n                      (onSelectionChange)=\\\"setDestDescription(list.valdescriptionue)\\\" -->\\n                    <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n                <mat-error *ngIf=\\\"(f.submitted && updateDestLoc.invalid)\\\">\\n                  <p *ngIf=\\\"updateDestLoc.errors.required\\\"> Destination is\\n                    <strong>required</strong>\\n                  </p>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"col-md-2 pr-0\\\">\\n              <div class=\\\"form-group\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                  <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"State\\\"\\n                    [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destination\\\"\\n                    (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                  <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n                    <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                      (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                      <span>({{list.description}})</span>\\n                    </mat-option>\\n                  </mat-autocomplete>\\n                </mat-form-field>\\n              </div>\\n            </div> -->\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Truck/Container Type\\\" [(ngModel)]=\\\"selectedTruck.truckType\\\"\\n                  name=\\\"selectedTruck.truckType\\\" #updateTruckType=\\\"ngModel\\\" required>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let truck of truckList\\\" [value]=\\\"truck.value\\\"> {{truck.value}} </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"(f.submitted && updateTruckType.invalid)\\\">\\n                  <p *ngIf=\\\"updateTruckType.errors.required\\\"> Truck Type is\\n                    <strong>required</strong>\\n                  </p>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12 \\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput aria-label=\\\"Transporter\\\" placeholder=\\\"Transporter\\\"\\n                  (keyup)=\\\"getfilterTransporter($event,'UPDATE')\\\" autocomplete=\\\"off\\\"\\n                  [matAutocomplete]=\\\"transporterUpdateAutocomplete\\\" [(ngModel)]=\\\"selectedTruck.servprov\\\"\\n                  name=\\\"selectedTruck.servprov\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                  #updateTransporter=\\\"ngModel\\\" required>\\n                <mat-autocomplete #transporterUpdateAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of transporterListUpdate\\\" [value]=\\\"list.value\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n                <mat-error *ngIf=\\\"(f.submitted && updateTransporter.invalid)\\\">\\n                  <p *ngIf=\\\"updateTransporter.errors.required\\\"> Transporter is\\n                    <strong>required</strong>\\n                  </p>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput [(ngModel)]=\\\"selectedTruck.truckNumber\\\" name=\\\"selectedTruck.truckNumber\\\"\\n                  placeholder=\\\"Truck Number\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                  #updateTruckNumber=\\\"ngModel\\\">\\n                <mat-error *ngIf=\\\"(f.submitted && updateTruckNumber.invalid)\\\">\\n                  <p *ngIf=\\\"updateTruckNumber.errors.required\\\"> Truck Number is\\n                    <strong>required</strong>\\n                  </p>\\n                </mat-error>\\n              </mat-form-field>\\n\\n            </div>\\n          </div>\\n        </div>\\n        <!-- Modal footer -->\\n        <div class=\\\"modal-footer\\\">\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" >Close</button> -->\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btm-action-btn\\\">Update</button>\\n          <button type=\\\"button\\\" mat-raised-button class=\\\"mat-default\\\" color=\\\"default\\\"\\n            data-dismiss=\\\"modal\\\">Close</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<br><br>\\n\\n\\n\\n\\n\\n\\n\\n<!--                         \\n                    <input matInput placeholder=\\\"Location Id\\\" [(ngModel)]=\\\"locationIdF\\\" name=\\\"locationIdF\\\" required\\n                      #qty=\\\"ngModel\\\">\\n                    <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                      <p *ngIf=\\\"qty.errors.required\\\">Location Id is\\n                        <strong>required</strong>\\n                      </p>\\n                    </mat-error> -->\\n<!-- <mat-form-field appearance=\\\"standard\\\">\\n                              <mat-label>Location Id</mat-label>\\n                              <input matInput aria-label=\\\"Location Id\\\" (keyup)=\\\"getfilterDestination($event)\\\" autocomplete=\\\"off\\\"\\n                                [matAutocomplete]=\\\"statesAutocomplete\\\" [(ngModel)]=\\\"locationIdF\\\" name=\\\"locationIdF\\\"\\n                                #locationIdF=\\\"ngModel\\\" required>\\n                              <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                                <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\">\\n                                  <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                                </mat-option>\\n                              </mat-autocomplete>\\n                              <mat-error *ngIf=\\\"(f.submitted && destinationLocation.invalid)\\\">\\n                                <p *ngIf=\\\"destinationLocation.errors.required\\\">Location Id is\\n                                  <strong>required</strong>\\n                                </p>\\n                              </mat-error>\\n                            </mat-form-field> -->\\n\\n\\n<div class=\\\"mt-item-fields\\\" *ngIf=\\\"displayForm\\\">\\n  <div class=\\\"col-md-12 padding-right-40\\\">\\n    <mat-card>\\n      <form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && validateSaveTruck()\\\">\\n        <h4 class=\\\"mt-item-header text-center text-primary\\\">\\n          <b> Add Truck Dedicated </b></h4>\\n        <br>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 \\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"expiryPicker\\\" placeholder=\\\"Expiry Date\\\"\\n                  [(ngModel)]=\\\"newTruck.expiryDate\\\" name=\\\"newTruck.expiryDate\\\" #expiryDate=\\\"ngModel\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"expiryPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #expiryPicker disabled=\\\"false\\\"></mat-datepicker>\\n                <mat-error *ngIf=\\\"(f.submitted && expiryDate.invalid)\\\">\\n                  <p *ngIf=\\\"expiryDate.errors.required\\\"> Expiry Date is\\n                    <strong>required</strong>\\n                  </p>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 \\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Source\\\" (keyup)=\\\"getfilterSource($event, 'ADD')\\\" autocomplete=\\\"off\\\"\\n                [matAutocomplete]=\\\"sourceAddAutocomplete\\\" [(ngModel)]=\\\"newTruck.sourceLoc\\\" name=\\\"newTruck.sourceLoc\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" required #sourceLoc=\\\"ngModel\\\">\\n              <mat-autocomplete #sourceAddAutocomplete=\\\"matAutocomplete\\\">\\n                <mat-option *ngFor=\\\"let list of sourceListAdd\\\" [value]=\\\"list.value\\\">\\n                  <span matTooltip={{list.value}}>{{list.value}} - ({{list.description}})</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n              <mat-error *ngIf=\\\"(f.submitted && sourceLoc.invalid)\\\">\\n                <p *ngIf=\\\"sourceLoc.errors.required\\\"> Source Location is\\n                  <strong>required</strong>\\n                </p>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput aria-label=\\\"Destination\\\" placeholder=\\\"Destination\\\"\\n                  (keyup)=\\\"getfilterDestination($event, 'ADD')\\\" autocomplete=\\\"off\\\"\\n                  [matAutocomplete]=\\\"destinationAddAutocomplete\\\" [(ngModel)]=\\\"newTruck.destLoc\\\" name=\\\"newTruck.destLoc\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\" required #destLoc=\\\"ngModel\\\">\\n                <mat-autocomplete #destinationAddAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of destinationListAdd\\\" [value]=\\\"list.value\\\">\\n                    <!-- (click)=\\\"setDestDescription(list.description)\\\"\\n                    (onSelectionChange)=\\\"setDestDescription(list.valdescriptionue)\\\" -->\\n                    <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                  </mat-option>\\n\\n                </mat-autocomplete>\\n                <mat-error *ngIf=\\\"(f.submitted && destLoc.invalid)\\\">\\n                  <p *ngIf=\\\"destLoc.errors.required\\\"> Destination Loc is\\n                    <strong>required</strong>\\n                  </p>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"State\\\"\\n                  [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destination\\\"\\n                  (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                    (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                    <span>({{list.description}})</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div> -->\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Truck/Container Type\\\" [(ngModel)]=\\\"newTruck.truckType\\\"\\n                  name=\\\"newTruck.truckType\\\" #truckType=\\\"ngModel\\\" required>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let truck of truckList\\\" [value]=\\\"truck.value\\\"> {{truck.value}} </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"(f.submitted && truckType.invalid)\\\">\\n                  <p *ngIf=\\\"truckType.errors.required\\\"> Truck Type is\\n                    <strong>required</strong>\\n                  </p>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 \\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput aria-label=\\\"Transporter\\\" placeholder=\\\"Transporter\\\"\\n                  (keyup)=\\\"getfilterTransporter($event,'ADD')\\\" autocomplete=\\\"off\\\"\\n                  [matAutocomplete]=\\\"transporterAddAutocomplete\\\" [(ngModel)]=\\\"newTruck.servprov\\\"\\n                  name=\\\"newTruck.servprov\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" required\\n                  #transpoter=\\\"ngModel\\\">\\n                <mat-autocomplete #transporterAddAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of transporterListAdd\\\" [value]=\\\"list.value\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n                <mat-error *ngIf=\\\"(f.submitted && transpoter.invalid)\\\">\\n                  <p *ngIf=\\\"transpoter.errors.required\\\"> Transporter is\\n                    <strong>required</strong>\\n                  </p>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput [(ngModel)]=\\\"newTruck.truckNumber\\\" name=\\\"newTruck.truckNumber\\\"\\n                  placeholder=\\\"Truck Number\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" required\\n                  #truckNumber=\\\"ngModel\\\">\\n                <mat-error *ngIf=\\\"(f.submitted && truckNumber.invalid)\\\">\\n                  <p *ngIf=\\\"truckNumber.errors.required\\\"> Truck Number is\\n                    <strong>required</strong>\\n                  </p>\\n                </mat-error>\\n              </mat-form-field>\\n\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pull-right\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" matTooltip=\\\"Save\\\">\\n              <!-- <i class=\\\"fa fa-fa-floppy fa-2x\\\" aria-hidden=\\\"true\\\" style=\\\"color: white\\\"></i> -->\\n              Save\\n            </button>\\n            <!-- <button class=\\\"theme-delete-button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear All\\\">\\n              <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> \\n            </button> -->\\n          </div>\\n        </div>\\n      </form>\\n    </mat-card>\\n  </div>\\n</div>\\n\\n\\n<!-- Confirm Delete modal -->\\n<div class=\\\"modal\\\" id=\\\"confirmDelete\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <form name=\\\"form\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title text-primary\\\">Are you sure you want to delete</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"errors\\\" class=\\\"btm-action-btn\\\"\\n            (click)=\\\"rowlevelDeleteDedicated(selectedRow)\\\">Delete</button>\\n          <button type=\\\"button\\\" mat-raised-button class=\\\"mat-default\\\" color=\\\"default\\\"\\n            data-dismiss=\\\"modal\\\">Cancel</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hc3RlcnMvZnJlaWdodC9tdC10cnVjay1kZWRpY2F0ZWQvbXQtdHJ1Y2stZGVkaWNhdGVkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiserviceService } from 'src/app/services/api/apiservice.service';\nimport { UiUtil } from 'src/app/uiUtil';\nimport { ToastrService } from 'ngx-toastr';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport * as moment from 'moment';\nimport { NgForm } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MatDialog } from '@angular/material';\nimport * as XLSX from 'xlsx';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-mt-truck-dedicated',\n  templateUrl: './mt-truck-dedicated.component.html',\n  styleUrls: ['./mt-truck-dedicated.component.scss']\n})\nexport class MtTruckDedicatedComponent implements OnInit {\n\n  isLoading: boolean = false;\n  isShow: boolean = true;\n\n  // salesSku1:any = \"\";\n  // salesSku:any = \"\";\n  // itemId:any = \"\";\n  // compQty:any = \"\";\n  // itemSeq:any = \"\";\n  // oeCode:any = \"\";\n  // itemClassification: any = \"\";\n  // itemDescription: any = \"\";\n  // itemType: any = \"\";\n  // itemGroup: any = \"\";\n  // tte: any = \"\";\n  // loadFactor: any = \"\";\n  // formattedDate: string;\n  // \n\n\n  effectiveDate: any = \"\";\n  formattedDate: string;\n\n  locationId: any = \"\";\n  scannable: any = \"\";\n  itemCategory: any = \"\";\n  insertUser: any = \"\";\n  insertDate: any = \"\";\n  updateUser: any = \"\";\n  updateDate: any = \"\";\n\n\n  locationIdF: any = \"\";\n  scannableF: any = \"\";\n  itemCategoryF: any = \"\";\n\n  locationIdu: any = \"\";\n  scannableu: any = \"\";\n  itemCategoryu: any = \"\";\n\n\n  displayForm: boolean = false;\n  resultDataList: any[];\n  responseItemsList: any[];\n  scannableTypesList = ['Y', 'N'];\n  integrationMsg: string;\n\n  editing = {};\n\n  page = {\n    limit: 100,\n    count: 0,\n    offset: 0,\n    pageSize: 50\n  };\n\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  sourceLoc: string = '';\n  destLoc: string = '';\n  toExpiryDate: string = '';\n  fromExpiryDate: string = '';\n  servprov: string = '';\n  truckNumber: string = '';\n  truckType=[];\n  selectedTruck = {\n    id: null,\n    servprov: null,\n    sourceLoc: null,\n    sourceDesc: null,\n    destDesc: null,\n    destLoc: null,\n    truckType: null,\n    truckNumber: null,\n    expiryDate: null,\n    insertUser: null,\n    updateUser: null,\n    insertDate: null,\n    updateDate: null,\n  };\n  newTruck = {\n    servprov: null,\n    sourceLoc: null,\n    sourceDesc: null,\n    destDesc: null,\n    destLoc: null,\n    truckType: null,\n    truckNumber: null,\n    expiryDate: null,\n  };\n  sourceList = [];\n  truckList = [];\n  destinationList = [];\n  transporterList = [];\n  transporterListUpdate = [];\n  transporterListAdd = [];\n  destinationListUpdate = [];\n  destinationListAdd = [];\n  sourceListAdd = [];\n  sourceListUpdate = [];\n  selectedRow: any;\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"paas-master\");\n    let data = {};\n    this.getLocationIds();\n    this.getTruckTypeMasterData();\n    this.getTruckDedicatedList(data);\n  }\n\n  //show the filter\n  showFilter() {\n    this.isShow = !this.isShow\n  }\n\n  // Datatable Footer\n  onFooterPage(pageInfo){\n    console.log(pageInfo);\n    \n  }\n\n  emptySumm() {\n    return null;\n  }\n\n\n  locationIds: any[] = [];\n  scmGroupList: any[] = [];\n\n  getLocationIds() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getLocationIdsList).subscribe(response => {\n      //console.log(\"response array string: \"+JSON.stringify(response));\n      this.locationIds = response['data'];\n      this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  getTruckDedicatedList(data) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.getTruckDedicatedList, data).subscribe(response => {\n      //console.log(\"response array string: \"+JSON.stringify(response));\n      if (response['statusCode'] == 200) {\n        this.resultDataList = response['data'].mtTruckDedicatedDtos;\n        this.page.count = response['data'].total;\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n\n  displayAddForm() {\n    this.clearNewTruck();\n    if (this.displayForm)\n      this.displayForm = false;\n    else\n      this.displayForm = true;\n  }\n\n\n  foods: any[] = [\n    { value: 'Y', viewValue: 'Y' },\n    { value: 'N', viewValue: 'N' }\n  ];\n\n\n  ApprovalEditing = {};\n  pendingPlanList = [];\n\n\n  doSearch() {\n    this.table.offset = 0;\n    this.page.offset = 0;\n    let data = {\n      sourceLoc: this.sourceLoc,\n      destLoc: this.destLoc,\n      servprov: this.servprov,\n      toExpiryDate: this.toExpiryDate ? moment(new Date(this.toExpiryDate)).format(\"DD/MM/YYYY\") : null,\n      fromExpiryDate: this.fromExpiryDate ? moment(new Date(this.fromExpiryDate)).format(\"DD/MM/YYYY\") : null,\n      truckType: this.truckType,\n      truckNumber: this.truckNumber,\n    }\n    if (this.fromExpiryDate != '' && this.fromExpiryDate != null) {\n      if (this.toExpiryDate != '' && this.toExpiryDate != null) {\n        this.resultDataList = [];\n        this.getTruckDedicatedList(data);\n      } else {\n        this.toastr.error(\"Please select To Date\", \"!Error\")\n      }\n    } else {\n      this.getTruckDedicatedList(data);\n    }\n    \n\n    //this.toastr.error(\"Received http error 404. Please check service urlcccc\")\n  }\n\n  //server side pagination\n  datatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    let bodyData = {\n      index: pageInfo.offset,\n      sourceLoc: this.sourceLoc,\n      destLoc: this.destLoc,\n      servprov: this.servprov,\n      toExpiryDate: this.toExpiryDate ? moment(new Date(this.toExpiryDate)).format(\"DD/MM/YYYY\") : null,\n      fromExpiryDate: this.fromExpiryDate ? moment(new Date(this.fromExpiryDate)).format(\"DD/MM/YYYY\") : null,\n      truckType: this.truckType,\n      truckNumber: this.truckNumber,\n    }\n    this.getTruckDedicatedList(bodyData);\n  }\n\n  insertStatus: string = \"\";\n\n  addEvent(type, event) {\n    if (event.target.value) {\n       /* Checking if selected from date greater than to date.\n      Clearing the toDate field when from date greater than to date */\n      if(this.toExpiryDate && (this.fromExpiryDate > this.toExpiryDate)){\n        this.toExpiryDate = '';\n      }\n      // this.toExpiryDate = '';\n    }\n  }\n\n  // Filter source location\n  getfilterSource(event,typeofFilter) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.sourceList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        console.log(\"respio\", response)\n        if(typeofFilter === 'SEARCH'){\n          this.sourceList = response['data'].searchResult;\n        }\n        if(typeofFilter === 'UPDATE'){\n          this.sourceListUpdate = response['data'].searchResult;\n        }\n        if(typeofFilter === 'ADD'){\n          this.sourceListAdd = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n  //get filter destination result\n  getfilterDestination(event, typeofFilter) {\n    // this.destinationDesc = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.destinationList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        if(typeofFilter === 'SEARCH'){\n          this.destinationList = response['data'].searchResult;\n        }\n        if(typeofFilter === 'UPDATE'){\n          this.destinationListUpdate = response['data'].searchResult;\n        }\n        if(typeofFilter === 'ADD'){\n          this.destinationListAdd = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // filter Transporter details\n  getfilterTransporter(event, typeofFilter) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.transporterList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?transporter=' + filtervalue).subscribe(response => {\n        if(typeofFilter === 'SEARCH'){\n          this.transporterList = response['data'].searchResult;\n        }\n        if(typeofFilter === 'UPDATE'){\n          this.transporterListUpdate = response['data'].searchResult;\n        }\n        if(typeofFilter === 'ADD'){\n          this.transporterListAdd = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n  // for getting truck type master\n  getTruckTypeMasterData() {\n    this.service.get_service(ApiserviceService.apisList.truckTypeMasterData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.truckList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    })\n  }\n\n\n\n  showUpdateModel(row) {\n    let s = {...row};\n    this.selectedTruck = {...s};\n    let gettheDate = s.expiryDate;\n    let splittedData = gettheDate.split(\"/\");\n    let createNewDate = splittedData[1] + \"/\" + splittedData[0] + \"/\" + splittedData[2]\n    // Formatted new key for autopopulation of date for datepicker\n    this.selectedTruck.expiryDate = new Date(createNewDate).toISOString();\n    $(\"#editTruck\").modal('show');\n    row ={...row};\n  }\n\n  clearAll() {\n    this.sourceLoc = '';\n    this.destLoc = '';\n    this.toExpiryDate = '';\n    this.fromExpiryDate = '';\n    this.servprov = '';\n    this.truckType = [];\n    this.truckNumber = '';\n    this.sourceList = [];\n    this.destinationList = [];\n    this.transporterList = [];\n  }\n\n  // Refresh data\n  refreshData() {\n    this.isLoading = true;\n    this.clearAll();\n    this.table.offset = 0;\n    this.page.offset = 0;\n    let data = {};\n    this.getTruckDedicatedList(data);\n    // this.service.post_service(ApiserviceService.apisList.getMtItem, data).subscribe(response => {\n    //   if (response['statusCode'] == 200) {\n    //     let responseData = response['data'].mtOeBoms;\n    //     this.responseItemsList = responseData;\n    //     this.responseItemsList = [...this.responseItemsList]\n    //     // this.page.count = response['data'].total;\n    //     // this.page.limit = response['data'].pageLength;\n    //     this.isLoading = false;\n    //   } else {\n    //     this.isLoading = false;\n    //     this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n    //   }\n    // }, (err) => {\n    //   this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    //   this.isLoading = false;\n    // })\n  }\n\n\n\n\n  //UTILS  \n\n  formatDate(data) {\n    if (data != null && data) {\n      let formatted = new Date(data),\n        mnth = (\"0\" + (formatted.getMonth() + 1)).slice(-2),\n        day = (\"0\" + formatted.getDate()).slice(-2);\n      this.formattedDate = [day, this.getMonth(mnth), formatted.getFullYear()].join(\"-\");\n      this.effectiveDate = this.formattedDate;\n      return this.formattedDate;\n    } else {\n      this.effectiveDate = \"\";\n    }\n  }\n  month_names = {\n    \"01\": \"Jan\",\n    \"02\": \"Feb\",\n    \"03\": \"Mar\", \"04\": \"Apr\", \"05\": \"May\", \"06\": \"Jun\", \"07\": \"Jul\", \"08\": \"Aug\", \"09\": \"Sep\", \"10\": \"Oct\", \"11\": \"Nov\", 12: \"Dec\"\n  };\n\n  trimDate(date) {\n    if (date === \"\" || date === undefined)\n      return \"\";\n    else\n      var array = date.substring(0, 10).split(\"-\");\n    return array[2] + \"-\" + this.getMonth(array[1]) + \"-\" + array[0];\n  }\n\n  trimEmpty(val) {\n    if (val === \"\" || val === undefined)\n      return \"\";\n    else {\n      console.log(typeof val)\n      console.log(val + \"----\" + val.length);\n      // return val.trim();\n    }\n  }\n\n  getMonth(number) {\n    return this.month_names[number]\n  }\n  validateUpadteTruckData(){\n    if(this.selectedTruck.expiryDate){\n      // Expiry date is not null\n      if(this.selectedTruck.sourceLoc){\n        // When source is valid\n        if(this.selectedTruck.destLoc){\n         if(this.selectedTruck.sourceLoc !== this.selectedTruck.destLoc){\n           // When Dest Loc is valid\n           if(this.selectedTruck.servprov){\n            // when transporter is valid\n            if(this.selectedTruck.truckType){\n              // When truck type is not null\n              if(this.selectedTruck.truckNumber){\n                // When truck Number is not null\n                // Updating the truck Dedicated data\n                this.updateTruckData();\n              }else{\n                this.toastr.error('Please Enter the truck number', 'Error!');\n              }\n            }else{\n              this.toastr.error('Please select a Truck Type', 'Error!');\n            }\n          }else{\n            this.toastr.error('Please select a valid Transporter', 'Error!');\n          }\n         }else{\n          this.toastr.error('Destination cannot be same as source', 'Error!')\n         }\n        }else{\n          this.toastr.error('Please select a valid Dest Loc', 'Error!');  \n        }\n      }else{\n        this.toastr.error('Please select a valid Source Loc', 'Error!');\n      }\n\n    }else{\n      this.toastr.error('Please select the Expiry date', 'Error!');\n    }\n  }\n\n  updateTruckData(){\n   let selectedExpiryDate = this.selectedTruck.expiryDate;\n   this.selectedTruck.expiryDate = selectedExpiryDate ? moment(new Date(selectedExpiryDate)).format(\"DD/MM/YYYY\") : null\n   this.isLoading = true;\n   this.service.post_service(ApiserviceService.apisList.saveTruckDedicated, this.selectedTruck).subscribe(response => {\n      if(response['statusCode'] == 200){\n        let updatedRow = response['data'];\n        let index = this.resultDataList.findIndex(item => item.id === updatedRow.id);\n        this.resultDataList[index] = updatedRow;\n        this.resultDataList = [...this.resultDataList];\n        $(\"#editTruck\").modal('hide');\n        this.clearUpdateTruckFields();\n        this.clearSelectedTruck();\n        this.toastr.success(response['message'] ? response['message'] : 'Truck Dedicated Details Updated Successfully');\n        this.isLoading = false;\n      }else{\n        this.toastr.error(response['message'] ? response['message'] : 'Something went wrong...', 'Error!');\n     this.isLoading = false;   \n      }\n   },err => {\n     this.toastr.error(err ? err['message'] : 'Something went wrong...', 'Error!');\n     this.isLoading = false;\n   })\n  }\n\n  // Validating the truck dedicated data\n  validateSaveTruck(){\n    let checkSourceLoc = this.sourceListAdd.some(item => item.value === this.newTruck.sourceLoc);\n    let checkDestLoc = this.destinationListAdd.some(item => item.value === this.newTruck.destLoc);\n    let checkTransporter = this.transporterListAdd.some(item => item.value === this.newTruck.servprov);\n    if(this.newTruck.expiryDate){\n      // Expiry date is not null\n      if(checkSourceLoc){\n        // When source is valid\n        if(checkDestLoc){\n         if(this.newTruck.sourceLoc !== this.newTruck.destLoc){\n           // When Dest Loc is valid\n           if(checkTransporter){\n            // when transporter is valid\n            if(this.newTruck.truckType){\n              // When truck type is not null\n              if(this.newTruck.truckNumber){\n                // When truck Number is not null\n                // Saving the truck Dedicated data\n                this.saveTruck();\n              }else{\n                this.toastr.error('Please Enter the truck number', 'Error!');\n              }\n            }else{\n              this.toastr.error('Please select a Truck Type', 'Error!');\n            }\n          }else{\n            this.toastr.error('Please select a valid Transporter', 'Error!');\n          }\n         }else{\n          this.toastr.error('Destination cannot same as Source', 'Error!');\n         }\n        }else{\n          this.toastr.error('Please select a valid Dest Loc', 'Error!');  \n        }\n      }else{\n        this.toastr.error('Please select a valid Source Loc', 'Error!');\n      }\n\n    }else{\n      this.toastr.error('Please select the Expiry date', 'Error!');\n    }\n  }\n\n\n\n  saveTruck(){\n    let selectedExpiryDate = this.newTruck.expiryDate;\n    this.newTruck.expiryDate = selectedExpiryDate ? moment(new Date(selectedExpiryDate)).format(\"DD/MM/YYYY\") : null\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.saveTruckDedicated, this.newTruck).subscribe(response => {\n       if(response['statusCode'] == 200){\n        //  let updatedRow = response['data'];\n        // this.resultDataList.unshift(updatedRow);\n        // this.resultDataList = [...this.resultDataList];\n        this.resultDataList = [...response['data'].mtTruckDedicatedDtos];\n        this.page.count = response['data'].total;\n        //this.refreshData();\n        // this.getTruckDedicatedList();\n        this.displayAddForm();\n        this.clearAddTruckFields();\n        this.clearNewTruck();\n        \n         this.toastr.success(response['message'] ? response['message'] : 'Truck Dedicated Details Saved Successfully');\n         this.isLoading = false;\n       }else{\n         this.toastr.error(response['message'] ? response['message'] : 'Something went wrong...', 'Error!');\n      this.isLoading = false;   \n       }\n    },err => {\n      this.toastr.error(err ? err['message'] : 'Something went wrong...', 'Error!');\n      this.isLoading = false;\n    })\n   }\n\n   clearAddTruckFields(){\n     this.sourceListAdd = [];\n     this.destinationListAdd = [];\n     this.transporterListAdd = [];\n   }\n   clearUpdateTruckFields(){\n    this.sourceListUpdate = [];\n    this.destinationListUpdate = [];\n    this.transporterListUpdate = [];\n  }\n\n  confirmDeleteAction(row){\n    this.selectedRow = {...row};\n    $(\"#confirmDelete\").modal('show');\n  }\n\n  rowlevelDeleteDedicated(row){\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.deleteMTTruckDedicated+'?id='+row.id).subscribe(response => {\n      if(response['statusCode'] == 200){\n        let deletedRow = response['data'];\n        let index = this.resultDataList.findIndex(item => item.id === deletedRow);\n        this.resultDataList.splice(index, 1);\n        this.resultDataList = [...this.resultDataList];\n        this.page.count = this.page.count - 1;\n        $(\"#confirmDelete\").modal('hide');\n        this.isLoading = false;\n      }else{\n        this.toastr.error(response['message'] ? response['message'] : 'Something went wrong...', 'Error!');\n        this.isLoading = false;\n        $(\"#confirmDelete\").modal('hide');\n      }\n    }, err=>{\n      this.toastr.error(err['message'] ? err['message'] : 'Something went wrong...', 'Error!');\n      this.isLoading = false;\n      $(\"#confirmDelete\").modal('hide');\n    })\n\n  }\n\n   //export excel data\n   export(): void {\n    if (this.resultDataList.length > 0) {\n      this.isLoading = true;\n\n      let data = {\n        sourceLoc: this.sourceLoc,\n        destLoc: this.destLoc,\n        servprov: this.servprov,\n        toExpiryDate: this.toExpiryDate ? moment(new Date(this.toExpiryDate)).format(\"DD/MM/YYYY\") : null,\n        fromExpiryDate: this.fromExpiryDate ? moment(new Date(this.fromExpiryDate)).format(\"DD/MM/YYYY\") : null,\n        truckType: this.truckType,\n        truckNumber: this.truckNumber,\n        // pageLength : this.page.count < this.service.maxPageLengthForExcel ? this.page.count : this.service.maxPageLengthForExcel ,\n        pageLength: this.page.count\n      }\n      // this.service.post_service_DownLoadExcel(ApiserviceService.apisList.planinfo, data).subscribe(response => {\n      this.service.post_service(ApiserviceService.apisList.getTruckDedicatedList, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          // Uncomment when export excel is generated in backend\n          // var blob = new Blob([response.body], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n          //   var filename = 'viewDispatchPlans.xlsx';\n          //   const link = window.URL.createObjectURL(blob);\n          //   const a = document.createElement('a');\n          //   document.body.appendChild(a);\n          //   a.setAttribute('style', 'display: none');\n          //   a.href = link;\n          //   a.download = filename\n          //   a.click();\n          //   window.URL.revokeObjectURL(link);\n          //   a.remove();\n\n          let newViewPlanData = response['data'].mtTruckDedicatedDtos;\n          let excelRawData = newViewPlanData;\n          let newExcelData = []; let data;\n          for (let i = 0; i < excelRawData.length; i++) {\n\n            // For RDC: The Avail TTE and Truck count should be based on Plan Qty and not Available Qty\n            // For FGS : The Avail TTE and Truck count should be based on Available Qty\n            data = {\n              \"Source\": excelRawData[i].sourceLoc,\n              \"Source Desc\": excelRawData[i].sourceDesc,\n              \"Destination\": excelRawData[i].destLoc,\n              \"Destination Desc\": excelRawData[i].destDesc,\n              \"Service Provider\": excelRawData[i].servprov,\n              \"Truck Type\": excelRawData[i].truckType,\n              \"Truck Number\": excelRawData[i].truckNumber,\n              \"Expiry Date\": excelRawData[i].expiryDate ? this.service.customDateFormat(excelRawData[i].expiryDate) : '',\n              \"Insert User\": excelRawData[i].insertUser,\n              \"Insert Date\": excelRawData[i].insertDate ? this.service.customDateTimeFormat(excelRawData[i].insertDate) : '', \n              \"Update User\": excelRawData[i].updateUser,\n              \"Update Date\": excelRawData[i].updateDate ? this.service.customDateFormat(excelRawData[i].updateDate) : ''\n            }\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'mtTruckDedicatedData.xlsx');\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.toastr.error(\"No records found to export\", \"Error!\");\n    }\n  }\n\n  clearNewTruck(){\n    this.newTruck = {\n      servprov: null,\n      sourceLoc: null,\n      sourceDesc: null,\n      destDesc: null,\n      destLoc: null,\n      truckType: null,\n      truckNumber: null,\n      expiryDate: null,\n    };\n  }\n  \n  clearSelectedTruck(){\n    this.selectedTruck = {\n      id: null,\n      servprov: null,\n      sourceLoc: null,\n      sourceDesc: null,\n      destDesc: null,\n      destLoc: null,\n      truckType: null,\n      truckNumber: null,\n      expiryDate: null,\n      insertUser: null,\n      updateUser: null,\n      insertDate: null,\n      updateDate: null,\n    };\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoaderModule } from '../../../public/loader/loader-shared.module';\nimport { customMaterialModule } from '../../../angular-material';\nimport { FormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { MtTruckDedicatedComponent } from './mt-truck-dedicated.component';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\n\nconst routes: Routes = [\n  { path: '', component: MtTruckDedicatedComponent},\n];\n\n// const routes: Routes = [\n//   { path: '', component: CreateFreightComponent,canActivate:[PlannerAuthGuardService]},\n// ];\n\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    LoaderModule,\n    customMaterialModule,\n    FormsModule,\n    NgxDatatableModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    MtTruckDedicatedComponent\n  ],\n  entryComponents:[\n    MtTruckDedicatedComponent\n   ],\n  \n})\nexport class MTTruckDedicatedModule { }"],"sourceRoot":""}