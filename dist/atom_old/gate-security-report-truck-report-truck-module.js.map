{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/gate-security/report-truck/report-truck.component.html","webpack:///./src/app/gate-security/report-truck/report-truck.component.scss","webpack:///./src/app/gate-security/report-truck/report-truck.component.ts","webpack:///./src/app/gate-security/report-truck/report-truck.module.ts"],"names":[],"mappings":"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","file":"gate-security-report-truck-report-truck-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\">\\n</app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    <span>\\n      {{title}}\\n    </span>\\n\\n  </h6>\\n  <!-- Create Plan by Manual Fields 1st row-->\\n  <div class=\\\"manualplan-fields\\\">\\n\\n    <div class=\\\"rounded-white-box\\\">\\n      <div class=\\\"width-10 pl-15\\\">\\n        <mat-form-field class=\\\"margin-top-10\\\">\\n          <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"From Dispatch Date\\\" disabled autocomplete=\\\"off\\\"\\n            [(ngModel)]=\\\"fromDate\\\" (dateChange)=\\\"addEvent('fromDateReport', $event)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"width-10 pl-15\\\">\\n        <mat-form-field class=\\\"margin-top-10\\\">\\n          <input [min]=\\\"fromDate\\\" matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"To Dispatch Date\\\" disabled\\n            autocomplete=\\\"off\\\" [(ngModel)]=\\\"ToDate\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker2 [disabled]=\\\"!fromDate\\\"></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"width-10 pl-15\\\">\\n        <mat-form-field class=\\\"margin-top-10\\\">\\n          <input matInput aria-label=\\\"Transporter\\\" placeholder=\\\"Transporter\\\" autocomplete=\\\"off\\\"\\n            (keyup)=\\\"getfilterTransporter($event)\\\" autocomplete=\\\"off\\\" [matAutocomplete]=\\\"transporterAutocomplete\\\"\\n            [(ngModel)]=\\\"transporter\\\" name=\\\"transporter\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n          <mat-autocomplete #transporterAutocomplete=\\\"matAutocomplete\\\">\\n            <mat-option *ngFor=\\\"let list of transporterList\\\" [value]=\\\"list.value\\\">\\n              <span>{{list.value}}</span>\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"width-10 pl-15\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field class=\\\"margin-top-10\\\">\\n            <input matInput placeholder=\\\"Destination\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n              [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\" (keyup)=\\\"getfilterDestination($event)\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\"\\n                (click)=\\\"setDestDescription(list.description)\\\"\\n                (onSelectionChange)=\\\"setDestDescription(list.description)\\\">\\n                <span>{{list.value}}</span>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"width-20 pl-15\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field class=\\\"margin-top-10\\\">\\n            <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"State\\\"\\n              [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destination\\\"\\n              (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                <span>({{list.description}})</span>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"width-10 pl-15\\\">\\n        <mat-form-field class=\\\"margin-top-10\\\">\\n          <input matInput aria-label=\\\"Country of Destination\\\" placeholder=\\\"Country of Destination\\\"\\n            (keyup)=\\\"countryOfDestinationFilter($event,'destCountrySearch')\\\" autocomplete=\\\"off\\\"\\n            [matAutocomplete]=\\\"dischargeAutocomplete\\\" [(ngModel)]=\\\"destCountryName\\\" name=\\\"destCountryName\\\"\\n            oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n          <mat-autocomplete #dischargeAutocomplete=\\\"matAutocomplete\\\">\\n            <mat-option *ngFor=\\\"let country of countryList\\\" [value]=\\\"country.description\\\">\\n              <span matTooltip={{country.description}}>{{country.value}} - ({{country.description}})</span>\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"width-20 pl-15\\\">\\n        <mat-form-field class=\\\"margin-top-10\\\">\\n          <input matInput placeholder=\\\"Indent Id\\\" [(ngModel)]=\\\"indentID\\\" name=\\\"indentID\\\" autocomplete=\\\"off\\\"\\n            oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"width-10 text-center pd-0\\\">\\n        <button class=\\\"theme-small-button tab-custom-margin\\\" (click)=\\\"indentSearch()\\\" matTooltip=\\\"Search\\\">\\n          <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n        <button class=\\\"theme-delete-button tab-custom-margin\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear\\\">\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n\\n    <!-- <div class='col-md-3'>\\n              <div class=\\\"row rounded-box\\\">\\n                <div class=\\\"col-md-3 text-center\\\">\\n                  <h5 class=\\\"text-warning\\\">\\n                    {{gateSecurityStatics?.reportedTrucksCount?gateSecurityStatics.reportedTrucksCount:0}}</h5>\\n                  <p>Reported &amp; Waiting</p>\\n                </div>\\n                <div class=\\\"col-md-3 text-center\\\">\\n                  <h5 class=\\\"text-success\\\">\\n                    {{gateSecurityStatics?.gatedInTrucksCount?gateSecurityStatics.gatedInTrucksCount:0}}</h5>\\n                  <p>Gated In</p>\\n                </div>\\n                <div class=\\\"col-md-3 text-center\\\">\\n                  <h5 class=\\\"text-info\\\">{{gateSecurityStatics?.loading?gateSecurityStatics.loading:0}}</h5>\\n                  <p>In Loading</p>\\n                </div>\\n                <div class=\\\"col-md-3 text-center\\\">\\n                  <h5 class=\\\"text-danger\\\">\\n                    {{gateSecurityStatics?.watingMoreThen3HTrucks?gateSecurityStatics.watingMoreThen3HTrucks:0}}</h5>\\n                  <p>Waiting > {{gateSecurityStatics?gateSecurityStatics.excessWaitingTime:0}} hrs</p>\\n                </div>\\n              </div>\\n            </div> -->\\n  </div>\\n\\n\\n  <div class=\\\"clearfix\\\"></div>\\n\\n\\n  <div *ngIf='reportTruckTableShow' class=\\\"manual-plan-table\\\">\\n    <ngx-datatable class='material' #table [rows]='gateSecurityIndents' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\n      [scrollbarH]=\\\"true\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [externalPaging]=\\\"true\\\" [limit]=\\\"page.limit\\\"\\n      [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\" (page)=\\\"datatablePageData($event)\\\" [summaryRow]=\\\"true\\\"\\n      [summaryHeight]=\\\"'auto'\\\" [summaryPosition]=\\\"'bottom'\\\">\\n      <ngx-datatable-column name=\\\"Dispatch Date\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"dispatchDate\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.dispatchDate | customDateFormat | date:'dd-MMM-yyyy'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Indent Id\\\" [width]=\\\"320\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"indentId\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.indentId}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Destination\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"destination\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.destination}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Dest Description\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"destDis\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.destDis}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column\\n        *ngIf=\\\"((service.checkRole() == userRoles.JIT_GATE_SECURITY) || (service.checkRole() == userRoles.JIT_OPERATION))\\\"\\n        name=\\\"Truck Type\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"truckType\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.truckType}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column\\n        *ngIf=\\\"((service.checkRole() != userRoles.JIT_GATE_SECURITY) && (service.checkRole() != userRoles.JIT_OPERATION))\\\"\\n        name=\\\"Truck/Container Type\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"truckType\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.truckType}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Transporter\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"transporter\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.transporter}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Country of Destination\\\" [width]=\\\"180\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"destCountryName\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.destCountryName}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Category\\\" [width]=\\\"180\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"materailGrp\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.materailGrp}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Trucks Requested\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"indented\\\"\\n        [summaryTemplate]=\\\"netRequestedCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.netRequested}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Trucks Reported\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"reported\\\"\\n        [summaryTemplate]=\\\"reportedCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.reported}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Trucks Rejected\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"rejected\\\"\\n        [summaryTemplate]=\\\"rejectedCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.rejected}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Net Balance\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"netBalance\\\"\\n        [summaryTemplate]=\\\"netBalanceCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.netBalance}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Actions\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          <button class=\\\"theme-small-button\\\" matTooltip=\\\"Truck Details\\\" (click)=\\\"truckDetails(row)\\\"\\n            *ngIf=\\\"(row.status != 'CANCELLED')\\\">\\n            <i class=\\\"fa fa-address-card\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <span *ngIf=\\\"(row.status == 'CANCELLED')\\\"> Indent {{row.status | lowercase}}</span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <!-- Footer Template starts -->\\n      <ngx-datatable-footer>\\n        <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n          let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n          <div class=\\\"page-count\\\">\\n            <span *ngIf=\\\"selectedCount\\\">\\n              {{selectedCount.toLocaleString()}} Selected |\\n            </span>\\n            Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n            (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n            {{(rowCount)}} records.\\n          </div>\\n          <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n            [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\"\\n            [size]=\\\"pageSize\\\" [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n            (change)=\\\"table.onFooterPage($event)\\\">\\n          </datatable-pager>\\n        </ng-template>\\n      </ngx-datatable-footer>\\n      <!-- Footer Template Ends -->\\n    </ngx-datatable>\\n    <!-- Table bottom grid columns -->\\n    <ng-template #netRequestedCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{(netRequestedSum)?(netRequestedSum | number ):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #reportedCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{(reportedSum ? reportedSum : 0 )| number }}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #rejectedCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{(rejectedSum ? rejectedSum : 0) | number}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #netBalanceCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{(netBalanceSum ? netBalanceSum : 0 ) | number }}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </div>\\n\\n  <!-- Indents from the transporter provided by him -->\\n  <div *ngIf=\\\"IsReportedIndentsShow\\\">\\n    <div class=\\\"manual-plan-table\\\" *ngIf=\\\"reportedTrucks.length > 0\\\">\\n      <ngx-datatable class='material' [rows]='reportedTrucks' [scrollbarH]=\\\"true\\\" [columnMode]=\\\"'force'\\\"\\n        [headerHeight]=\\\"50\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"5\\\">\\n        <ngx-datatable-column name=\\\"Indent Id\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"indentId\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.indentId}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Truck Number\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n          prop=\\\"truckNumber\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.truckNumber | uppercase}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column\\n          *ngIf=\\\"((service.checkRole() != userRoles.JIT_GATE_SECURITY) &&  (service.checkRole() != userRoles.JIT_OPERATION))\\\"\\n          name=\\\"Container Number\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"containerNum\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.containerNum | uppercase}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column\\n          *ngIf=\\\"((service.checkRole() == userRoles.JIT_GATE_SECURITY) || (service.checkRole() == userRoles.JIT_OPERATION))\\\"\\n          name=\\\"Truck Type\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"truckType\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.truckType | uppercase}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column\\n          *ngIf=\\\"((service.checkRole() != userRoles.JIT_GATE_SECURITY) && (service.checkRole() != userRoles.JIT_OPERATION))\\\"\\n          name=\\\"Truck/Container Type\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"truckType\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.truckType | uppercase}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Driver Name\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"driverName\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.driverName | uppercase}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Driver License Number\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n          prop=\\\"driverLicense\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.driverLicense | uppercase}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <!-- REPORT DATE -->\\n        <ngx-datatable-column name=\\\"Report Date\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"reportDate\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.reportedDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <!-- GATE CONTROL CODE -->\\n        <!-- <ngx-datatable-column name=\\\"Gate Control Code\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n          prop=\\\"gateControlCode\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.gateControlCode | uppercase}}\\n          </ng-template>\\n        </ngx-datatable-column> -->\\n        <!-- <ngx-datatable-column name=\\\"PUC\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"puc\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{(row.puc)?'Yes':'No'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Insurance\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"insurance\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{(row.insurance)?'Yes':'No'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Seat Belt\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"seatBelt\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{(row.seatBelt)?'Yes':'No'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"First Aid\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"firstAid\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{(row.firstAid)?'Yes':'No'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Fire Extinguisher\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n          prop=\\\"fireExtenguisher\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{(row.fireExtenguisher)?'Yes':'No'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Emergency Card\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n          prop=\\\"emergencyCard\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{(row.emergencyCard)?'Yes':'No'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Spark Arrestor\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n          prop=\\\"sparKArrestor\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{(row.sparKArrestor)?'Yes':'No'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Fitness Certificate\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n          prop=\\\"fitnessCert\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{(row.fitnessCert)?'Yes':'No'}}\\n          </ng-template>\\n        </ngx-datatable-column> -->\\n\\n        <!-- <ngx-datatable-column name=\\\"GPS (Yes/No)\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"gpsEnabled\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            <span *ngIf=\\\"row.gpsEnabled\\\">Yes</span>\\n            <span *ngIf=\\\"!row.gpsEnabled\\\">No</span>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"GPS Provider\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"gpsProvider\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.gpsProvider?row.gpsProvider:'- -'}}\\n          </ng-template>\\n        </ngx-datatable-column> -->\\n        <!-- <ngx-datatable-column name=\\\"Actions\\\" [width]=\\\"200\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            <button mat-raised-button color=\\\"primary\\\" class=\\\"table-btn\\\" (click)=\\\"report(row)\\\">Report</button>\\n          </ng-template>\\n        </ngx-datatable-column> -->\\n      </ngx-datatable>\\n    </div>\\n  </div>\\n  <div>\\n    <div class=\\\"mb-3 mt-4\\\" *ngIf=\\\"IsReportedIndentsShow\\\">\\n      <p *ngIf=\\\"gateSecurityTransportReport.length > 0\\\">Indent Id : {{reportingIndentId}}</p>\\n      <div class=\\\"manualplan-fields\\\" *ngFor=\\\"let data of gateSecurityTransportReport;let i=index\\\">\\n        <div class=\\\"circle-bordered-box\\\">\\n          <div class=\\\"row \\\">\\n            <div class=\\\"col-md-11\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Truck Number\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                        [(ngModel)]=\\\"gateSecurityTransportReport[i].truckNumber\\\"\\n                        (keypress)=\\\"helperService.alphaNumericOnly($event)\\\"\\n                        (blur)=\\\"getReportedDriverDetails(gateSecurityTransportReport[i].truckNumber,i)\\\"\\n                        name=truckNumber{{i}} autocomplete=\\\"off\\\">\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\"\\n                  *ngIf=\\\"((service.checkRole() == userRoles.JIT_GATE_SECURITY) || (service.checkRole() == userRoles.JIT_OPERATION))\\\">\\n                  <mat-form-field>\\n                    <mat-select placeholder=\\\"Truck Type\\\" name=TruckType{{i}}\\n                      [(ngModel)]=\\\"gateSecurityTransportReport[i].truckType\\\">\\n                      <mat-option *ngFor=\\\"let truck of truckList\\\" [value]=\\\"truck.value\\\"> {{truck.value}} </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-2\\\"\\n                  *ngIf=\\\"((service.checkRole() != userRoles.JIT_GATE_SECURITY) && (service.checkRole() != userRoles.JIT_OPERATION))\\\">\\n                  <mat-form-field>\\n                    <mat-select placeholder=\\\"Truck/Container Type\\\" name=TruckType{{i}}\\n                      [(ngModel)]=\\\"gateSecurityTransportReport[i].truckType\\\">\\n                      <mat-option *ngFor=\\\"let truck of truckList\\\" [value]=\\\"truck.value\\\"> {{truck.value}} </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-2\\\"\\n                  *ngIf=\\\"((service.checkRole() != userRoles.JIT_GATE_SECURITY) && (service.checkRole() != userRoles.JIT_OPERATION))\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Container Number\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                        [(ngModel)]=\\\"gateSecurityTransportReport[i].containerNum\\\"\\n                        (keypress)=\\\"helperService.alphaNumericOnly($event)\\\" name=containerNum{{i}} autocomplete=\\\"off\\\">\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Driver's Name\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                        [(ngModel)]=\\\"gateSecurityTransportReport[i].driverName\\\" name=driverName{{i}} autocomplete=\\\"off\\\">\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Driver's Mobile Number\\\" (keypress)=\\\"service.numberOnly($event)\\\"\\n                        [(ngModel)]=\\\"gateSecurityTransportReport[i].driverContact\\\"\\n                        (keypress)=\\\"helperService.numericOnly($event)\\\" name=driverContact{{i}} autocomplete=\\\"off\\\"\\n                        maxlength=\\\"10\\\" minlength=\\\"10\\\">\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Driver's License Number\\\"\\n                        oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                        [(ngModel)]=\\\"gateSecurityTransportReport[i].driverLicense\\\" name=driverLicense{{i}}\\n                        autocomplete=\\\"off\\\">\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n\\n                <!-- <div class=\\\"col-md-6\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\">\\n                          <mat-form-field>\\n                            <mat-select placeholder=\\\"GPS (Yes/No)\\\" [(ngModel)]=\\\"gateSecurityTransportReport[i].gpsEnabled\\\"\\n                              name=\\\"'gpsEnabled' + i\\\" autocomplete=\\\"off\\\">\\n                              <mat-option *ngFor=\\\"let data of gpsStatus\\\" [value]=\\\"data.viewValue\\\">\\n                                {{data.key}}\\n                              </mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col-md-3\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <mat-form-field>\\n                              <input matInput aria-label=\\\"GPS provider\\\" placeholder=\\\"GPS Provider\\\" (keyup)=\\\"getfilterGpsProvider($event)\\\"\\n                                autocomplete=\\\"off\\\" [matAutocomplete]=\\\"gpsProviderAutocomplete\\\" [(ngModel)]=\\\"gateSecurityTransportReport[i].gpsProvider\\\"\\n                                name=\\\"'gpsProvider'+i\\\">\\n                              <mat-autocomplete #gpsProviderAutocomplete=\\\"matAutocomplete\\\">\\n                                <mat-option *ngFor=\\\"let list of gpsProviderList\\\" [value]=\\\"list.value\\\">\\n                                  <span>{{list.value}}</span>\\n                                </mat-option>\\n                              </mat-autocomplete>\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div> -->\\n              </div>\\n\\n            </div>\\n            <div class=\\\"col-md-1 tab-pos-top\\\">\\n              <!-- onkeypress=\\\"return event.keyCode != 13;\\\" -->\\n              <div class=\\\"pull-right mt-2\\\">\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"table-btn\\\"\\n                  (click)=\\\"reportIndent(gateSecurityTransportReport[i])\\\">Report</button>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-11\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label id=\\\"example-radio-group-label\\\">PUC</label>\\n                    <mat-radio-group aria-labelledby=\\\"example-radio-group-label\\\" class=\\\"example-radio-group\\\"\\n                      [(ngModel)]=\\\"gateSecurityTransportReport[i].puc\\\" name=puc{{i}}>\\n                      <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\">\\n                        {{item.key}}\\n                      </mat-radio-button>\\n                    </mat-radio-group>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label id=\\\"example-radio-group-label\\\">Insurance</label>\\n                    <mat-radio-group aria-labelledby=\\\"example-radio-group-label\\\" class=\\\"example-radio-group\\\"\\n                      [(ngModel)]=\\\"gateSecurityTransportReport[i].insurance\\\" name=insurance{{i}}>\\n                      <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\">\\n                        {{item.key}}\\n                      </mat-radio-button>\\n                    </mat-radio-group>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label id=\\\"example-radio-group-label\\\">Seat Belt</label>\\n                    <mat-radio-group aria-labelledby=\\\"example-radio-group-label\\\" class=\\\"example-radio-group\\\"\\n                      [(ngModel)]=\\\"gateSecurityTransportReport[i].seatBelt\\\" name=seatbelt{{i}}>\\n                      <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\">\\n                        {{item.key}}\\n                      </mat-radio-button>\\n                    </mat-radio-group>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label id=\\\"example-radio-group-label\\\">First Aid</label>\\n                    <mat-radio-group aria-labelledby=\\\"example-radio-group-label\\\" name=firstAid{{i}}\\n                      class=\\\" example-radio-group\\\" [(ngModel)]=\\\"gateSecurityTransportReport[i].firstAid\\\">\\n                      <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\">\\n                        {{item.key}}\\n                      </mat-radio-button>\\n                    </mat-radio-group>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label id=\\\"example-radio-group-label\\\">Fire Extinguisher</label>\\n                    <mat-radio-group aria-labelledby=\\\"example-radio-group-label\\\" class=\\\"example-radio-group\\\"\\n                      [(ngModel)]=\\\"gateSecurityTransportReport[i].fireExtenguisher\\\" name=fireExtinguisher{{i}}>\\n                      <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\">\\n                        {{item.key}}\\n                      </mat-radio-button>\\n                    </mat-radio-group>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label id=\\\"example-radio-group-label\\\">Emergency Card</label>\\n                    <mat-radio-group aria-labelledby=\\\"example-radio-group-label\\\" class=\\\"example-radio-group\\\"\\n                      [(ngModel)]=\\\"gateSecurityTransportReport[i].emergencyCard\\\" name=emergencyCard{{i}}>\\n                      <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\">\\n                        {{item.key}}\\n                      </mat-radio-button>\\n                    </mat-radio-group>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-1 text-center\\\">\\n              <button class=\\\"theme-small-button margin-top-7\\\"\\n                (click)=\\\"manualTruckAssign(gateSecurityTransportReport[i])\\\"\\n                *ngIf=\\\"(i == gateSecurityTransportReport.length-1)\\\" matTooltip=\\\"Add\\\">\\n                <i class=\\\"fa fa-plus-circle fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n              </button>\\n              <button class=\\\"theme-delete-button margin-top-7\\\" (click)=\\\"removeManualTruckAssign(i)\\\" *ngIf=\\\"i != 0\\\"\\n                matTooltip=\\\"remove\\\">\\n                <i class=\\\"fa fa-minus-circle fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n              </button>\\n            </div>\\n            <div class=\\\"col-md-11\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label id=\\\"example-radio-group-label\\\">Spark Arrestor</label>\\n                    <mat-radio-group aria-labelledby=\\\"example-radio-group-label\\\" class=\\\"example-radio-group\\\"\\n                      [(ngModel)]=\\\"gateSecurityTransportReport[i].sparKArrestor\\\" name=sparKArrestor{{i}}>\\n                      <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\">\\n                        {{item.key}}\\n                      </mat-radio-button>\\n                    </mat-radio-group>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label id=\\\"example-radio-group-label\\\">Fitness Certificate</label>\\n                    <mat-radio-group aria-labelledby=\\\"example-radio-group-label\\\" class=\\\"example-radio-group\\\"\\n                      [(ngModel)]=\\\"gateSecurityTransportReport[i].fitnessCert\\\" name=fitnessCert{{i}}>\\n                      <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\">\\n                        {{item.key}}\\n                      </mat-radio-button>\\n                    </mat-radio-group>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n\\n                      \\n                      <input matInput placeholder=\\\"Gross Vehicle Weight (Kg)\\\" (keypress)=\\\"service.numberOnly($event)\\\"\\n                      [(ngModel)]=\\\"gateSecurityTransportReport[i].truckGrossVehicleWt\\\"\\n                      (keypress)=\\\"helperService.numericOnly($event)\\\" name=truckGrossVehicleWt{{i}} autocomplete=\\\"off\\\">\\n\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Unladen Weight (Kg)\\\" (keypress)=\\\"service.numberOnly($event)\\\"\\n                      [(ngModel)]=\\\"gateSecurityTransportReport[i].truckUnladenWt\\\"\\n                      (keypress)=\\\"helperService.numericOnly($event)\\\" name=truckUnladenWt{{i}} autocomplete=\\\"off\\\">\\n\\n              \\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n\\n\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"Fuel Type\\\" name=fuelType{{i}}\\n                        [(ngModel)]=\\\"gateSecurityTransportReport[i].fuelType\\\">\\n                        <mat-option *ngFor=\\\"let fuelType of fuelType\\\" [value]=\\\"fuelType\\\">{{fuelType}}</mat-option>\\n\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n\\n\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n\\n\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"BS Norms\\\" name=bsNorms{{i}}\\n                        [(ngModel)]=\\\"gateSecurityTransportReport[i].bsNorms\\\">\\n                        <mat-option *ngFor=\\\"let bsNorms of bsNorms\\\" [value]=\\\"bsNorms\\\">{{bsNorms}}</mat-option>\\n\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdGUtc2VjdXJpdHkvcmVwb3J0LXRydWNrL3JlcG9ydC10cnVjay5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { AppDateAdapter, APP_DATE_FORMATS } from '../../public/date.adapters';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { constants } from 'src/app/constants';\nimport { HelperServiceService } from 'src/app/services/helper-service/helper-service.service';\nimport * as moment from 'moment';\n@Component({\n  selector: 'app-report-truck',\n  templateUrl: './report-truck.component.html',\n  styleUrls: ['./report-truck.component.scss'],\n  providers: [\n    {\n      provide: DateAdapter, useClass: AppDateAdapter\n    },\n    {\n      provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\n    }\n  ]\n})\nexport class ReportTruckComponent implements OnInit {\n  gpsProviderList: any[];\n  reportingIndentId: any;\n  gpsStatus = [];\n  index: number;\n  gateSecurityTransportReport = [];\n  gateSecurityIndents = [];\n  transporterList: any[];\n  isLoading: boolean = false;\n  truckData = [];\n  truckInformation = [];\n  truckDetailsData = [];\n  addedTruckData = [];\n  reportedTruckData = [];\n  truckNumber = '';\n  \n \n  //May 2023 - adding fields to truck reporting\n  truckCapacity = '';\n //April 2023\n fuelType =['CNG','Petrol','Diesel','Electric']\n bsNorms= ['BS-3','BS-4','BS-6','Others']\n  truckgrossVehicleWt = '';\n  truckUnladenwt = '';\n  GOApprovalReason = '';\n  GOApprovedBy = '';\n  GOApprovedDate = '';\n  containerNum = '';\n  driverName = '';\n  driverNumber = '';\n  driverLicenseNumber = '';\n  isClicked: number;\n  showDetails = false;\n  reportSuccess = false;\n  transporter = '';\n  indentID = '';\n  currentDateAsString = this.helperService.getTodayDateASString();\n  fromDate = this.helperService.getTodayDateASString();\n  ToDate = this.helperService.getTodayDateASString(); countryList: any[];\n  destCountryName: any;\n  items = [\n    {\n      \"key\": \"Yes\",\n      \"value\": true\n    },\n    {\n      \"key\": \"No\",\n      \"value\": false\n    }\n  ]\n\n  reportTruckTableShow: boolean = false;\n  IsReportedIndentsShow: boolean = false;\n  \n  page = {\n    limit: 10,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n  reportedTrucks = [];\n  numberofManualEntries: number;\n  isCompletedReport: boolean = false;\n  gateSecurityStatics: any;\n  userRoles: any;\n  title: string;\n  truckList = [];\n  destinationList = [];\n  destination: string;\n  destinationDesc: any;\n  descriptionList = [];\n  netRequestedSum = 0;\n  reportedSum = 0;\n  rejectedSum = 0;\n  netBalanceSum = 0;\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService,\n    private helperService: HelperServiceService,\n  ) {\n    this.gpsStatus = [\n      {\n        \"key\": \"Yes\",\n        \"viewValue\": true\n      },\n      {\n        \"key\": \"No\",\n        \"viewValue\": false\n      }\n    ]\n\n    // get gatesecurity statics like reporting ,Wating,Gated In,Loading\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getTruckStatus).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        this.gateSecurityStatics = response['data'];\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong \", \"! Error\");\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  ngOnInit() {\n    this.userRoles = constants.roles;\n    //Activation of Tabs\n    if (this.service.checkRole() == this.userRoles.rdc_PLN || (this.service.checkRole() == this.userRoles.JIT_OPERATION)) {\n      localStorage.setItem(\"userMenu\", \"RDC-GAT-REPORT\");\n    } else if ((this.service.checkRole() == this.userRoles.gateSecurity) || (this.service.checkRole() == this.userRoles.rdc_GAT) || (this.service.checkRole() == this.userRoles.JIT_GATE_SECURITY)) {\n      localStorage.setItem(\"userMenu\", \"GAT-REPORT\");\n    }\n    else {\n      localStorage.setItem(\"userMenu\", \"fgs-truck-status\");\n    }\n    // For title show\n    if ((this.service.checkRole() == this.userRoles.rdc_GAT) || (this.service.checkRole() == this.userRoles.rdc_PLN)) {\n      this.title = \"Receiving RDC > Report Trucks > Against Indent\";\n    } else if (this.service.checkRole() == this.userRoles.JIT_GATE_SECURITY) {\n      this.title = \" FGS-JIT > Report Truck > Against Indent\";\n    } else {\n      this.title = \" FGS > Report Truck > Against Indent\";\n    }\n\n    // for getting truck type master\n    this.getTruckTypeMasterData();\n  }\n  // for getting truck type master\n  getTruckTypeMasterData() {\n    this.service.get_service(ApiserviceService.apisList.truckTypeMasterData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.truckList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    });\n  }\n  // formateDate(data) {\n  //   console.log(data)\n  //   let formatted = new Date(data),\n  //     mnth = (\"0\" + (formatted.getMonth() + 1)).slice(-2),\n  //     day = (\"0\" + formatted.getDate()).slice(-2);\n  //   this.formattedDate = [day, mnth, formatted.getFullYear()].join(\"/\");\n  // }\n\n  getTruckDetails(id, i) {\n    this.isClicked = i;\n    const idx = this.truckInformation.findIndex((item) => {\n      return item.indentId == id;\n    });\n    if (idx !== -1) {\n      this.addedTruckData.push(this.truckInformation[idx]);\n    } else {\n      this.showDetails = true;\n    }\n  }\n\n  onFooterPage(pageInfo){\n    console.log(pageInfo);\n    \n  }\n\n  // filter transporter list \n  getfilterTransporter(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.transporterList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?transporter=' + filtervalue).subscribe(response => {\n        console.log(\"respio\", response)\n        this.transporterList = response['data'].searchResult;\n        this.transporterList = [...this.transporterList]\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // filter gsp provide api\n  // getfilterGpsProvider(event) {\n  //   let filtervalue = event.target.value;\n  //   if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n  //     this.gpsProviderList = [];\n  //     this.isLoading = true;\n  //     this.service.get_service(ApiserviceService.apisList.searchFilter + '?gpsProvider=' + filtervalue).subscribe(response => {\n  //       console.log(\"respio\", response)\n  //       this.gpsProviderList = response['data'].searchResult;\n  //       this.gpsProviderList = [...this.gpsProviderList]\n  //       this.isLoading = false;\n  //     }, (err) => {\n  //       console.log(\"Error\", err);\n  //       this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n  //       this.isLoading = false;\n  //     })\n  //   }\n  // }\n  dateValidation() {\n    let isValidDate = true;\n    if (this.fromDate) {\n      if (this.ToDate == '' || this.ToDate == null || this.ToDate == undefined) {\n        this.toastr.error('Please enter Todate');\n        isValidDate = false;\n      }\n    }\n    return isValidDate;\n  }\n\n\n  //Search filter \n  indentSearch() {\n    if (this.dateValidation()) {\n      this.isLoading = true;\n      this.IsReportedIndentsShow = false;\n      let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n      let searchData = {\n        fromDispatchDate: this.fromDate ? (moment(this.fromDate).format(\"DD/MM/YYYY\")) : '',\n        toDispatchDate: this.ToDate ? (moment(this.ToDate).format(\"DD/MM/YYYY\")) : '',\n        indentID: this.indentID,\n        transporter: this.transporter,\n        destination: this.destination,\n        destCountry: obj ? (obj.value) : ''\n      }\n      this.service.post_service(ApiserviceService.apisList.viewSearchIndents, searchData).subscribe(response => {\n        console.log(response);\n        this.gateSecurityIndents = [];\n        if (response['statusCode'] == 200) {\n          this.clearSummaryData();\n          this.gateSecurityIndents = response['data'].indents;\n          this.gateSecurityIndents = [... this.gateSecurityIndents];\n          this.page.limit = response['data'].pageLength;\n          this.page.count = response['data'].total;\n          this.reportTruckTableShow = true;\n          this.calculateSummaryData();\n          this.isLoading = false;\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong \", \"! Error\");\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n  //clear all  the data\n  clearAll() {\n    this.indentID = '';\n    this.transporter = '';\n    this.fromDate = '';\n    this.ToDate = '';\n    this.destinationDesc = \"\";\n    this.descriptionList = [];\n    this.transporterList = [];\n    this.destination = '';\n    this.destinationList = [];\n    this.destCountryName = '';\n  }\n\n  //data table server side pagination\n  datatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    this.index = pageInfo.offset;\n    this.isLoading = true;\n    // this.page.offset = pageInfo.offset;\n    console.log(\"page info\", pageInfo);\n    let datatabledata = {\n      index: pageInfo.offset,\n      pageLength: pageInfo.pageSize,\n      fromDispatchDate: this.fromDate ? (moment(this.fromDate).format(\"DD/MM/YYYY\")) : '',\n      toDispatchDate: this.ToDate ? (moment(this.ToDate).format(\"DD/MM/YYYY\")) : '',\n      indentID: this.indentID,\n      transporter: this.transporter,\n      destination: this.destination\n    }\n    this.service.post_service(ApiserviceService.apisList.viewSearchIndents, datatabledata).subscribe(response => {\n      this.clearSummaryData();\n      this.gateSecurityIndents = response['data'].indents;\n      this.gateSecurityIndents = [... this.gateSecurityIndents];\n      this.page.limit = response['data'].pageLength;\n      this.page.count = response['data'].total;\n      this.calculateSummaryData();\n      this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n\n  }\n\n\n//   reportIndent(reportIndentData) {\n//     //Check TruckNumber Is entered or not\n//     if (reportIndentData.truckNumber && reportIndentData.truckNumber != null) {\n//       //Check Truck Type Is entered or not\n//       if (reportIndentData.truckType && reportIndentData.truckType != null) {\n//         //Check Driver Name Is entered or not\n//         if (reportIndentData.driverName && reportIndentData.driverName != null) {\n//           //Check DRIVER Contact Is entered or not\n//           if (reportIndentData.driverContact && reportIndentData.driverContact != null) {\n//             //Check DRIVER License Is entered or not\n//             if (reportIndentData.driverLicense && reportIndentData.driverLicense != null) {\n//               //Check Gps Enabled  Is entered or not\n//               // if (reportIndentData.gpsEnabled && reportIndentData.gpsEnabled != null) {\n//               //check GPS provider Data entered or not\n//               // if (reportIndentData.gpsProvider && reportIndentData.gpsProvider != null) {\n//               //   this.reportTruckSendableData(reportIndentData);\n//               // } else {\n//               //   this.toastr.error(\"Please enter Gps Provider\");\n//               // }\n\n//               //} else {\n//               if (reportIndentData.truckGrossVehicleWt && reportIndentData.truckGrossVehicleWt != null){\n//                 console.log(reportIndentData.truckCapacity);\n//                 this.reportTruckSendableData(reportIndentData);\n  \n//               } else {\n//                 this.toastr.error(\"Please enter Truck Capacity\");  \n//               }\n            \n            \n// //            // }\n//             } else {\n//               this.toastr.error(\"Please enter driver license number\");\n//             }\n//           } else {\n//             this.toastr.error(\"Please enter driver number\");\n//           }\n\n//         } else {\n//           this.toastr.error(\"Please enter driver name\");\n//         }\n//       } else {\n//         this.toastr.error(\"Please enter truck type\");\n//       }\n//     } else {\n//       this.toastr.error(\"Please enter truck number\");\n//     }\n\n\n//   }\n\n//May 2023\nreportIndent(reportIndentData) {\n  console.log(\"Printing Data\");\n  console.log(reportIndentData);\n  \n//Calculate truck capacity \nreportIndentData.truckCapacity= reportIndentData.truckGrossVehicleWt - reportIndentData.truckUnladenWt;\n  //May 2023\n  if ((reportIndentData.bsNorms && reportIndentData.bsNorms !=null) ||\n  (this.service.checkRole() == this.userRoles.RDC_GAT || \n  this.service.checkRole() == this.userRoles.rdc_PLN \n  || (this.service.checkRole() == this.userRoles.JIT_OPERATION))) {\n  if ((reportIndentData.fuelType && reportIndentData.fuelType !=null) ||\n  (this.service.checkRole() == this.userRoles.RDC_GAT || \n  this.service.checkRole() == this.userRoles.rdc_PLN \n  || (this.service.checkRole() == this.userRoles.JIT_OPERATION))) {\n  if ((reportIndentData.truckGrossVehicleWt && reportIndentData.truckGrossVehicleWt !=null) ||\n  (this.service.checkRole() == this.userRoles.RDC_GAT || \n  this.service.checkRole() == this.userRoles.rdc_PLN \n  || (this.service.checkRole() == this.userRoles.JIT_OPERATION))) {\n  if ((reportIndentData.truckUnladenWt && reportIndentData.truckUnladenWt !=null) ||\n  (this.service.checkRole() == this.userRoles.RDC_GAT || \n  this.service.checkRole() == this.userRoles.rdc_PLN \n  || (this.service.checkRole() == this.userRoles.JIT_OPERATION))) {\n  //Check TruckNumber Is entered or not\n  if (reportIndentData.truckNumber && reportIndentData.truckNumber != null) {\n    //Check Truck Type Is entered or not\n    if (reportIndentData.truckType && reportIndentData.truckType != null) {\n      //Check Driver Name Is entered or not\n      if (reportIndentData.driverName && reportIndentData.driverName != null) {\n        //Check DRIVER Contact Is entered or not\n        if (reportIndentData.driverContact && reportIndentData.driverContact != null) {\n          //Check DRIVER License Is entered or not\n          if (reportIndentData.driverLicense && reportIndentData.driverLicense != null) {\n            //Check Gps Enabled  Is entered or not\n            // if (reportIndentData.gpsEnabled && reportIndentData.gpsEnabled != null) {\n            //check GPS provider Data entered or not\n            // if (reportIndentData.gpsProvider && reportIndentData.gpsProvider != null) {\n            //   this.reportTruckSendableData(reportIndentData);\n            // } else {\n            //   this.toastr.error(\"Please enter Gps Provider\");\n            // }\n\n            //} else {\n            this.reportTruckSendableData(reportIndentData);\n            // }\n          \n          \n\n\n\n          \n            } else { this.toastr.error(\"Please enter driver license number\");}       \n                 \n        \n             } else { this.toastr.error(\"Please enter driver number\"); }\n\n             } else { this.toastr.error(\"Please enter driver name\"); }  \n   \n   \n              } else {this.toastr.error(\"Please enter truck type\");}\n  \n              } else {this.toastr.error(\"Please enter truck number \");}\n   \n             } else { this.toastr.error(\"Please enter Unladen Weight\");}\n \n            } else {this.toastr.error(\"Please enter Gross Vehicle Weight\");}\n\n            } else {this.toastr.error (\"Please select fuel type\");}\n            } else { this.toastr.error (\"Please select BS Norms\");}\n\n\n\n}\n\n\n  addEvent(type, event) {\n    console.log(event.target.value);\n    if (event.target.value) {\n      switch (type) {\n          /* Checking if selected from date greater than to date.\n      Clearing the toDate field when from date greater than to date */\n        case \"fromDateReport\":\n            let checkToDate: any = this.ToDate;\n            console.log(\"Check--->1\", checkToDate);\n            if (this.ToDate == this.currentDateAsString) {\n              // on page load we are defaluting the  to date with string. Comparing string with date is not possible\n              // If toDate is equal to currentDate then chagetingthe checkDate to new Date() otherwise defaulting with toDate\n              checkToDate = new Date();\n              console.log(\"Check--->2\", checkToDate);\n        \n            }\n          if (this.ToDate && (this.fromDate > checkToDate)) {\n            this.ToDate = '';\n          }\n          // this.ToDate = '';\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  //get filter destination result\n  getfilterDestination(event) {\n    this.destinationDesc = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.destinationList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        console.log(\"respio\", response)\n        this.destinationList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //Report truck Sendable data\n  reportTruckSendableData(reportIndentData) {\n    this.isLoading = true;\n    let data = reportIndentData;\n    data['indentId'] = this.reportingIndentId;\n    data['status'] = \"REPORTED\";\n    let indentdata = this.gateSecurityIndents.find(item => item.indentId == data.indentId)\n    data.destDis = indentdata.destDis;\n    console.log(data)\n    this.service.post_service(ApiserviceService.apisList.getIndentReportInfo, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        let deleteRowIndex = this.gateSecurityTransportReport.indexOf(reportIndentData);\n        this.gateSecurityTransportReport.splice(deleteRowIndex, 1);\n        let resposneData = response['data'];\n        // let noOfTrucksReported = resposneData.reported;\n        this.numberofManualEntries = resposneData.netBalance;\n        // if (resposneData.reported < resposneData.netRequested) {\n        if (this.numberofManualEntries) {\n          // this.gateSecurityTransportReport = [];\n          let removebleIndex = this.gateSecurityTransportReport.indexOf(reportIndentData);\n          if (removebleIndex != -1) {\n            this.gateSecurityTransportReport.splice(removebleIndex, 1);\n          }\n          // Default the truck type from Indent ID\n          let currentIndentObj = this.gateSecurityIndents.find(item => item.indentId == this.reportingIndentId);\n\n          if (this.gateSecurityTransportReport.length == 0) {\n            this.gateSecurityTransportReport.push({\n              truckNumber: '',\n              containerNum: '',\n              driverName: '',\n              driverContact: '',\n              driverLicense: '',\n              truckType: currentIndentObj.truckType,\n              puc: true,\n              insurance: true,\n              seatBelt: true,\n              firstAid: true,\n              fireExtenguisher: true,\n              fitnessCert: true,\n              emergencyCard: true,\n              sparKArrestor: true\n            });\n          }\n\n          // this.numberofManualEntries = resposneData.netRequested - resposneData.reported;\n\n          //   this.gpsProviderList = [];\n        } else {\n          this.gateSecurityTransportReport = [];\n        }\n        let updatebleIndex = this.gateSecurityIndents.findIndex(data => data.indentId == this.reportingIndentId);\n        this.gateSecurityIndents[updatebleIndex] = resposneData;\n        this.gateSecurityIndents = [...this.gateSecurityIndents];\n        this.reportedTrucks = [];\n        this.reportedTrucks = resposneData['reportedTrucks'];\n        this.reportedTrucks = [...this.reportedTrucks];\n        this.isLoading = false;\n        this.toastr.success(response['message'] ? response['message'] : \" Truck assigned sucessfully\", \"success\")\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong \", \"!Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    });\n  }\n\n  // submit data\n\n  // create manual trcuk assign\n  manualTruckAssign(row) {\n    // Default the truck type from Indent ID\n    let currentIndentObj = this.gateSecurityIndents.find(item => item.indentId == this.reportingIndentId);\n    if (this.numberofManualEntries > this.gateSecurityTransportReport.length) {\n      this.gateSecurityTransportReport.push({\n        truckNumber: '',\n        driverName: '',\n        driverContact: '',\n        driverLicense: '',\n        truckType: currentIndentObj.truckType,\n        puc: true,\n        insurance: true,\n        seatBelt: true,\n        firstAid: true,\n        fireExtenguisher: true,\n        fitnessCert: true,\n        emergencyCard: true,\n        sparKArrestor: true\n      })\n      this.gateSecurityTransportReport = [...this.gateSecurityTransportReport]\n    } else {\n      if (!this.truckDetails) {\n        this.toastr.error(\"Can't add more than requested\")\n      } else {\n\n      }\n\n    }\n\n  }\n\n  //set value destination\n  setDestination(value) {\n    //  this.destinationDesc = value;\n    this.destination = value;\n  }\n\n  //set value to destination description\n  setDestDescription(value) {\n    this.destinationDesc = value;\n  }\n\n  getUserDestinationList(event) {\n    this.destination = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.getDestinationDescriptionDataList + event.target.value).subscribe(response => {\n        if (response['data']) {\n          this.descriptionList = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //getReportedDriversDetails\n  getReportedDriverDetails(truckNumber, Index) {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getReportedDriverDetails + truckNumber + \"&indentId=\" + this.reportingIndentId).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.isLoading = false;\n        //        this.gateSecurityTransportReport[Index].truckNumber = response['data'].\n        this.gateSecurityTransportReport[Index].containerNum = response['data'].containerNum;\n        this.gateSecurityTransportReport[Index].driverName = response['data'].driverName;\n        this.gateSecurityTransportReport[Index].driverContact = response['data'].driverContact;\n        this.gateSecurityTransportReport[Index].driverLicense = response['data'].driverLicense;\n        this.gateSecurityTransportReport[Index].puc = response['data'].puc;\n        this.gateSecurityTransportReport[Index].insurance = response['data'].insurance;\n        this.gateSecurityTransportReport[Index].seatBelt = response['data'].seatBelt;\n        this.gateSecurityTransportReport[Index].firstAid = response['data'].firstAid;\n        this.gateSecurityTransportReport[Index].fireExtenguisher = response['data'].fireExtenguisher;\n        this.gateSecurityTransportReport[Index].fitnessCert = response['data'].fitnessCert;\n        this.gateSecurityTransportReport[Index].emergencyCard = response['data'].emergencyCard;\n        this.gateSecurityTransportReport[Index].sparKArrestor = response['data'].sparKArrestor;\n        this.gateSecurityTransportReport[Index].truckUnladenWt=response['data'].truckUnladenWt;\n        this.gateSecurityTransportReport[Index].truckGrossVehicleWt=response['data'].truckGrossVehicleWt;\n        this.gateSecurityTransportReport[Index].fuelType=response['data'].fuelType;\n        this.gateSecurityTransportReport[Index].bsNorms=response['data'].bsNorms;\n\n        // this.gateSecurityTransportReport[Index].truckType = response['data'].truckType;\n        // this.gateSecurityTransportReport[Index].driverContact = response['data'].driverName;\n      } else {\n        this.isLoading = false;\n        this.gateSecurityTransportReport[Index].containerNum = '';\n        this.gateSecurityTransportReport[Index].driverName = '';\n        this.gateSecurityTransportReport[Index].driverContact = '';\n        this.gateSecurityTransportReport[Index].driverLicense = '';\n        // this.gateSecurityTransportReport[Index].puc = '';\n        // this.gateSecurityTransportReport[Index].insurance = '';\n        // this.gateSecurityTransportReport[Index].seatBelt = '';\n        // this.gateSecurityTransportReport[Index].firstAid = '';\n        // this.gateSecurityTransportReport[Index].fireExtenguisher = '';\n        // this.gateSecurityTransportReport[Index].fitnessCert = '';\n        // this.gateSecurityTransportReport[Index].emergencyCard = '';\n        // this.gateSecurityTransportReport[Index].sparKArrestor = '';\n        // this.gateSecurityTransportReport[Index].truckType = '';   \n        // this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong \", \"! Error\");\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  // report truck details\n  truckDetails(row) {\n    this.IsReportedIndentsShow = true;\n    this.reportingIndentId = row.indentId;\n    let totalTrucksRequested = row.netRequested;\n    this.reportedTrucks = row.reportedTrucks;\n    this.reportedTrucks = [...this.reportedTrucks];\n    // this.numberofManualEntries = totalTrucksRequested - this.reportedTrucks.length;\n    this.numberofManualEntries = row.netBalance;\n    this.gateSecurityTransportReport = [];\n    // for (let i = 0; i < this.numberofManualEntries; i++) {\n    this.manualTruckAssign(row);\n    console.log(this.gateSecurityTransportReport)\n    // }\n    // this.isLoading = true;\n    // this.reportingIndentId = row.indentId;\n    // let totalTrucksRequested = row.indented;\n    // this.gateSecurityTransportReport = [];\n    // this.service.get_service(ApiserviceService.apisList.getIndentReportInfo + \"?indentId=\" + this.reportingIndentId).subscribe(response => {\n    //   console.log(response);\n    //   if (response['statusCode'] == 200) {\n    //     this.reportedTrucks = response['data'];\n    //     this.reportedTrucks = [...this.reportedTrucks];\n    //     this.reportTruckTableShow = true;\n    //     this.numberofManualEntries = totalTrucksRequested - this.reportedTrucks.length;\n\n    //     //for (let i = 0; i < numberofManualEntries; i++) {\n    //     this.manualTruckAssign();\n    //     console.log(this.gateSecurityTransportReport)\n    //     // }\n\n    //     this.isLoading = false;\n    //   } else {\n    //     this.isLoading = false;\n    //     this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong\", \"!Error\")\n    //   }\n    // }, (err) => {\n    //   console.log(\"Error\", err);\n    //   this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    //   this.isLoading = false;\n    // })\n  }\n\n  //get filter destination result\n  countryOfDestinationFilter(event, type) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?' + type + '=' + filtervalue).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.countryList = [];\n          this.countryList = response['data'].searchResult;\n          this.isLoading = false;\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        }\n\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n\n  }\n\n  //manual truck assign removal line \n  removeManualTruckAssign(index) {\n    this.gateSecurityTransportReport.splice(index, 1)\n  }\n\n  calculateSummaryData(){\n    if(this.gateSecurityIndents.length > 0){\n      this.netRequestedSum = this.gateSecurityIndents.reduce((sum, { netRequested }) => sum + netRequested, 0);\n      this.reportedSum = this.gateSecurityIndents.reduce((sum, { reported }) => sum + reported, 0);\n      this.rejectedSum = this.gateSecurityIndents.reduce((sum, { rejected }) => sum + rejected, 0);\n      this.netBalanceSum = this.gateSecurityIndents.reduce((sum, { netBalance }) => sum + netBalance, 0);\n    }\n  }\n  clearSummaryData(){\n    this.netRequestedSum = 0;\n    this.reportedSum = 0;\n    this.rejectedSum = 0;\n    this.netBalanceSum = 0;\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReportTruckComponent } from './report-truck.component';\nimport { customMaterialModule } from '../../angular-material';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\n\nconst routes: Routes = [\n  { path: '', component: ReportTruckComponent},\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    FormsModule,\n    customMaterialModule,\n    LoaderModule,\n    NgxDatatableModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    ReportTruckComponent\n  ]\n})\n\nexport class ReportTruckModule { }\n"],"sourceRoot":""}