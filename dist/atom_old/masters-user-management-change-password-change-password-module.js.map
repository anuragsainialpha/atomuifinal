{"version":3,"sources":["webpack:///./src/app/masters/user-management/change-password/change-password.component.html","webpack:///./src/app/masters/user-management/change-password/change-password.component.scss","webpack:///./src/app/masters/user-management/change-password/change-password.component.ts","webpack:///./src/app/masters/user-management/change-password/change-password.module.ts"],"names":[],"mappings":"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","file":"masters-user-management-change-password-change-password-module.js","sourcesContent":["module.exports = \"\\n<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<h6 class=\\\"mt-item-header\\\">\\n    <b> User Management &gt; Change Password </b>\\n    </h6>\\n<br><br>\\n<!-- <mat-card> (click)=\\\"changePassword()\\\"-->\\n<div class=\\\"change-password container-fluid\\\">\\n  <form #createUserForm=\\\"ngForm\\\" (ngSubmit)=\\\"createUserForm.form.valid && changePassword(createUserForm)\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2\\\"></div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n              <mat-select placeholder=\\\"User Id\\\" [(ngModel)]=\\\"userId\\\" name=\\\"userId\\\" required>\\n                  <mat-option *ngFor=\\\"let loc of userIds\\\" [value]=\\\"loc\\\">\\n                    {{loc}}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"(createUserForm.submitted)\\\">\\n                    <p *ngIf=\\\"(createUserForm.submitted && qty.invalid)\\\">Plant Code is <strong>required</strong></p>\\n                  </mat-error>\\n              <!-- <input matInput placeholder=\\\"User Id\\\" [(ngModel)]=\\\"userId\\\" name=\\\"userId\\\" required #qty=\\\"ngModel\\\"> -->\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2\\\"></div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n              <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" #qty=\\\"ngModel\\\" required>\\n              <mat-error *ngIf=\\\"(createUserForm.submitted && qty.invalid)\\\">Password is <strong>required</strong></mat-error>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2\\\"></div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Confirm Password\\\" (keyup)=\\\"onKeyUp($event)\\\" aria-label=\\\"State\\\" autocomplete=\\\"off\\\" #qty=\\\"ngModel\\\"  [(ngModel)]=\\\"confirmPassword\\\" name=\\\"confirmPassword\\\" required>\\n            <mat-error *ngIf=\\\"(createUserForm.submitted && qty.invalid)\\\">Confirm Password is <strong>required</strong></mat-error>\\n            <div *ngIf=\\\"linebreaker\\\">\\n                <br><p class=\\\"mat-error mat-form-field-subscript-wrapper\\\"> {{values}}</p>\\n             </div>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-2\\\"></div>\\n          <div class=\\\"col-sm-4\\\"> \\n            <button class=\\\"btm-action-btn\\\" mat-raised-button>Submit</button>\\n      </div>\\n    </div>\\n    \\n  </form>\\n</div>\\n<!-- </mat-card> -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hc3RlcnMvdXNlci1tYW5hZ2VtZW50L2NoYW5nZS1wYXNzd29yZC9jaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators, NgForm } from '@angular/forms';\nimport { ApiserviceService } from 'src/app/services/api/apiservice.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as XLSX from 'xlsx';\ndeclare var $: any;\n\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  @ViewChild('createUserForm') createUserForm: NgForm;\n\n  isLoading: boolean;\n\n  userId: any = \"\";\n  password: any = \"\";\n  confirmPassword : any = \"\";\n\n\n\n  // userId = new FormControl('', [Validators.required, Validators.maxLength(30)]);\n  // email = new FormControl('', [Validators.email]);\n  // password = new FormControl('', [Validators.required, Validators.maxLength(5)]);\n  // confirmPassword = new FormControl('', [Validators.required]);\n\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"user-management\");\n    this.getUserIds();\n  }\n\nuserIds:any[]=[];\nservProsArray:any[]=[];\n\ngetUserIds() {\n  this.isLoading=true;\n  this.service.get_service(ApiserviceService.apisList.getUserIdsList).subscribe(response => {\n    this.userIds = response['data'];\n    this.isLoading=false;\n  }, (err) => {\n    console.log(\"Error\", err);\n    this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    this.isLoading = false;\n  })\n}\n\n\n  getErrorMessage(fieldName) {\n    if (fieldName === 'userId') {\n      return this.userId.hasError('required') ? 'must be min 5 and max 30 char long' :\n        this.userId.hasError('maxlength') ? 'User Id can be max 30 characters long' :\n          '';\n    }\n    else if (fieldName === 'password') {\n      return this.password.hasError('required') ? 'Please enter password' : '';\n    }\n    else if (fieldName === 'confirmPassword') {\n      return this.confirmPassword.hasError('required') ? 'You must enter a value' : this.password !== this.confirmPassword ? 'Passwords do not Match' : '';\n    }\n  }\n\n\n\n\n\n\n\n\n  changePassword(form: NgForm) {\n    if(this.linebreaker==true){\n      console.log(\"submit data: emptry return  \");\n      return \"\";\n    }\n\n   if(this.userId !==\"\" && this.password !==\"\"  && this.confirmPassword !==\"\"){\n    let data = {\n      \"itemsList\": [\n        {\n      \"userId\": this.userId,\n      \"password\": this.password,\n    }\n  ]\n    }\n\n    console.log(\"submit data:  \" + JSON.stringify(data));\n    this.service.post_service(ApiserviceService.apisList.changePassword, data).subscribe(response => {\n      this.isLoading = false;\n      this.toastr.success(response['message']);\n      form.resetForm();\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n\n   }\n  }\n\n\n\n  values = '';\n  linebreaker:boolean=false;\n  onKeyUp(event: any) {\n    //  this.values = event.target.value;\n      if(this.password != event.target.value){\n        this.values = \"Password do not match\"\n        this.linebreaker=true;\n      }else{\n        this.values =\"\";\n        this.linebreaker=false;\n      }\n  };\n\n\n\n\n// clear(){\n//   userId = \"\";\n//   email = new FormControl('', [Validators.email]);\n//   password = new FormControl('', [Validators.required, Validators.maxLength(5)]);\n//   confirmPassword = new FormControl('', [Validators.required]);\n// }\n\n\n  // clearAll() {\n  //   this.userId = \"\";\n  //   this.password = \"\";\n  //   this.city = \"\";\n  // }\n\n\n\n\n  \n\n  onKeyPress(event: any) {\n     this.values = event.target.value;\n  };\n\n  onChange(event: any) {\n     this.values = event.target.value;\n  };\n\n  onKeydown(event: any) {\n    this.values = event.target.value;\n  };\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChangePasswordComponent } from './change-password.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoaderModule } from '../../../public/loader/loader-shared.module';\nimport { customMaterialModule } from '../../../angular-material';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\n\nconst routes: Routes = [\n  { path: '', component: ChangePasswordComponent }\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    LoaderModule,\n    customMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDatatableModule\n  ],\n  declarations: [ChangePasswordComponent]\n})\nexport class ChangePasswordModule { }\n"],"sourceRoot":""}