{"version":3,"sources":["webpack:///./src/app/fgs-operations/create-load-slip/create-load-slip.component.html","webpack:///./src/app/fgs-operations/create-load-slip/create-load-slip.component.scss","webpack:///./src/app/fgs-operations/create-load-slip/create-load-slip.component.ts","webpack:///./src/app/fgs-operations/create-load-slip/create-load-slip.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,67BAA67B,YAAY,4iBAA4iB,2BAA2B,qCAAqC,gCAAgC,GAAG,4BAA4B,sPAAsP,0CAA0C,u0BAAu0B,qKAAqK,yEAAyE,oCAAoC,+CAA+C,gCAAgC,GAAG,qCAAqC,8QAA8Q,8BAA8B,8DAA8D,gCAAgC,GAAG,4BAA4B,2QAA2Q,qBAAqB,iPAAiP,+BAA+B,gcAAgc,4DAA4D,WAAW,wsBAAwsB,YAAY,8nBAA8nB,YAAY,uTAAuT,yBAAyB,unBAAunB,kBAAkB,0QAA0Q,qBAAqB,odAAod,kBAAkB,uLAAuL,+BAA+B,yRAAyR,wBAAwB,kbAAkb,2DAA2D,uSAAuS,gEAAgE,+QAA+Q,0DAA0D,wRAAwR,yBAAyB,yJAAyJ,yBAAyB,yJAAyJ,yBAAyB,2JAA2J,2BAA2B,wIAAwI,uBAAuB,6HAA6H,qCAAqC,8HAA8H,+BAA+B,ovBAAovB,oBAAoB,iNAAiN,0BAA0B,sYAAsY,uDAAuD,MAAM,ymBAAymB,KAAK,aAAa,6EAA6E,ifAAif,2DAA2D,0JAA0J,2DAA2D,sbAAsb,kEAAkE,gYAAgY,+EAA+E,sXAAsX,6EAA6E,iVAAiV,6DAA6D,uXAAuX,2EAA2E,2iBAA2iB,qBAAqB,4LAA4L,gDAAgD,wOAAwO,kEAAkE,qsBAAqsB,kBAAkB,iUAAiU,iFAAiF,ieAAie,OAAO,2LAA2L,mDAAmD,olBAAolB,4BAA4B,wPAAwP,wCAAwC,iCAAiC,0CAA0C,iCAAiC,8GAA8G,kPAAkP,4BAA4B,6DAA6D,iCAAiC,4BAA4B,mEAAmE,uPAAuP,qDAAqD,iOAAiO,6DAA6D,+gCAA+gC,uBAAuB,mSAAmS,gCAAgC,sQAAsQ,6BAA6B,qdAAqd,gBAAgB,wYAAwY,gBAAgB,mlBAAmlB,gBAAgB,gUAAgU,4BAA4B,0QAA0Q,sBAAsB,0iBAA0iB,mBAAmB,8iBAA8iB,mBAAmB,6QAA6Q,2BAA2B,uQAAuQ,yBAAyB,mjBAAmjB,eAAe,ggBAAggB,eAAe,klBAAklB,eAAe,wlBAAwlB,eAAe,mkBAAmkB,kBAAkB,udAAud,kBAAkB,8kBAA8kB,eAAe,ggBAAggB,eAAe,8kBAA8kB,eAAe,2hBAA2hB,eAAe,mkBAAmkB,kBAAkB,udAAud,kBAAkB,klBAAklB,gBAAgB,mgBAAmgB,gBAAgB,mlBAAmlB,gBAAgB,mgBAAmgB,gBAAgB,ylBAAylB,mBAAmB,0dAA0d,mBAAmB,ysEAAysE,uBAAuB,mSAAmS,gCAAgC,sQAAsQ,6BAA6B,sQAAsQ,0BAA0B,yQAAyQ,4BAA4B,0QAA0Q,sBAAsB,+TAA+T,mBAAmB,6QAA6Q,2BAA2B,oQAAoQ,uBAAuB,uQAAuQ,yBAAyB,4TAA4T,eAAe,iRAAiR,sCAAsC,uQAAuQ,yBAAyB,4TAA4T,eAAe,iRAAiR,sCAAsC,yQAAyQ,0BAA0B,0QAA0Q,0BAA0B,2QAA2Q,wCAAwC,+5BAA+5B,uXAAuX,qBAAqB,mwBAAmwB,8FAA8F,qBAAqB,oM;;;;;;;;;;;ACAn96C,+DAA+D,2L;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAU;AACC;AACjB;AACd;AACG;AACsE;AACtE;AAC4E;AACc;AAOxI;IAwGE,iCAAmB,OAA0B,EAAU,MAAc,EAAU,cAA8B,EAAU,MAAqB,EAAU,MAAiB;QAApJ,YAAO,GAAP,OAAO,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAW;QAvGvK,2BAAsB,GAAG,EAAE,CAAC;QAI5B,cAAS,GAAY,KAAK,CAAC;QAQ3B,yBAAoB,GAAG,EAAE,CAAC;QAC1B,SAAI,GAAG;YACL,KAAK,EAAE,GAAG;YACV,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,WAAW;YACpB,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,wBAAmB,GAAG,EAAE,CAAC;QAEzB,iBAAY,GAAG,EAAE,CAAC;QAClB,WAAM,GAAG,EAAE,CAAC;QACZ,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,EAAE,CAAC;QACf,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,YAAO,GAAG,EAAE,CAAC;QACb,0BAAqB,GAAY,KAAK,CAAC;QACvC,eAAU,GAAG,EAAE,CAAC;QAKhB,0BAAqB,GAAY,KAAK,CAAC;QAwBvC,oBAAe,GAAW,CAAC,CAAC;QAC5B,mBAAc,GAAW,CAAC,CAAC;QAC3B,oBAAe,GAAW,CAAC,CAAC;QAE5B,qBAAgB,GAAG,EAAE,CAAC;QACtB,qBAAgB,GAAG,EAAE,CAAC;QAKtB,gBAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAG9C,sBAAiB,GAAG,EAAE,CAAC;QAEvB,gBAAW,GAAY,IAAI,CAAC;QAO5B,oBAAe,GAAY,KAAK,CAAC;QAEjC,gBAAW,GAAW,CAAC,CAAC;QAGxB,eAAU,GAAY,KAAK,CAAC;QAG5B,qBAAgB,GAAW,CAAC,CAAC;QAI7B,uBAAkB,GAAG,EAAE,CAAC;QA0iDxB,gBAAW,GAAG,UAAC,GAAG;YAChB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO;gBACL,WAAW,EAAE,CAAC,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC;gBACjC,eAAe,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC;aACvC,CAAC;QACJ,CAAC;IAtiD0K,CAAC;IAC5K,0CAAQ,GAAR;QACE,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAChE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;QACvF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,2DAAS,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QACrB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,qDAAqD;YACrD,qBAAqB;YACrB,IAAI,CAAC,sBAAsB,EAAE,CAAC;SAC/B;aAAM,IAAI,IAAI,CAAC,oBAAoB,EAAE;YACpC,IAAI,CAAC,gCAAgC,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACzE,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QACD,gBAAgB;QAChB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAGD,oBAAoB;IACpB,gDAAc,GAAd;QACE,0GAA0G;QAC1G,oCAAoC;QACpC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YACvD,OAAO,IAAI;SACZ;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,4CAAU,GAAV;QAAA,iBAQC;QAPC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,UAAU,GAAG,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACnH,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;gBAC5D,4BAA4B;gBAC5B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YACnD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;aACI;YACH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IACH,CAAC;IAED,qBAAqB;IACrB,+CAAa,GAAb;QAAA,iBAWC;QAVC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,aAAa,GAAG,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACtH,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC/B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB;IACxB,qDAAmB,GAAnB;QAAA,iBAwBC;QAvBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,gBAAgB,GAAG,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACzH,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC7B,IAAM,UAAU,GAAG,8BAA8B,GAAG,YAAY,CAAC;gBACjE,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAC1C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;gBACzC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;gBACvC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO,CAAC,KAAK,EAAE,CAAC;gBAChB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACnC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;aAC1C;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;aAClG;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAGD,wDAAsB,GAAtB;QAAA,iBAkFC;QAjFC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,sBAAsB,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACpH,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpC,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC5C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC5C,KAAI,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;gBAC9B,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC;gBAC9C,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,CAAC;gBACtD,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;gBAClD,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,CAAC;gBACtD,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;gBAClD,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC,aAAa,CAAC;gBAChD,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;gBAC9C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC5C,KAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,kBAAkB,CAAC;gBAC1D,KAAI,CAAC,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC;gBAC5B,KAAI,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC1C,KAAI,CAAC,yBAAyB,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC1D,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,WAAW,CAAC;gBACrD,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC,SAAS,CAAC;gBAC5C,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;gBAC1C,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;gBAC1C,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;gBAC1C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC5C,KAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC;gBACtC,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,QAAQ,CAAC;gBAC9C,KAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;gBACpC,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,oBAAoB,CAAC;gBAC9D,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC5C,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;gBAC1C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,cAAc,CAAC;gBAC/C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,QAAQ,CAAC;gBACzC,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC,MAAM,CAAC;gBACzC,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAE5C,+BAA+B;gBAC/B,KAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,sBAAsB,CAAC;gBAC9D,uBAAuB;gBACvB,KAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC,eAAe,CAAC;gBACtD,wBAAwB;gBACxB,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,eAAe,CAAC;gBACrD,KAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,kBAAkB,CAAC;gBAC3D,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,kBAAkB,CAAC;gBACxD,oBAAoB;gBACpB,KAAI,CAAC,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC;gBAC5C,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC;gBAC9C,KAAI,CAAC,eAAe,GAAG,YAAY,CAAC,UAAU,CAAC;gBAC/C,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;gBAClD,KAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC,QAAQ,CAAC;gBAC/C,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,WAAW,CAAC;gBACrD,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,WAAW,CAAC;gBACrD,KAAI,CAAC,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC;gBACrC,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,QAAQ,CAAC;gBACzC,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,mBAAmB,CAAC;gBACvD,+BAA+B;gBAC/B,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,QAAQ,CAAC;gBACzC,KAAI,CAAC,eAAe,GAAG,YAAY,CAAC,eAAe,CAAC;gBACpD,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,SAAS,CAAC;gBAC1C,sBAAsB;gBACtB,KAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;gBACpC,KAAI,CAAC,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,qBAAqB,GAAG,YAAY,CAAC,qBAAqB,CAAC;gBAChE,KAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,mBAAmB,CAAC;gBAC5D,0CAA0C;gBAC1C,KAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;gBAE5C,uCAAuC;gBACvC,KAAI,CAAC,4BAA4B,CAAC,YAAY,EAAE,KAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;aACvE;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,CAAC;aACvF;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,0BAA0B;QAC5B,CAAC,CAAC;IACJ,CAAC;IACD,8DAA4B,GAA5B,UAA6B,YAAY,EAAE,WAAW,EAAE,QAAQ;QAAhE,iBAwFC;QAvFC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,iBAAiB,GAAG,WAAW,GAAG,WAAW,GAAG,cAAc,GAAG,IAAI,CAAC,UAAU,GAAG,gBAAgB,GAAG,QAAQ,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACpL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpC,kCAAkC;gBAClC,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,aAAa,CAAC;gBAC7C,oDAAoD;gBACpD,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,CAAC;gBACtD,iCAAiC;gBACjC,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,aAAa,CAAC;gBAEvD,iBAAiB;gBACjB,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC,cAAc;gBAC/C,2CAA2C;gBAC3C,qCAAqC;gBACrC,wEAAwE;gBACxE,gGAAgG;gBAChG,iGAAiG;gBACjG,kCAAkC;gBAClC,iCAAiC;gBACjC,qCAAqC;gBACrC,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,UAAC,IAAI;oBACrC,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;wBAClC,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;yBAC5B;wBACD,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;yBAC5B;qBACF;yBAAM,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;wBACzC,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;yBAC5B;wBACD,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;yBAC5B;qBACF;yBAAM;wBACL,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;yBAC/D;wBACD,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;yBAC/D;qBACF;gBACH,CAAC,CAAC;gBAEF,KAAI,CAAC,oBAAoB,GAAO,KAAI,CAAC,oBAAoB,QAAC;gBAC1D,gDAAgD;gBAChD,IAAI,SAAS,GAAG;oBACd,cAAc,EAAE,YAAY,CAAC,WAAW;oBACxC,YAAY,EAAE,YAAY,CAAC,SAAS;oBACpC,UAAU,EAAE,YAAY,CAAC,QAAQ;oBACjC,eAAe,EAAE,YAAY,CAAC,mBAAmB;iBAClD;gBACD,wFAAwF;gBACxF,IAAI,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAI,IAAI,WAAI,CAAC,YAAY,IAAI,YAAY,CAAC,WAAW,EAA7C,CAA6C,CAAC,CAAC;gBACjG,IAAI,SAAS,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,YAAY,EAAE;oBAC7C,+BAA+B;oBAC/B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBACjC;gBACD,KAAI,CAAC,eAAe,GAAG,YAAY,CAAC,cAAc,CAAC;gBACnD,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,YAAY,IAAI,KAAI,CAAC,SAAS,EAAvC,CAAuC,CAAC,CAAC;gBACjG,IAAI,QAAQ,GAAG,KAAI,CAAC,eAAe,CAAC;gBACpC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,QAAQ,EAAE;oBACZ,0BAA0B;oBAC1B,KAAI,CAAC,gCAAgC,CAAC,QAAQ,CAAC,YAAY,EAAE,QAAQ,CAAC,UAAU,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;iBACxG;gBAED,0BAA0B;gBAC1B,iBAAiB;gBACjB,KAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC;aAG7C;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;gBAClG,OAAO,KAAK;aACb;QAEH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,yBAAyB;YACzB,OAAO,KAAK;QACd,CAAC,CAAC;IACJ,CAAC;IAGD,gDAAgD;IAChD,sDAAoB,GAApB,UAAqB,WAAW;QAAhC,iBA4CC;QA3CC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,iBAAiB,GAAG,WAAW,GAAG,WAAW,GAAG,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACtJ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpC,iCAAiC;gBACjC,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,aAAa,CAAC;gBACvD,KAAI,CAAC,oBAAoB,GAAO,KAAI,CAAC,oBAAoB,QAAC;gBAC1D,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,CAAC;gBACtD,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC,cAAc,CAAC;gBAChD,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,UAAC,IAAI;oBACrC,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;wBAClC,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;yBAC5B;wBACD,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;yBAC5B;qBACF;yBAAM,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;wBACzC,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;yBAC5B;wBACD,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;yBAC5B;qBACF;yBAAM;wBACL,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;yBAC/D;wBACD,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;4BACrB,IAAI,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;yBAC/D;qBACF;oBACD,IAAI,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE;wBAClD,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;qBAC5B;gBACH,CAAC,CAAC;gBACF,KAAI,CAAC,oBAAoB,GAAO,KAAI,CAAC,oBAAoB,QAAC,CAAC;aAC5D;QAEH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;QACpE,CAAC,CAAC;IACJ,CAAC;IAGD,0DAAwB,GAAxB,UAAyB,YAAY;QAArC,iBA6CC;QA5CC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,YAAY,CAAC,qBAAqB,EAAE;YACtC,YAAY,CAAC,qBAAqB,CAAC,OAAO,CAAC,cAAI;gBAC7C,IAAI,OAAO,GAAG;oBACZ,YAAY,EAAE,IAAI,CAAC,SAAS;oBAC5B,KAAK,EAAE,IAAI,CAAC,SAAS;oBACrB,YAAY,EAAE,IAAI,CAAC,UAAU;oBAC7B,kBAAkB,EAAE,IAAI,CAAC,QAAQ;oBACjC,SAAS,EAAE,IAAI,CAAC,MAAM;oBACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,QAAQ,EAAE,IAAI,CAAC,OAAO;oBACtB,KAAK,EAAE,IAAI,CAAC,GAAG;oBACf,SAAS,EAAE,IAAI,CAAC,YAAY;oBAC5B,eAAe,EAAE,IAAI,CAAC,YAAY;oBAClC,qBAAqB,EAAE,IAAI,CAAC,kBAAkB;oBAC9C,cAAc,EAAE,IAAI,CAAC,QAAQ;oBAC7B,aAAa,EAAE,IAAI,CAAC,WAAW;oBAC/B,YAAY,EAAE,IAAI,CAAC,UAAU;oBAC7B,SAAS,EAAE,IAAI,CAAC,OAAO;oBACvB,eAAe;oBACf,WAAW,EAAE,IAAI,CAAC,QAAQ;oBAC1B,WAAW,EAAE,IAAI,CAAC,SAAS;oBAC3B,WAAW,EAAE,IAAI,CAAC,OAAO;oBACzB,eAAe,EAAE,IAAI,CAAC,WAAW;oBACjC,cAAc,EAAE,IAAI,CAAC,OAAO;oBAE5B,cAAc;oBACd,WAAW,EAAE,IAAI,CAAC,SAAS;oBAC3B,WAAW,EAAE,IAAI,CAAC,OAAO;oBACzB,eAAe,EAAE,IAAI,CAAC,WAAW;oBACjC,cAAc,EAAE,IAAI,CAAC,OAAO;oBAC5B,WAAW,EAAE,IAAI,CAAC,QAAQ;oBAC1B,eAAe;oBACf,YAAY,EAAE,IAAI,CAAC,UAAU;oBAC7B,YAAY,EAAE,IAAI,CAAC,SAAS;oBAC5B,YAAY,EAAE,IAAI,CAAC,QAAQ;oBAC3B,gBAAgB,EAAE,IAAI,CAAC,YAAY;oBACnC,eAAe,EAAE,IAAI,CAAC,QAAQ;oBAC9B,kBAAkB,EAAE,IAAI,CAAC,gBAAgB;iBAC1C,CAAC;gBACF,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAChC,KAAI,CAAC,YAAY,GAAO,KAAI,CAAC,YAAY,QAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,kEAAgC,GAAhC,UAAiC,WAAW,EAAE,SAAS,EAAE,cAAc;QAAvE,iBAkCC;QAjCC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,GAAG;YACT,WAAW,EAAE,WAAW;YACxB,SAAS,EAAE,SAAS;YACpB,UAAU,EAAE,cAAc;YAC1B,gBAAgB,EAAE,IAAI,CAAC,eAAe;YACtC,QAAQ,EAAE,IAAI,CAAC,WAAW;SAC3B;QACD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,kFAAiB,CAAC,QAAQ,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACnG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,iBAAiB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACzC,KAAI,CAAC,uBAAuB,GAAG,iBAAiB,CAAC;gBACjD,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC;gBAC1E,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC;gBAC5E,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC;gBAC1E,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC;gBACrE,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC;gBACjE,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC;gBACpE,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC;gBACzD,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC;gBACrD,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC;gBACzD,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC;gBACvE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;aAClG;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,0EAA0E;IAC1E,oDAAkB,GAAlB;QAAA,iBAiBC;QAhBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACzF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,KAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC;gBACxD,KAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC;gBACxD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAM;gBACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,yBAAyB,EAAE,QAAQ,CAAC;gBAClG,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,yBAAyB;IACzB,+CAAa,GAAb,UAAc,WAAW,EAAE,QAAQ,EAAE,UAAU;QAC7C,iEAAiE;QACjE,2FAA2F;QAC3F,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;YAC/B,IAAI,KAAK,GAAW,IAAI,CAAC;YACzB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,cAAI,IAAI,WAAI,CAAC,QAAQ,IAAI,WAAW,EAA5B,CAA4B,CAAC,CAAC;YAC7E,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;gBACf,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,cAAI,IAAI,WAAI,CAAC,SAAS,IAAI,WAAW,EAA7B,CAA6B,CAAC,CAAC;aAC/E;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;YACxD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YACzD,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SAChC;QACD,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QAE9D,+CAA+C;QAC/C,IAAI,UAAU,IAAI,mBAAmB,EAAE;YACrC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,sFAAsF;YACtF,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;gBAC1B,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;gBAC7B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;gBAC1B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACjB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;aAC3B;SACF;IAEH,CAAC;IAED,mCAAmC;IACnC,sDAAoB,GAApB,UAAqB,WAAW;QAAhC,iBAYC;QAXC,IAAG,WAAW,EAAC;YACb,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,2BAA2B,GAAC,aAAa,GAAC,IAAI,CAAC,UAAU,GAAC,WAAW,GAAC,WAAW,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBACvJ,IAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAC;oBAC/B,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;iBACxC;qBAAI;oBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,0BAA0B,EAAE,WAAW,CAAC,CAAC;iBACxG;YACH,CAAC,EAAE,aAAG;gBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,yBAAyB,EAAE,QAAQ,CAAC;YACpE,CAAC,CAAC;SACD;IACL,CAAC;IAGD,uDAAqB,GAArB,UAAsB,IAAI,EAAE,QAAQ,EAAE,UAAU;QAAhD,iBAiIC;QAhIC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,4BAA4B;QAC5B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;QAC3B,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE;QAC7C,IAAI,UAAU,IAAI,mBAAmB,EAAE;YACrC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,GAAG,GAAG,EAAE,CAAC;SACV;QACD,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,iBAAiB,GAAG,WAAW,GAAG,WAAW,GAAG,gBAAgB,GAAG,GAAG,GAAG,cAAc,GAAG,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC1K,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpC,2CAA2C;gBAC3C,sEAAsE;gBACtE,IAAI,CAAC,KAAI,CAAC,qBAAqB,EAAE;oBAC/B,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC,aAAa,CAAC;oBAC/C,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,CAAC;oBACtD,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC,cAAc,CAAC;oBAChD,0CAA0C;oBAC1C,KAAI,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;oBAC9B,wEAAwE;oBACxE,kCAAkC;oBAClC,iCAAiC;oBACjC,qCAAqC;oBACrC,gGAAgG;oBAChG,iGAAiG;oBACjG,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;wBACpC,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;4BAClC,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;gCACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;6BAC5B;4BACD,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;gCACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;6BAC5B;yBACF;6BAAM,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;4BACzC,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;gCACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;6BAC5B;4BACD,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;gCACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM;6BAC3B;yBACF;6BAAM;4BACL,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;gCACrB,IAAI,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;6BAC/D;4BACD,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;gCACrB,IAAI,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;6BAC/D;yBACF;wBACD,IAAI,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE;4BAClD,gFAAgF;4BAChF,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;4BAC3B,oCAAoC;4BACpC,IAAI,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC9H,kCAAkC;4BAClC,IAAI,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC9H,KAAI,CAAC,mCAAmC,EAAE,CAAC;yBAC5C;wBACD,KAAI,CAAC,YAAY,GAAO,KAAI,CAAC,YAAY,QAAC,CAAC;oBAC7C,CAAC,CAAC;iBACH;qBAAM;oBACL,2FAA2F;oBAC3F,IAAI,cAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACpC,qCAAqC;oBACrC,gDAAgD;oBAChD,oDAAoD;oBACpD,KAAI,CAAC,gBAAgB,GAAG,cAAY,CAAC,gBAAgB,CAAC;oBACtD,iCAAiC;oBACjC,KAAI,CAAC,oBAAoB,GAAG,cAAY,CAAC,aAAa,CAAC;oBAEvD,iBAAiB;oBACjB,kDAAkD;oBAClD,2CAA2C;oBAC3C,qCAAqC;oBACrC,wEAAwE;oBACxE,gGAAgG;oBAChG,iGAAiG;oBACjG,kCAAkC;oBAClC,iCAAiC;oBACjC,qCAAqC;oBACrC,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,UAAC,IAAI;wBACrC,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;4BAClC,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;gCACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;6BAC5B;4BACD,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;gCACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;6BAC5B;yBACF;6BAAM,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;4BACzC,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;gCACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;6BAC5B;4BACD,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;gCACrB,IAAI,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;6BAC5B;yBACF;6BAAM;4BACL,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;gCACrB,IAAI,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;6BAC/D;4BACD,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;gCACrB,IAAI,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;6BAC/D;yBACF;oBACH,CAAC,CAAC;oBAEF,KAAI,CAAC,oBAAoB,GAAO,KAAI,CAAC,oBAAoB,QAAC;iBAE3D;gBACD,kEAAkE;gBAClE,2EAA2E;gBAC3E,IAAI,UAAU,IAAI,mBAAmB,EAAE;oBACrC,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,aAAa,CAAC;iBAC9C;gBACD,KAAI,CAAC,eAAe,GAAG,YAAY,CAAC,cAAc,CAAC;gBACnD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;aACxC;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;aACnG;QAEH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAGD,EAAE;IACF,iDAAe,GAAf,UAAgB,GAAG;QACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAChB,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;IACnC,CAAC;IACD,8BAA8B;IAC9B,6CAAW,GAAX,UAAY,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG;QACpC,IAAI,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAO,IAAI,CAAC,YAAY,QAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,YAAY,CAAC;IACrD,CAAC;IAID,yDAAuB,GAAvB,UAAwB,GAAG;QAA3B,iBAsEC;QArEC,8CAA8C;QAC9C,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,EAAE;YAC/D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,8BAA8B,CAAC;SAClD;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YACxB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;YAC9B,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,oCAAoC;YACpC,GAAG,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEzH,kCAAkC;YAClC,GAAG,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEzH,kCAAkC;YAClC,+HAA+H;YAE/H,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,aAAG;gBAC3B,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE;oBAChC,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;oBACzB,0BAA0B;oBAC1B,KAAI,CAAC,iBAAiB,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxD,KAAI,CAAC,oBAAoB,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjE,KAAI,CAAC,oBAAoB,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjE,KAAI,CAAC,cAAc,IAAI,GAAG,CAAC;iBAC5B;YAEH,CAAC,CAAC;YAEF,gCAAgC;YAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAC1C,4CAA4C;YAC5C,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAEjM,6DAA6D;gBAC7D,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;oBACzB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;oBACxJ,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;iBACtK;qBAAM;oBACL,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;iBACzJ;aACF;YACD,iCAAiC;YACjC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAEjL,4DAA4D;gBAC5D,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;oBACzB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;oBAC1I,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;iBAClK;qBAAM;oBACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;iBAC3I;aACF;YAED,sCAAsC;YACtC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAGjM,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;oBACzB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;oBACrJ,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;iBAClK;qBAAM;oBACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;iBACrJ;aACF;SACF;IACH,CAAC;IAID,8BAA8B;IAC9B,yDAAuB,GAAvB,UAAwB,WAAW;QAAnC,iBA2DC;QAzDC,kFAAkF;QAClF,gDAAgD;QAChD,6GAA6G;QAC7G,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,mHAAmH;YACnH,IAAI,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,YAAY,IAAI,WAAW,EAApC,CAAoC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9G,6BAA6B;YAC7B,8FAA8F;YAC9F,kGAAkG;YAClG,WAAW;YACX,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;YACxD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3D,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC;YACnE,IAAI;YAEJ,IAAI,IAAI,GAAG;gBACT,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;gBACxD,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;gBACpD,UAAU,EAAE,IAAI,CAAC,cAAc;gBAC/B,gBAAgB,EAAE,IAAI,CAAC,eAAe;gBACtC,QAAQ,EAAE,IAAI,CAAC,WAAW;gBAC1B,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBACnD,QAAQ,EAAE,IAAI,CAAC,UAAU;gBACzB,OAAO,EAAE,IAAI,CAAC,WAAW;aAE1B;YACD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,kFAAiB,CAAC,QAAQ,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBACnG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;oBACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC;oBACnC,KAAI,CAAC,uBAAuB,GAAG,YAAY,CAAC;oBAC5C,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC;oBAC7D,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC;oBACzD,KAAI,CAAC,mCAAmC,EAAE,CAAC;oBAC3C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;qBAAM;oBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;iBAClG;YACH,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;gBAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,mBAAmB,GAAG,EAAE;YAC7B,IAAI,CAAC,gBAAgB,GAAG,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;SACnC;IACH,CAAC;IAED,sDAAsD;IACtD,qEAAmC,GAAnC;QAAA,iBA+DC;QA9DC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,mBAAmB,GAAG,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,CAAC;QACzB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,aAAG;YAC3B,IAAI,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE;gBACnB,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;gBACzB,0BAA0B;gBAC1B,KAAI,CAAC,iBAAiB,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxD,KAAI,CAAC,oBAAoB,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjE,KAAI,CAAC,oBAAoB,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjE,KAAI,CAAC,cAAc,IAAI,GAAG,CAAC;gBAC3B,oCAAoC;gBACpC,4HAA4H;gBAC5H,kCAAkC;gBAClC,4HAA4H;gBAC5H,kCAAkC;gBAClC,8HAA8H;aAC/H;QACH,CAAC,CAAC;QACF,gCAAgC;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAC1C,4CAA4C;QAC5C,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;YAC/L,6DAA6D;YAC7D,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;gBACzB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;gBACvJ,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;aACrK;iBAAM;gBACL,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;aACxJ;SACF;aACI;YACH,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;SAC9B;QACD,iCAAiC;QACjC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;YAC/K,4DAA4D;YAC5D,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;gBACzB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;gBACzI,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;aACjK;iBAAM;gBACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;aAC1I;SACF;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC3B;QACD,sCAAsC;QACtC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;YAC/L,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;gBACzB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;gBACpJ,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;aACjK;iBAAM;gBACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;aAClJ;SACF;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC3B;IACH,CAAC;IAED,4BAA4B;IAC5B,2CAAS,GAAT,UAAU,UAAU,EAAE,SAAS;QAA/B,iBAkEC;QAjEC,wCAAwC;QACxC,IAAI,UAAU,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YAC/C,qEAAqE;YACrE,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC/C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,0CAA0C,EAAE,SAAS,CAAC,CAAC;aAC1E;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBACjE,IAAI,IAAI,GAAG;oBACT,UAAU,EAAE,UAAU;oBACtB,SAAS,EAAE,SAAS;iBACrB,CAAC;gBACF,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACzD,2CAA2C;gBAC3C,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,kFAAiB,CAAC,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;oBAChG,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAI,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;oBAChF,4DAA4D;oBAC5D,IAAI,aAAa,GAAG,EAAE,CAAC;oBACvB,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;oBACpC,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;wBACjC,qBAAqB;wBACrB,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;4BACpB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;4BACnC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;4BAC5C,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;4BAClD,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,CAAC;4BACtD,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;4BAClD,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC,aAAa,CAAC;4BAChD,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;4BAC9C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;4BAC5C,KAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,kBAAkB;4BACzD,KAAI,CAAC,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC;4BAC5B,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;4BAC5C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,cAAc,CAAC;4BAC/C,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,WAAW,CAAC;4BACrD,KAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,sBAAsB,CAAC;4BAC9D,KAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC;yBAC7C;wBACD,kFAAkF;wBAClF,IAAI,SAAS,IAAI,SAAS,EAAE;4BAC1B,CAAC,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;4BAC9C,KAAI,CAAC,mBAAmB,GAAG,aAAa;yBACzC;wBACD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;qBAExB;yBAAM;wBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;wBAE3C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;wBAChD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;qBAClG;gBAEH,CAAC,EAAE,UAAC,GAAG;oBACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;oBAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACzB,CAAC,CAAC;aACH;SACF;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,EAAE,YAAY,CAAC,CAAC;SAC/D;IAGH,CAAC;IAED,wCAAwC;IACxC,2DAAyB,GAAzB,UAA0B,SAAS;QAAnC,iBA0LC;QAzLC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,UAAU,CAAC;QACf,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAC9D,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QACpE,IAAI,qBAAqB,GAAG,EAAE,CAAC;QAAC,IAAI,KAAK,GAAG,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,IAAI;YAC7B,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE;gBAC7B,gEAAgE;gBAChE,kFAAkF;gBAClF,8CAA8C;gBAC9C,IAAI,KAAI,CAAC,UAAU,EAAE;oBACnB,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;iBAC9B;qBAAM;oBACL,UAAU,GAAG,KAAK,CAAC;iBACpB;gBACD,KAAK,EAAE,CAAC;gBACR,IAAI,QAAQ,GAAG;oBACb,WAAW,EAAE,IAAI,CAAC,UAAU;oBAC5B,SAAS,EAAE,IAAI,CAAC,YAAY;oBAC5B,WAAW,EAAE,IAAI,CAAC,SAAS;oBAC3B,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,UAAU,EAAE,IAAI,CAAC,SAAS;oBAC1B,YAAY,EAAE,IAAI,CAAC,UAAU;oBAC7B,UAAU,EAAE,IAAI,CAAC,MAAM;oBACvB,SAAS,EAAE,IAAI,CAAC,MAAM;oBACtB,UAAU,EAAE,IAAI,CAAC,gBAAgB;oBACjC,cAAc,EAAE,IAAI,CAAC,aAAa;oBAClC,QAAQ,EAAE,IAAI,CAAC,OAAO;oBACtB,YAAY,EAAE,UAAU;oBACxB,WAAW,EAAE,IAAI,CAAC,GAAG;oBACrB,KAAK,EAAE,IAAI,CAAC,GAAG;oBACf,SAAS,EAAE,IAAI,CAAC,OAAO;oBACvB,WAAW,EAAE,IAAI,CAAC,SAAS;oBAC3B,SAAS,EAAE,IAAI,CAAC,YAAY;oBAC5B,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,UAAU,EAAE,IAAI,CAAC,SAAS;oBAC1B,YAAY,EAAE,IAAI,CAAC,UAAU;oBAC7B,UAAU,EAAE,IAAI,CAAC,aAAa;oBAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,WAAW,EAAE,IAAI,CAAC,UAAU;iBAE7B;gBACD,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACrC,gFAAgF;gBAChF,sDAAsD;gBACtD,uDAAuD;gBACvD,cAAc,GAAG,cAAc,GAAG,CAAC,CAAC;gBAEpC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC;gBACnC,QAAQ,IAAI,CAAC,mBAAmB,EAAE;oBAChC,kBAAkB;oBAClB,KAAK,MAAM;wBACT,KAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrD,MAAM;oBACR,kBAAkB;oBAClB,KAAK,MAAM;wBACT,KAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrD,MAAM;oBACR,aAAa;oBACb,KAAK,OAAO;wBACV,KAAI,CAAC,WAAW,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtD,MAAM;oBAER,KAAK,MAAM;wBACT,gBAAgB;wBAChB,IAAI,IAAI,CAAC,aAAa,KAAK,MAAM,EAAE;4BACjC,KAAI,CAAC,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACpD,eAAe;yBAChB;6BAAM;4BACL,KAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;4BACtC,KAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACvE,KAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACvE,KAAI,CAAC,WAAW,IAAI,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC3E;wBACD,MAAM;oBACR,oBAAoB;oBACpB;wBACE,cAAc;wBACd,KAAI,CAAC,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACzD,MAAM;iBACT;aAEF;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,mDAAmD;QACnD,IAAI,cAAc,IAAI,CAAC,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,2EAA2E;YAC3E,iEAAiE;YACjE,oEAAoE;YACpE,IAAI,cAAc,GAAG,CAAC,CAAC;YACvB,IAAI,kBAAkB,GAAG,CAAC,CAAC;YAC3B,IAAI,kBAAkB,GAAG,CAAC,CAAC;YAC3B,IAAI,2BAAyB,GAAG,CAAC,CAAC;YAClC,IAAI,8BAA4B,GAAG,CAAC,CAAC;YACrC,IAAI,8BAA4B,GAAG,CAAC,CAAC;YACrC,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;gBACzB,kCAAkC;gBAClC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,aAAG;oBAC3B,IAAI,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE;wBACnB,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;wBACzB,0BAA0B;wBAC1B,2BAAyB,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC3D,8BAA4B,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpE,8BAA4B,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACrE;gBACH,CAAC,CAAC;gBACF,4CAA4C;gBAC5C,IAAI,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,IAAI,IAAI,IAAI,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,IAAI,CAAC,EAAE;oBACrH,kBAAkB,GAAG,CAAC,CAAC,8BAA4B,GAAG,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,GAAG,GAAG,CAAC,CAAC;iBAChH;gBACD,iCAAiC;gBACjC,IAAI,IAAI,CAAC,uBAAuB,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,uBAAuB,CAAC,WAAW,IAAI,CAAC,EAAE;oBACrG,4DAA4D;oBAC5D,cAAc,GAAG,CAAC,CAAC,2BAAyB,GAAG,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;iBACjG;gBACD,sCAAsC;gBACtC,IAAI,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,IAAI,IAAI,IAAI,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,IAAI,CAAC,EAAE;oBACrH,kBAAkB,GAAG,CAAC,CAAC,8BAA4B,GAAG,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,GAAG,GAAG,CAAC;iBAC/G;aACF;iBAAM;gBACL,kCAAkC;gBAClC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC/C,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrF,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/E;YACD,IAAI,eAAe,GAAG;gBACpB,MAAM,EAAE,IAAI,CAAC,UAAU;gBACvB,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,WAAW,EAAE,IAAI,CAAC,SAAS;gBAC3B,qBAAqB,EAAE,qBAAqB;gBAC5C,MAAM,EAAE,SAAS;gBACjB,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,OAAO,EAAE,cAAc;gBACvB,UAAU,EAAE,kBAAkB;gBAC9B,UAAU,EAAE,kBAAkB;gBAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,OAAO,EAAE,IAAI,CAAC,SAAS;gBACvB,QAAQ,EAAE,IAAI,CAAC,gBAAgB;gBAC/B,cAAc,EAAE,IAAI,CAAC,cAAc;gBACnC,QAAQ,EAAE,IAAI,CAAC,iBAAiB;gBAChC,WAAW,EAAE,IAAI,CAAC,oBAAoB;gBACtC,WAAW,EAAE,IAAI,CAAC,oBAAoB;gBACtC,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,UAAU,EAAE,IAAI,CAAC,cAAc;gBAC/B,eAAe,EAAE,IAAI,CAAC,eAAe;gBACrC,QAAQ,EAAE,IAAI,CAAC,WAAW;gBAC1B,QAAQ,EAAE,IAAI,CAAC,WAAW;gBAC1B,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB;YACD,oCAAoC;YACpC,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI;aACrB;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;YAED,uCAAuC;YACvC,+GAA+G;YAC/G,gFAAgF;YAChF,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAI,IAAI,QAAC,IAAI,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC,EAAlD,CAAkD,CAAC,EAAE;gBACvF,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;oBACzB,IAAI,OAAO,GAAG,kFAAiB,CAAC,QAAQ,CAAC,oBAAoB,CAAC;oBAC9D,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;iBAC7C;qBAAM;oBACL,IAAI,OAAO,GAAG,kFAAiB,CAAC,QAAQ,CAAC,mBAAmB,CAAC;oBAC7D,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;iBAC7C;aACF;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,yBAAyB,EAAE,SAAS,CAAC,CAAC;aACzD;YAED,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACnB;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,KAAK;YACtB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,EAAE,WAAW,CAAC;SAC1D;IACH,CAAC;IACD,UAAU;IAUV,2BAA2B;IAC3B,8CAAY,GAAZ,UAAa,eAAe,EAAE,OAAO;QAArC,iBA4EC;QA3EC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACpE,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACrC,IAAI,YAAY,GAAG,aAAa,CAAC,gBAAgB,CAAC;gBAClD,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,CAAC;gBAEtD,IAAI,KAAI,CAAC,UAAU,EAAE;oBACnB,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;iBAC7C;gBACD,sBAAsB;gBACtB,KAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;gBACpC,KAAI,CAAC,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC;gBACpC,0CAA0C;gBAC1C,KAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,KAAI,CAAC,eAAe,GAAG,aAAa,CAAC,gBAAgB,CAAC;gBACtD,KAAI,CAAC,WAAW,GAAG,aAAa,CAAC,QAAQ,CAAC;gBAC1C,KAAI,CAAC,MAAM,GAAG,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC;gBACvD,mEAAmE;gBACnE,wGAAwG;gBACxG,qKAAqK;gBACrK,KAAI,CAAC,yBAAyB,GAAG,KAAI,CAAC,MAAM,CAAC;gBAC7C,KAAI,CAAC,WAAW,GAAG,aAAa,CAAC,gBAAgB,CAAC,QAAQ,CAAC;gBAC3D,KAAI,CAAC,cAAc,GAAG,aAAa,CAAC,gBAAgB,CAAC,mBAAmB,CAAC;gBACzE,KAAI,CAAC,oBAAoB,GAAG,aAAa,CAAC,gBAAgB,CAAC,oBAAoB,CAAC;gBAChF,uBAAuB;gBACvB,KAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC,gBAAgB,CAAC,eAAe,CAAC;gBACxE,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC,gBAAgB,CAAC,MAAM,CAAC;gBAE3D,KAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC,sBAAsB,CAAC;gBAC/D,KAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC;gBAC5C,mCAAmC;gBACnC,QAAQ,eAAe,CAAC,MAAM,EAAE;oBAC9B,KAAK,OAAO;wBACV,IAAI,KAAI,CAAC,UAAU,EAAE;4BACnB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kCAAkC,EAAE,SAAS,CAAC,CAAC;yBACpE;6BAAM;4BACL,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kCAAkC,EAAE,SAAS,CAAC,CAAC;yBACpE;wBACD,MAAM;oBAER;wBACE,IAAI,KAAI,CAAC,UAAU,EAAE;4BACnB,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC;yBACjD;wBACD,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kCAAkC,EAAE,SAAS,CAAC,CAAC;wBACnE,MAAM;iBACT;gBACD,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE;oBAC/B,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,eAAe,CAAC,MAAM,EAAE,KAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;iBAChH;gBACD,IAAI,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC;gBAC3C,IAAI,UAAU,EAAE;oBACd,IAAM,UAAU,GAAG,8BAA8B,GAAG,UAAU,CAAC;oBAC/D,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBAC1C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;oBACzC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC;oBAC9D,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;oBACnC,OAAO,CAAC,KAAK,EAAE,CAAC;iBACjB;aAGF;iBAAM;gBACL,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;oBACpB,KAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBAC9C;gBACD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QAEH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,2BAA2B;IAC3B,wDAAsB,GAAtB,UAAuB,SAAS;QAC9B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qJAAkC,EAAE;YACrE,IAAI,EAAE,SAAS;YACf,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IAGD,qCAAqC;IACrC,qDAAmB,GAAnB,UAAoB,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ;QACxD,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uIAA8B,EAAE;YACjE,IAAI,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE;YAC1F,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QACH,wEAAwE;QACxE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,mBAAmB,GAAG,EAAE;YAC7B,IAAI,CAAC,gBAAgB,GAAG,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SAClB;IACH,CAAC;IAGD,uBAAuB;IACvB,wDAAsB,GAAtB;QAAA,iBAgCC;QA/BC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iIAA4B,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;QACzF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,oBAAkB,MAAQ,CAAC,CAAC;YACxC,IAAI,MAAM,EAAE;gBACV,KAAI,CAAC,mBAAmB,GAAG,EAAE;gBAC7B,KAAI,CAAC,gBAAgB,GAAG,EAAE;gBAC1B,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;gBACpB,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACjB,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC1B,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,KAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;gBAC/B,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,KAAI,CAAC,YAAY,GAAO,KAAI,CAAC,YAAY,QAAC,CAAC;gBAC3C,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,KAAI,CAAC,WAAW,GAAC,EAAE,CAAC;gBACpB,KAAI,CAAC,IAAI,GAAE,EAAE,CAAC;aACf;YACD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAGD,gDAAgD;IAChD,kDAAgB,GAAhB;QAAA,iBAwBC;QAvBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,aAAa,GAAG,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACtH,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAM,UAAU,GAAG,8BAA8B,GAAG,YAAY,CAAC;gBACjE,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAC1C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;gBACzC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;gBAClD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO,CAAC,KAAK,EAAE,CAAC;gBAChB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBAEnC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;aAC1C;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;aAClG;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,2BAA2B;IAC3B,gDAAc,GAAd;QAAA,iBAwBC;QAvBC,wCAAwC;QACxC,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,IAAI,GAAG,EAAE;YACb,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,kFAAiB,CAAC,QAAQ,CAAC,oBAAoB,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBACzH,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;oBACjC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;oBACzC,KAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,kBAAkB;iBACnE;qBAAM;oBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;iBAClG;YACH,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;gBAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,EAAE,YAAY,CAAC,CAAC;SAC/D;IAGH,CAAC;IAGD,iCAAiC;IACjC,+DAA6B,GAA7B;QAAA,iBAiCC;QAhCC,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,IAAI,CAAC,yBAAyB,EAAE;gBAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,sBAAsB,GAAG,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,kBAAQ;oBACnI,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;wBACjC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC;+BACjH,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;4BAEvH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,cAAc,EAAE,KAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;yBAE3G;6BAAM,IAAI,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE;4BAEzD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,cAAc,EAAE,KAAI,CAAC,cAAc,EAAE,EAAE,CAAC;yBAC1G;qBACF;yBAAM;wBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;qBAClG;gBACH,CAAC,EAAE,UAAC,GAAG;oBACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;oBAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACzB,CAAC,CAAC;aAEH;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6CAA6C,EAAE,SAAS,CAAC;aAC5E;SACF;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,CAAC;SAChD;IAEH,CAAC;IAED,8BAA8B;IAC9B,2DAAyB,GAAzB;QAAA,iBAwBC;QAvBC,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,IAAI,CAAC,yBAAyB,EAAE;gBAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,kBAAQ;oBACxF,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;wBACjC,KAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;wBAC/C,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBAC5B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;qBACxB;yBAAM;wBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;qBAClG;gBACH,CAAC,EAAE,UAAC,GAAG;oBACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;oBAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACzB,CAAC,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,wCAAwC,EAAE,SAAS,CAAC;aACzE;SACF;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,CAAC;SAChD;IACH,CAAC;IACD,wBAAwB;IACxB,4CAAU,GAAV;QAAA,iBAuBD;QAtBG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAG,IAAI,CAAC,kBAAkB,EAAC;YAC3B,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,kFAAiB,CAAC,QAAQ,CAAC,UAAU,GAAG,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,aAAa,GAAG,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBACxK,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;oBACjC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;oBACzC,KAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;oBACjC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBAC5B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;qBAAM;oBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;iBAClG;YACH,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;gBAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,CAAC;SACH;aAAI;YACH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oCAAoC,EAAE,UAAU,CAAC,CAAC;YACtE,IAAI,CAAC,SAAS,GAAE,KAAK,CAAC;SACvB;IACH,CAAC;IAGC,2BAA2B;IAC3B,6CAAW,GAAX;QAAA,iBAeC;QAdC,wBAAwB;QACxB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACjF,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpC,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,QAAQ,CAAC;gBAC9C,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,QAAQ,CAAC;gBAC9C,yBAAyB;gBACzB,oCAAoC;gBACrC,iCAAiC;aACjC;iBAAM;gBACL,0BAA0B;gBAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;aAClG;QACH,CAAC,CAAC;IACJ,CAAC;IAED,oCAAoC;IACpC,wDAAsB,GAAtB;QAAA,iBAYC;QAXC,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,wBAAwB;QACxB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACzF,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;YAC/B,KAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC5C,yBAAyB;QAC3B,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAGD,uCAAK,GAAL,UAAM,IAAI;QACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,yGAAyG;QACzG,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;QACtB,IAAI,OAAO,gBAAQ,IAAI,CAAE,CAAC;QAC1B,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC;QACxB,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;QACvB,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC;QAC1B,iDAAiD;QACjD,OAAO,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;QACzB,0CAA0C;QAC1C,IAAI,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;QACpC,IAAI,aAAa,CAAC;QAClB,IAAI,YAAY,GAAW,GAAG,CAAC;QAC/B,IAAI,IAAI,CAAC,iBAAiB,CAAC,aAAa,GAAG,MAAM,CAAC,EAAE;YAClD,IAAI,cAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC;YAClE,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAI,WAAI,CAAC,UAAU,KAAK,cAAY,EAAhC,CAAgC,CAAC,CAAC;YACtF,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,cAAY,GAAG,YAAY,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;YACxE,IAAI,CAAC,iBAAiB,CAAC,aAAa,GAAG,MAAM,CAAC,GAAG,SAAS,CAAC;YAC3D,OAAO,CAAC,UAAU,GAAG,SAAS,CAAC;SAEhC;aAAM;YACL,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAI,WAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,EAAlC,CAAkC,CAAC,CAAC;YACxF,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,GAAG,YAAY,CAAC;YACvD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC;SAEvE;QACD,0DAA0D;QAE1D,IAAI,aAAa,IAAI,CAAC,CAAC,EAAE;YACvB,kCAAkC;YAClC,aAAa,GAAG,aAAa,GAAG,CAAC,CAAC;SACnC;aAAM;YACL,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAI,WAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAtC,CAAsC,CAAC,CAAC;YAC5F,IAAI,aAAa,IAAI,CAAC,CAAC,EAAE;gBACvB,aAAa,GAAG,aAAa,CAAC;aAC/B;iBAAM;gBACL,IAAI,sBAAoB,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBAE/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClD,IAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,UAAU,IAAI,sBAAoB,EAAvC,CAAuC,CAAC,CAAC;oBAClG,IAAI,iBAAiB,EAAE;wBACrB,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAI,WAAI,CAAC,UAAU,IAAI,sBAAoB,EAAvC,CAAuC,CAAC,CAAC;wBAC7F,MAAM;qBACP;yBAAM;wBACL,sBAAoB,EAAE,CAAC;wBACvB,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;4BACjC,mCAAmC;4BACnC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAI,WAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,EAAlC,CAAkC,CAAC,GAAG,CAAC,CAAC;4BAC5F,MAAM;yBACP;6BAAM;4BACL,SAAS;yBACV;qBACF;iBACF;aACF;SACF;QACD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;QACpD,iDAAiD;QACjD,IAAI,CAAC,YAAY,GAAO,IAAI,CAAC,YAAY,QAAC,CAAC;QAE3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,wBAAwB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACnF,CAAC;IAED,2CAAS,GAAT,UAAU,IAAI;QAAd,iBA4CC;QA3CC,8CAA8C;QAC9C,gCAAgC;QAChC,uDAAuD;QACvD,IAAI,cAAc,CAAC;QAAC,IAAI,YAAY,CAAC;QAAC,IAAI,aAAa,CAAC;QACxD,IAAI,IAAI,CAAC,OAAO,IAAI,GAAG,EAAE;YACvB,cAAc;YACd,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;YAC/B,aAAa,GAAG,YAAY,GAAG,CAAC,CAAC;YACjC,IAAI,gBAAgB,GAAO,IAAI,CAAC,YAAY,QAAC,CAAC;YAC9C,gBAAgB,CAAC,OAAO,CAAC,cAAI;gBAC3B,4EAA4E;gBAC5E,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,EAAE;oBAC1E,4FAA4F;oBAC5F,cAAc,GAAG,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,qBAAW,IAAI,kBAAW,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,EAAzC,CAAyC,CAAC,CAAC;oBACvG,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,EAAE;wBACpD,2DAA2D;wBAC3D,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;wBAChB,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;qBACrC;oBACD,kCAAkC;oBAClC,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;iBAC7C;YACH,CAAC,CAAC;SACH;aAAM,IAAI,IAAI,CAAC,OAAO,IAAI,GAAG,EAAE;YAC9B,YAAY;YACZ,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAI,WAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,EAAlC,CAAkC,CAAC,CAAC;YACzF,kCAAkC;YAClC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;SAC7C;aAAM,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAAE;YAClC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,qBAAW,IAAI,kBAAW,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,EAAzC,CAAyC,CAAC,CAAC;YACvG,2DAA2D;YAC3D,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;YAChB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;SAC7C;QAED,IAAI,CAAC,oBAAoB,GAAO,IAAI,CAAC,oBAAoB,QAAC,CAAC;QAE3D,IAAI,CAAC,YAAY,GAAO,IAAI,CAAC,YAAY,QAAC,CAAC;QAC3C,8CAA8C;QAC9C,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,mBAAmB,CAAC;IAErD,CAAC;IAID,qCAAG,GAAH,UAAI,IAAI;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,OAAO,gBAAQ,IAAI,CAAE,CAAC;QAC1B,IAAI,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,cAAI,IAAI,QAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,EAA5E,CAA4E,CAAC,CAAC;QAE9I,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;QAC9C,IAAI,cAAc,IAAI,CAAC,EAAE;YACvB,0DAA0D;YAC1D,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;SACxB;aAAM;YACL,uFAAuF;YACvF,OAAO,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,UAAU,EAAf,CAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACzG;QACD,0HAA0H;QAC1H,OAAO,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;QAClC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YAClD,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;YAC3B,OAAO,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7I,OAAO,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9I;QACD,IAAI,CAAC,YAAY,GAAO,IAAI,CAAC,YAAY,SAAE,OAAO,EAAC;QAEnD,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,oBAAoB,GAAO,IAAI,CAAC,oBAAoB,QAAC,CAAC;QAC3D,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;IAErC,CAAC;IACD,2CAAS,GAAT,UAAU,CAAC;QACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAWD,6CAAW,GAAX,UAAY,QAAQ;QAApB,iBAsBC;QArBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,kFAAiB,CAAC,QAAQ,CAAC,WAAW,GAAG,cAAc,GAAG,QAAQ,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC7G,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpC,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC5C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,cAAc,CAAC;gBAC/C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC5C,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC,aAAa,CAAC;gBAChD,KAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC;gBAC5C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aACzC;iBACI;gBACH,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;aAClG;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YAClD,OAAO,IAAI;SACZ;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,0EAA0E;IAC1E,kDAAgB,GAAhB;QACE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,8CAAY,GAAZ,UAAa,MAAe,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU;QACtD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,EAAE,UAAU,CAAC;SAC/C;IAEH,CAAC;IAEA,cAAc;IACd,wCAAM,GAAN;QAAA,iBA2BA;QA1BC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,kFAAiB,CAAC,QAAQ,CAAC,aAAa,GAAE,cAAc,GAAC,IAAI,CAAC,UAAU,GAAC,SAAS,GAAC,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAChJ,IAAI,QAAQ,EAAE;gBACZ,sDAAsD;gBACtD,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,mEAAmE,EAAE,CAAC,CAAC;gBAClH,IAAI,QAAQ,GAAG,KAAI,CAAC,UAAU,GAAC,OAAO,CAAC;gBACvC,IAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC9C,IAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACtC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;gBACzC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;gBACd,CAAC,CAAC,QAAQ,GAAG,QAAQ;gBACrB,CAAC,CAAC,KAAK,EAAE,CAAC;gBACV,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACjC,CAAC,CAAC,MAAM,EAAE,CAAC;gBACb,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAM;gBACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,mCAAmC,EAAE,QAAQ,CAAC,CAAC;gBAC7G,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IAEJ,CAAC;IAED,sDAAoB,GAApB,UAAqB,UAAe,EAAE,SAAc;QAClD,IAAI,CAAC,qBAAqB,GAAG,4BAA4B,CAAC;QAC1D,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;IACxC,CAAC;IAjoD4B;QAA5B,+DAAS,CAAC,gBAAgB,CAAC;;mEAAqB;IA/FtC,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,mJAAgD;;SAEjD,CAAC;yCAyG4B,kFAAiB,EAAkB,sDAAM,EAA0B,8DAAc,EAAkB,wDAAa,EAAkB,2DAAS;OAxG5J,uBAAuB,CAiuDnC;IAAD,8BAAC;CAAA;AAjuDmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfgD;AAC3C;AACM;AACwB;AAChB;AACV;AACiB;AACU;AACX;AACuD;AACM;AACc;AACjE;AACvE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAuB,EAAE;IAChD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,mFAAuB,EAAE;IAC3D,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,mFAAuB,EAAE;IACrE,EAAE,IAAI,EAAE,kEAAkE,EAAE,SAAS,EAAE,mFAAuB,EAAE;CACjH,CAAC;AAuBF;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QArBhC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAC/B,4DAAY;gBACZ,0DAAW;gBACX,sEAAoB;gBACpB,gFAAY;gBACZ,0EAAkB;gBAClB,iGAAiB;gBACjB,qFAAoB;aACrB;YACD,YAAY,EAAE;gBACZ,mFAAuB;aACxB;YACD,eAAe,EAAE;gBACf,mFAAuB;gBACvB,iIAA4B;gBAC5B,wIAA8B;gBAC9B,sJAAkC;aACnC;SACF,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ","file":"fgs-operations-create-load-slip-create-load-slip-module.js","sourcesContent":["module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    Loadslip >\\n    <span *ngIf=\\\"!loadslipID\\\">Create Load Slip</span>\\n    <span *ngIf=\\\"(loadslipID && !viewType)\\\">Drafted Load Slip\\n      <span class=\\\"pull-right refresh-span\\\">\\n        <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export Download\\\">\\n          <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </span>\\n    </span>\\n    <span *ngIf=\\\"(loadslipID && viewType)\\\">View Load Slip</span>\\n  </h6>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"loadslip-fields tab-loadslip-fields\\\">\\n    <div class=\\\"row margin-bottom-5\\\">\\n      <div class=\\\"col-md-7\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2\\\">\\n            <div class='inputbordered'>\\n              <div>Source</div>\\n              <div>\\n                <b>{{userSource}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <mat-form-field *ngIf=\\\"!isLoadslipIdAvaliable\\\">\\n                <mat-select placeholder=\\\"Destination\\\" [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\"\\n                  (ngModelChange)=\\\"getTrucksList(destination,category,'destinationFilter')\\\" required>\\n                  <mat-option *ngFor=\\\"let dest of destinationList\\\" [value]=\\\"dest.dest_loc\\\">\\n                    {{dest.dest_loc | uppercase}}<span *ngIf=\\\"dest.dest_desc\\\">&nbsp; -\\n                      &nbsp;({{dest.dest_desc | uppercase}})</span>\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <div *ngIf=\\\"isLoadslipIdAvaliable\\\">\\n                <div>Destination</div>\\n                <div>\\n                  <b>{{destination?destination:'--' | uppercase}}</b>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pd-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <!-- (isLoadslipIdAvaliable?!isLoadslipIdAvaliable:!shipmentNumber) -->\\n\\n              <!-- *ngIf=\\\"(checkMultiStop())? !checkMultiStop(): !confirmedDate\\\" -->\\n              <!-- The above condition logic was  -->\\n              <!-- 1) Loadslip truck,variant,actual truck type can editble only in single loadslip in a shipmentNumber\\n                2)Not works in Multi pick/Drop  -->\\n\\n              <mat-form-field *ngIf=\\\"(checkMultiStop())? !checkMultiStop(): !confirmedDate\\\">\\n                <mat-select placeholder=\\\"Truck\\\" [(ngModel)]=\\\"truckType\\\" name=\\\"truckType\\\"\\n                  (ngModelChange)=\\\"defaultTruckData();getLoadSlipUtilazations($event)\\\">\\n                  <mat-option [value]=\\\"\\\">None</mat-option>\\n                  <mat-option *ngFor=\\\"let truckType of truckTypes;let i=index\\\" [value]=\\\"truckType.TRUCK_NUMBER\\\">\\n                    {{truckType.TRUCK_NUMBER | uppercase}} <span *ngIf=\\\"truckType.ITEM_CATEGORY\\\">&nbsp;\\n                      - &nbsp;({{truckType.ITEM_CATEGORY | uppercase}})</span>\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <div *ngIf=\\\"(checkMultiStop())? checkMultiStop(): confirmedDate\\\">\\n                <div>Truck</div>\\n                <div>\\n                  <b>{{multistopTruckNumber || '--'}} <span *ngIf=\\\"multistopTruckNumber && indentCategory\\\">&nbsp;\\n                      - &nbsp;({{indentCategory | uppercase}})</span></b>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Truck Type</div>\\n              <div>\\n                <b>{{truckT?truckT:'--' }}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 pd-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Transporter</div>\\n              <div>\\n                <b>{{transporter?transporter:'--' }}</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-5\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3 pr-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Ship To\\\" [(ngModel)]=\\\"ShipTo\\\" name=\\\"shito\\\">\\n                  <mat-option *ngFor=\\\"let shipPlace of shiptoPlaceList;let i=index\\\" [value]=\\\"shipPlace\\\">\\n                    {{shipPlace}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-3 \\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <mat-form-field *ngIf=\\\"(checkMultiStop())? !checkMultiStop(): !confirmedDate\\\">\\n                <!-- <mat-select [(ngModel)]=\\\"actualTruckType\\\" name=\\\"actualTruckType\\\" placeholder=\\\"Actual Truck Type\\\"\\n                  (selectionChange)=\\\"getLoadSlipUtilazations(truckType)\\\">\\n                  <mat-option selected>None</mat-option>\\n                  <mat-option *ngFor=\\\"let list of actualTruckTypeList\\\" [value]=\\\"list.value\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-select> -->\\n                <mat-select placeholder=\\\"Actual Truck Type\\\" [(ngModel)]=\\\"actualTruckType\\\" name=\\\"actualTruckType\\\"\\n                  (selectionChange)=\\\"getLoadSlipUtilazations(truckType)\\\">\\n                  <mat-option selected>None</mat-option>\\n                  <mat-optgroup *ngFor=\\\"let group of truckTypeClass\\\" [label]=\\\"group.name\\\" [disabled]=\\\"group.disabled\\\">\\n                    <mat-option *ngFor=\\\"let type of group.mtTruckTypeInfos\\\" [value]=\\\"type.value\\\"\\n                      style=\\\"font-weight: normal\\\">\\n                      {{type.value}}\\n                    </mat-option>\\n                  </mat-optgroup>\\n                </mat-select>\\n              </mat-form-field>\\n              <div *ngIf=\\\"(checkMultiStop())? checkMultiStop(): confirmedDate\\\">\\n                <div>Actual Truck Type</div>\\n                <div>\\n                  <b>{{actualTruckType || '--'}}</b>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 pd-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <mat-form-field *ngIf=\\\"(checkMultiStop())? !checkMultiStop(): !confirmedDate\\\">\\n                <mat-select placeholder=\\\"Variant 1\\\" [(ngModel)]=\\\"variant_ONE\\\" name=\\\"variant_ONE\\\"\\n                  (selectionChange)=\\\"getLoadSlipUtilazations(truckType)\\\">\\n                  <mat-option selected>None</mat-option>\\n                  <mat-option *ngFor=\\\"let item of variant_one_List\\\" [value]=\\\"item\\\">\\n                    {{item | uppercase}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <div *ngIf=\\\"(checkMultiStop())? checkMultiStop(): confirmedDate\\\">\\n                <div>Variant 1</div>\\n                <div>\\n                  <b>{{variant_ONE || '--'}}</b>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <!-- <mat-form-field appearance=\\\"standard\\\">\\n                <mat-select placeholder=\\\"Variant 2\\\" [(ngModel)]=\\\"variant_TWO\\\" name=\\\"variantvariant_TWO_ONE\\\">\\n                  <mat-option *ngFor=\\\"let item of variant_two_List\\\" [value]=\\\"item\\\">\\n                    {{item | uppercase}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field> -->\\n\\n              <div>Frt Avail</div>\\n              <div>\\n                <b>{{ freightAvailableflag || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row margin-bottom-5\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <div class='bordered'>\\n          <div>Shipment No</div>\\n          <div>\\n            <b>{{shipmentNumber || '--'}}</b>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3 pd-0\\\">\\n        <div class=\\\"bordered-box\\\">\\n          <div class=\\\"row text-center h-100\\\">\\n            <div class=\\\"col-md-4 col-4 text-center bordered-box-left-div\\\">\\n              <div>\\n                TTE Util\\n              </div>\\n              <div [ngClass]=\\\"(totalTTESeletecd > 100)?'text-danger':'color-green'\\\">\\n                <b>{{totalTTESeletecd?(totalTTESeletecd | number : '1.2-2'):0 }}%</b>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4 col-4 bordered-box-left-div\\\">\\n              <div>\\n                Wt Util\\n              </div>\\n              <div [ngClass]=\\\"(totalMaterialWeight > 100)?'text-danger':'color-green'\\\">\\n                <b>{{totalMaterialWeight?(totalMaterialWeight | number : '1.2-2'):0}}%</b>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4 col-4\\\">\\n              <div>\\n                Vol Util\\n              </div>\\n              <div [ngClass]=\\\"(totalTruckVolume > 100)?'text-danger':'color-green'\\\">\\n                <b>{{totalTruckVolume?(totalTruckVolume | number : '1.2-2'):0}}%</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-5\\\">\\n        <div class=\\\"row bg-theme\\\">\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Tyres</div>\\n            <div>\\n              {{totalTyres?totalTyres:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Tubes</div>\\n            <div>\\n              {{totalTubes?totalTubes:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Flaps</div>\\n            <div>\\n              {{totalFlaps?totalFlaps:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div> Valves</div>\\n            <div>\\n              {{totalValves?totalValves:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Pctr</div>\\n            <div>{{totalPctr?totalPctr:0}} </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Others</div>\\n            <div>{{totalOthersCount?totalOthersCount:0}} </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Tot Qty</div>\\n            <div>{{totalQuantity?totalQuantity:0}} </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-2 flow-btns MD-MP screenResponsive\\\">\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!isDraftMode\\\" class=\\\"tab-mb-10\\\" (click)=loadslipOnSameTruckNavigation()>\\n          LS on Same Truck(MD)</button>\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"ml-5\\\" [disabled]=\\\"!isDraftMode\\\"\\n          (click)=\\\"shareTruckDestinationList()\\\">Share\\n          Truck(MP)</button>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"row margin-bottom-5\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class='bordered'>\\n              <div>Load Slip No </div>\\n              <div><b>{{loadslipID || '--'}}</b></div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 pd-0\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>LS Category</div>\\n              <div>\\n                <b>{{loadslipCategory || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 \\\">\\n            <div class=\\\"form-group inputbordered categoryDropdown \\\">\\n              <mat-form-field appearance=\\\"standard\\\">\\n                <mat-select placeholder=\\\"Drop Seq\\\" [(ngModel)]=\\\"dropSeq\\\" name=\\\"dropSeq\\\">\\n                  <mat-option *ngFor=\\\"let item of dropSeqList;let i=index\\\" [value]=\\\"item\\\">\\n                    {{item}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-8 pd-0\\\">\\n        <div class=\\\"flow-btns tab-flow-btns width-12-5\\\">\\n          <!-- [disabled]=\\\"confirmedDate != null\\\" -->\\n          <button *ngIf=\\\"(bayArrivedDate == null)\\\" mat-raised-button (click)=\\\"eventCall(loadslipID,'ARRIVED_BAY')\\\"\\n            class=\\\"mat-default\\\">Arrived\\n            Bay</button>\\n          <button *ngIf=\\\"(bayArrivedDate != null)\\\" class=\\\"greenButton\\\">Arrived\\n            Bay <b>: {{bay}}</b> <span>{{bayArrivedDate\\n              | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n        </div>\\n        <div class=\\\"flow-btns tab-flow-btns width-12-5\\\">\\n          <button mat-raised-button color=\\\"default\\\" (click)=\\\"saveAsDraft_Print_trigger('PRINT')\\\" class=\\\"mat-default\\\"\\n            *ngIf=\\\"(lsPrintDate == null) && (confirmedDate == null)\\\">Print LS</button>\\n          <button (click)=\\\"saveAsDraft_Print_trigger('PRINT')\\\" class=\\\"greenButton\\\"\\n            *ngIf=\\\"(lsPrintDate != null) && (confirmedDate == null)\\\">Print\\n            LS<span> {{lsPrintDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n          <button (click)=\\\"downloadLoadslip()\\\" class=\\\"greenButton\\\" *ngIf=\\\"(confirmedDate != null)\\\">Print\\n            Pdf<span> {{lsPrintDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n        </div>\\n        <div class=\\\"flow-btns tab-flow-btns width-12-5\\\">\\n          <button mat-raised-button color=\\\"default\\\" (click)=\\\"sendForBarcode()\\\" *ngIf=\\\"(sendForBarcodeDate == null)\\\">Send\\n            Barcode</button>\\n          <button class=\\\"greenButton\\\" *ngIf=\\\"(sendForBarcodeDate != null)\\\" (click)=\\\"sendForBarcode()\\\"\\n            [disabled]=\\\"(confirmedDate)\\\">Send Barcode\\n            <span>{{sendForBarcodeDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n        </div>\\n        <div class=\\\"flow-btns tab-flow-btns width-12-5\\\">\\n          <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(loadingStartDate == null)\\\"\\n            (click)=\\\"eventCall(loadslipID,'LOADING_START')\\\">Loading\\n            Start</button>\\n          <button *ngIf=\\\"(loadingStartDate != null)\\\" class=\\\"greenButton\\\">Loading Start <span>{{loadingStartDate |\\n              customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n        </div>\\n        <div class=\\\"flow-btns tab-flow-btns width-12-5\\\">\\n          <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(loadingEndDate == null)\\\"\\n            (click)=\\\"eventCall(loadslipID,'LOADING_END')\\\">Loading\\n            End</button>\\n          <button *ngIf=\\\"(loadingEndDate != null)\\\" class=\\\"greenButton\\\">Loading End <span>{{loadingEndDate |\\n              customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n        </div>\\n        <div class=\\\"flow-btns tab-flow-btns width-12-5\\\">\\n          <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"!sostoNumber\\\"\\n            (click)=\\\"eventCall(loadslipID,'CONFIRM')\\\">Confirm</button>\\n          <button *ngIf=\\\"sostoNumber\\\" class=\\\"greenButton\\\">Confirm\\n            <span>{{confirmedDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n        </div>\\n        <div class=\\\"flow-btns tab-flow-btns width-12-5\\\">\\n          <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(releasedDate == null)\\\"\\n            (click)=\\\"eventCall(loadslipID,'RELEASED')\\\" [disabled]=\\\"!(sapInvoice)\\\">Release</button>\\n          <button *ngIf=\\\"(releasedDate != null)\\\" class=\\\"greenButton\\\">Release <span>{{releasedDate | customDateFormat |\\n              date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n        </div>\\n        <div class=\\\"flow-btns tab-flow-btns width-12-5\\\">\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"stosoDelete(loadslipID)\\\"\\n            [disabled]=\\\"(sostoNumber && sapInvoice) ||  (!sostoNumber)\\\">STO/SO\\n            Delete</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>STO/SO</div>\\n              <div><b>{{STOSONumber || '--'}}</b></div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3  pl-0\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>TTE Qty</div>\\n              <div><b>{{totalTTEQty?(totalTTEQty | number : '1.2-2'):0}}</b></div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3  pd-0\\\">\\n              <div class=\\\"bordered\\\">\\n            <div>\\n              Wt (Kg)\\n            </div>\\n            <div>\\n              <b>{{itemLevelTotalWeight?(itemLevelTotalWeight | number : '1.2-2'):0}}</b>\\n            </div>\\n            </div>\\n          </div>\\n     \\n\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2  pr-0\\\">\\n                <div class=\\\"form-group inputbordered categoryDropdown\\\" *ngIf=\\\"!confirmedDate\\\">\\n                  <mat-form-field appearance=\\\"standard\\\">\\n                    <mat-select placeholder=\\\"LS Category\\\" [(ngModel)]=\\\"category\\\" name=\\\"cat\\\" #categorySelect\\n                      (openedChange)=\\\"openedChange($event,destination,category,'categoryFilter')\\\" multiple>\\n                      <mat-option *ngFor=\\\"let item of categoryList\\\" [value]=\\\"item\\\">\\n                        {{item | uppercase}}\\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n                <div *ngIf=\\\"confirmedDate\\\">\\n                  <div class=\\\"bordered\\\">\\n                    <div>Category</div>\\n                    <div>\\n                      <b>{{(selectedCategories.length>0)?(selectedCategories.toString() | uppercase):'--' }}</b>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n          <div class=\\\" col-md-2 flow-btns tab-flow-btns\\\" *ngIf=\\\"elrFlag\\\">\\n            <!-- class=\\\"greenButton\\\" -->\\n            <button (click)=\\\"generateLrNum()\\\" mat-raised-button color=\\\"default\\\" *ngIf=\\\"generateLr\\\">Generate LR</button>\\n            <button (click)=\\\"downloadLoadReceipt()\\\" class=\\\"greenButton\\\" *ngIf=\\\"printLr\\\">Print\\n              LR<span>{{lrNum}}</span></button>\\n          </div>\\n          <div class=\\\"col-md-1\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>Indt Cat</div>\\n              <div>\\n                <b>{{indentCategory?(indentCategory | uppercase):'--' }}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pd-0\\\">\\n            <div class=\\\"form-group bordered\\\">\\n              <mat-form-field *ngIf=\\\"!isLoadslipIdAvaliable\\\" appearance=\\\"standard\\\" class=\\\"padding-top-5\\\">\\n                <mat-select placeholder=\\\"Dest Description\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\"\\n                  (ngModelChange)=\\\"getTrucksList(description,category,'destinationFilter')\\\">\\n                  <mat-option *ngFor=\\\"let dest of descriptionList\\\" [value]=\\\"dest.dest_desc\\\">\\n                    {{dest.dest_desc | uppercase}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <div *ngIf=\\\"isLoadslipIdAvaliable\\\">\\n                <div>Dest Desc</div>\\n                <div [title]=\\\"description\\\" [ngClass]=\\\"{'cursor-pointer':description?.length>14}\\\">\\n                  <!-- <b>{{description?description:'--' | uppercase}}</b> -->\\n                  <b>{{description ? (((description?.length>14)? (description | slice:0:14)+'..':(description)) | uppercase) : '--'}}</b>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>City</div>\\n              <div>\\n                <!-- <b>{{city?city:'--' | uppercase}}</b> -->\\n                <div [title]=\\\"city\\\" [ngClass]=\\\"{'cursor-pointer':city?.length>20}\\\">\\n                  <b>{{city ? (city?.length>20) ? (city | slice:0:20)+'..':(city) : '--'}}</b>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-2\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>Consent Status</div>\\n              <div>\\n                <b>{{trackingConsentStatus?(trackingConsentStatus):'--' }}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-1\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>Telecom Provider</div>\\n              <div>\\n                <b>{{consentPhoneTelecom?(consentPhoneTelecom | uppercase):'--' }}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"flow-btns tab-flow-btns width-6-5\\\">\\n            <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"(trackingConsentStatus!='Success' || row.trackingConsentStatus!=null)\\\"\\n            [disabled]=\\\"trackingConsentStatus == 'Success'\\\" (click)=\\\"checkConsentLoadSlip(loadslipID,'RETRY')\\\"\\n            class=\\\"table-btn mr-10\\\">Check Consent Status\\n          </button>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"mb-3\\\">\\n    <div class=\\\"datatable\\\">\\n    <ngx-datatable class='material no-scroll-table' [rows]='loadSlipData' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [limit]=\\\"200\\\"\\n      [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [rowClass]=\\\"getRowClass\\\" [scrollbarH]=\\\"true\\\">\\n      <ngx-datatable-column name=\\\"Material Code\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"ITEM_ID\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_ID || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Material Description\\\" [width]=\\\"250\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"ITEM_DESCRIPTION\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_DESCRIPTION || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Cat\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"ITEM_CATEGORY\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_CATEGORY || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Batch\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"BATCH_CODE\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <!-- Batch Code can editble only for RDC , not for FGS -->\\n          <!-- FGS ROLES -->\\n          <ng-container *ngIf=\\\"!is_Role_RDC()\\\">\\n            <span> {{row.BATCH_CODE}} </span>\\n          </ng-container>\\n          <!-- RDC ROLE -->\\n          <ng-container *ngIf=\\\"is_Role_RDC()\\\">\\n            <div *ngIf=\\\"!sostoNumber\\\">\\n              <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-BATCH_CODE'] = true\\\"\\n                *ngIf=\\\"!editing[rowIndex + '-BATCH_CODE']\\\">\\n                <span class=\\\"edit-label\\\"> {{row.BATCH_CODE}} </span>\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n              </div>\\n              <div *ngIf=\\\"editing[rowIndex + '-BATCH_CODE']\\\">\\n                <input class=\\\"input-field\\\" (keyup)=\\\"updateValue($event, 'BATCH_CODE', rowIndex,row)\\\" autocomplete=\\\"off\\\"\\n                  *ngIf=\\\"editing[rowIndex+ '-BATCH_CODE']\\\" type=\\\"text\\\" [value]=\\\"row.BATCH_CODE\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"sostoNumber\\\">\\n              <span class=\\\"edit-label\\\"> {{row.BATCH_CODE}} </span>\\n            </div>\\n          </ng-container>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Priority\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"MIN_PRIORITY\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.MIN_PRIORITY || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Available Qty\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"SUM_QTY\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.SUM_QTY || \\\"0\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Qty\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"qty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <div *ngIf=\\\"!sostoNumber\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-qty'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-qty']\\\">\\n              <span class=\\\"edit-label\\\">{{row.qty || \\\"--\\\"}} </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <mat-form-field *ngIf=\\\"editing[rowIndex + '-qty']\\\">\\n              <input matInput (keyup)=\\\"updateValue($event, 'qty', rowIndex,row)\\\" (blur)=\\\"calculateMaterialWeight(row)\\\"\\n                (keypress)=\\\"service.numberOnly($event)\\\" autocomplete=\\\"off\\\" *ngIf=\\\"editing[rowIndex+ '-qty']\\\" type=\\\"text\\\"\\n                [value]=\\\"row.qty?row.qty:''\\\" />\\n            </mat-form-field>\\n          </div>\\n          <span *ngIf=\\\"sostoNumber\\\">{{row.qty || \\\"--\\\"}} </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Scannable\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"scanQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.isScannable || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Scan Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"scannedQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.scannedQty || \\\"0\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Tube Code\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"TUBE_CODE\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <div *ngIf=\\\"!sostoNumber\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-TUBE_CODE'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-TUBE_CODE']\\\">\\n              <span class=\\\"edit-label\\\"> {{row.TUBE_CODE}} </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"editing[rowIndex + '-TUBE_CODE']\\\">\\n              <input class=\\\"input-field\\\" (keyup)=\\\"updateValue($event, 'TUBE_CODE', rowIndex,row)\\\" autocomplete=\\\"off\\\"\\n                type=\\\"text\\\" [value]=\\\"row.TUBE_CODE\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"sostoNumber\\\">\\n            <span class=\\\"edit-label\\\"> {{row.TUBE_CODE}} </span>\\n          </div>\\n\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Tube Batch\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"tubeBatch\\\">\\n\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <div *ngIf=\\\"!sostoNumber\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-tubeBatch'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-tubeBatch']\\\">\\n              <span class=\\\"edit-label\\\"> {{row.tubeBatch}} </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"((row.tubeBatch) || (row.tubeBatch == undefined) )\\\"></i>\\n            </div>\\n            <mat-form-field *ngIf=\\\"editing[rowIndex + '-tubeBatch']\\\">\\n              <input matInput (keyup)=\\\"updateValue($event, 'tubeBatch', rowIndex,row)\\\" autocomplete=\\\"off\\\"\\n                *ngIf=\\\"editing[rowIndex+ '-tubeBatch']\\\" type=\\\"text\\\" [value]=\\\"row.tubeBatch\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n            </mat-form-field>\\n          </div>\\n          <span *ngIf=\\\"sostoNumber\\\">{{row.tubeBatch}} </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Tube Qty\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalTubeQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <div *ngIf=\\\"!sostoNumber\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-totalTubeQty'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-totalTubeQty']\\\">\\n              <span class=\\\"edit-label\\\"> {{row.totalTubeQty}} </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"editing[rowIndex + '-totalTubeQty']\\\">\\n              <input class=\\\"input-field\\\" (keyup)=\\\"updateValue($event, 'totalTubeQty', rowIndex,row)\\\" autocomplete=\\\"off\\\"\\n                type=\\\"text\\\" [value]=\\\"row.totalTubeQty\\\" />\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"sostoNumber\\\">\\n            <span class=\\\"edit-label\\\"> {{row.totalTubeQty}} </span>\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Flap Code\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"FLAP_CODE\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <div *ngIf=\\\"!sostoNumber\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-FLAP_CODE'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-FLAP_CODE']\\\">\\n              <span class=\\\"edit-label\\\"> {{row.FLAP_CODE}} </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"editing[rowIndex + '-FLAP_CODE']\\\">\\n              <input class=\\\"input-field\\\" (keyup)=\\\"updateValue($event, 'FLAP_CODE', rowIndex,row)\\\" autocomplete=\\\"off\\\"\\n                type=\\\"text\\\" [value]=\\\"row.FLAP_CODE\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"sostoNumber\\\">\\n            <span class=\\\"edit-label\\\"> {{row.FLAP_CODE}} </span>\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Flap Batch\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"flapBatch\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <div *ngIf=\\\"!sostoNumber\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-flapBatch'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-flapBatch']\\\">\\n              <span class=\\\"edit-label\\\"> {{row.flapBatch}} </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <mat-form-field *ngIf=\\\"editing[rowIndex + '-flapBatch']\\\">\\n              <input matInput (keyup)=\\\"updateValue($event, 'flapBatch', rowIndex,row)\\\" autocomplete=\\\"off\\\"\\n                *ngIf=\\\"editing[rowIndex+ '-flapBatch']\\\" type=\\\"text\\\" [value]=\\\"row.flapBatch\\\"\\n                oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n            </mat-form-field>\\n          </div>\\n          <span *ngIf=\\\"sostoNumber\\\">{{row.flapBatch}} </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Flap Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalFlapQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <div *ngIf=\\\"!sostoNumber\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-totalFlapQty'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-totalFlapQty']\\\">\\n              <span class=\\\"edit-label\\\"> {{row.totalFlapQty}} </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"editing[rowIndex + '-totalFlapQty']\\\">\\n              <input class=\\\"input-field\\\" (keyup)=\\\"updateValue($event, 'totalFlapQty', rowIndex,row)\\\" autocomplete=\\\"off\\\"\\n                type=\\\"text\\\" [value]=\\\"row.totalFlapQty\\\" />\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"sostoNumber\\\">\\n            <span class=\\\"edit-label\\\"> {{row.totalFlapQty}} </span>\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Valve Code\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"VALVE_CODE\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <div *ngIf=\\\"!sostoNumber\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-VALVE_CODE'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-VALVE_CODE']\\\">\\n              <span class=\\\"edit-label\\\"> {{row.VALVE_CODE}} </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"editing[rowIndex + '-VALVE_CODE']\\\">\\n              <input class=\\\"input-field\\\" (keyup)=\\\"updateValue($event, 'VALVE_CODE', rowIndex,row)\\\" autocomplete=\\\"off\\\"\\n                type=\\\"text\\\" [value]=\\\"row.VALVE_CODE\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"sostoNumber\\\">\\n            <span class=\\\"edit-label\\\"> {{row.VALVE_CODE}} </span>\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Valve Batch\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"VALVE_DESC\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <div *ngIf=\\\"!sostoNumber\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-valveBatch'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-valveBatch']\\\">\\n              <span class=\\\"edit-label\\\"> {{row.valveBatch}} </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"editing[rowIndex + '-valveBatch']\\\">\\n              <input class=\\\"input-field\\\" (keyup)=\\\"updateValue($event, 'valveBatch', rowIndex,row)\\\" autocomplete=\\\"off\\\"\\n                type=\\\"text\\\" [value]=\\\"row.valveBatch\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" />\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"sostoNumber\\\">\\n            <span class=\\\"edit-label\\\"> {{row.valveBatch}} </span>\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Valve Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalValueQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <div *ngIf=\\\"!sostoNumber\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-totalValueQty'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-totalValueQty']\\\">\\n              <span class=\\\"edit-label\\\"> {{row.totalValueQty}} </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"editing[rowIndex + '-totalValueQty']\\\">\\n              <input class=\\\"input-field\\\" (keyup)=\\\"updateValue($event, 'totalValueQty', rowIndex,row)\\\" autocomplete=\\\"off\\\"\\n                type=\\\"text\\\" [value]=\\\"row.totalValueQty\\\" />\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"sostoNumber\\\">\\n            <span class=\\\"edit-label\\\"> {{row.totalValueQty}} </span>\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <!-- Colums enable only if the STO/SO Number is available -->\\n      <div *ngIf=\\\"!sostoNumber\\\">\\n        <ngx-datatable-column name=\\\"Actions\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalValueQty\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            <!-- Split only visible for RDC role and if loadslip created  -->\\n            <button class=\\\"theme-small-button\\\" (click)=\\\"split(row)\\\"\\n              *ngIf=\\\"(service.checkRole() == roles.rdc_PLN) && (isLoadslipIdAvaliable) && ((row.isSplit != 'Y') || (row.isSplit == ''))\\\">\\n              <i class=\\\"fa fa-code-fork fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n            <!--  Delete Button only visible if the loadslip is created -->\\n            <button class=\\\"theme-delete-button\\\" (click)=\\\"deleteRow(row)\\\"\\n              *ngIf=\\\"isLoadslipIdAvaliable && ((row.canLSItemDeleted) || (row.destinationItem))\\\">\\n              <i class=\\\"fa fa-trash fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n          </ng-template>\\n        </ngx-datatable-column>\\n      </div>\\n\\n\\n    </ngx-datatable>\\n  </div>\\n  </div>\\n  <div align=\\\"center\\\" *ngIf=\\\"loadSlipData.length > 0\\\">\\n    <button mat-stroked-button color=\\\"primary\\\" class=\\\"mr-3\\\" (click)=\\\"cancelLoadslipCreation()\\\"\\n      *ngIf=\\\"!(loadslipID)\\\">Cancel</button>\\n\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" class=\\\"btm-action-btn\\\"\\n      (click)=\\\"saveAsDraft_Print_trigger('DRAFT')\\\" [disabled]=\\\"isScanItemCheck\\\" *ngIf=\\\"!sostoNumber\\\">Save\\n      as Draft</button>\\n  </div>\\n  <div class=\\\"mb-3\\\" *ngIf=\\\"(destinationWisePlans.length > 0) && (loadslipID) && !sostoNumber\\\">\\n    <ngx-datatable class='material no-scroll-table destination-table ' [rows]='destinationWisePlans' [columnMode]=\\\"'force'\\\"\\n      [headerHeight]=\\\"50\\\" [limit]=\\\"200\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [scrollbarH]=\\\"true\\\">\\n      <ngx-datatable-column name=\\\"Material Code\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"ITEM_ID\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_ID || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Material Description\\\" [width]=\\\"250\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"ITEM_DESCRIPTION\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_DESCRIPTION || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Cat\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"ITEM_CATEGORY\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_CATEGORY || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Batch\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"BATCH_CODE\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.BATCH_CODE || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Priority\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"MIN_PRIORITY\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.MIN_PRIORITY || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Available Qty\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"SUM_QTY\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.SUM_QTY || \\\"0\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Qty\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"qty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span>{{row.qty || \\\"--\\\"}} </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Scannable\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"scanQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.isScannable || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Scan Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"scanQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.scanQty || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Tube Code\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"TUBE_CODE\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.TUBE_CODE || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Tube Batch\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"tubeBatch\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <span>{{row.tubeBatch}} </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Tube Qty\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalTubeQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.totalTubeQty?row.totalTubeQty:''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Flap Code\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"FLAP_CODE\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.FLAP_CODE || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Flap Batch\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"flapBatch\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <span>{{row.flapBatch}} </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Flap Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalFlapQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.totalFlapQty?row.totalFlapQty:''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Valve Code\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"VALVE_CODE\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.VALVE_CODE || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Valve Batch\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"VALVE_DESC\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.valveBatch || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Valve Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalValueQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.totalValueQty?row.totalValueQty:''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Actions\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalValueQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n          <button class=\\\"theme-small-button\\\" (click)=\\\"add(row,rowIndex)\\\">\\n            <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n    </ngx-datatable>\\n  </div>\\n\\n</div>\\n\\n\\n\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"myModal\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Select Pickup Location</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <mat-form-field>\\n          <mat-select [(ngModel)]=\\\"shareTruckLocation\\\" name=\\\"shareTruckLocation\\\" placeholder=\\\"Select Pickup Location\\\">\\n            <mat-option *ngFor=\\\"let sharebledestination of shareTrcukDestinations\\\" [value]=\\\"sharebledestination\\\">\\n              {{sharebledestination}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"shareTruck()\\\">Confirm</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n<div class=\\\"modal\\\" id=\\\"confirmeeventresposeModal\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">\\n          Message !!!\\n        </h4>\\n        <button type=\\\"button\\\" data-dismiss=\\\"modal\\\" class=\\\"close\\\">&times;</button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p class=\\\"text-center\\\">{{confirmeventmessage}}</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zncy1vcGVyYXRpb25zL2NyZWF0ZS1sb2FkLXNsaXAvY3JlYXRlLWxvYWQtc2xpcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog } from '@angular/material';\nimport { LoadslipCancelPopupComponent } from 'src/app/public/loadslip-cancel-popup/loadslip-cancel-popup.component';\nimport { constants } from 'src/app/constants';\nimport { LoadslipSuccessDialogComponent } from 'src/app/public/loadslip-success-dialog/loadslip-success-dialog.component';\nimport { CreateLoadslipsErrorPopupComponent } from 'src/app/public/create-loadslips-error-popup/create-loadslips-error-popup.component';\ndeclare var $: any;\n@Component({\n  selector: 'app-create-load-slip',\n  templateUrl: './create-load-slip.component.html',\n  styleUrls: ['./create-load-slip.component.scss']\n})\nexport class CreateLoadSlipComponent implements OnInit {\n  shareTrcukDestinations = [];\n  shareTruckLocation: string;\n  eventTriggers: any;\n  destinationList: any;\n  isLoading: boolean = false;\n  totalTTESeletecd: any;\n  totalTruckVolume: any;\n  totalTyres: any;\n  totalTubes: any;\n  totalFlaps: any;\n  totalValves: any;\n  ShipTo: any;\n  destinationWisePlans = [];\n  page = {\n    limit: 100,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n  actualTruckTypeList = [];\n  pageSize: number;\n  loadSlipData = [];\n  source = '';\n  destination = '';\n  truckType = '';\n  minDate = new Date();\n  editing = {};\n  createLoadSlipSuccess: boolean = false;\n  truckTypes = [];\n  loadslipUtilizationData: any;\n  totalMaterialWeight: any;\n  shiptoPlaceList: any;\n  userSource: string;\n  isLoadslipIdAvaliable: boolean = false;\n  setDefaultCurrency: string;\n  totalPctr: any;\n  viewType: string;\n  loadslipID: any;\n  bayArrivedDate: any;\n  loadingStartDate: any;\n  loadingEndDate: any;\n  confirmedDate: any;\n  releasedDate: any;\n  lsPrintDate: any;\n  shipmentNumber: any;\n  bay: any;\n  itemLevelTotalTTE: number;\n  itemLevelTotalWeight: number;\n  itemLevelTotalVolume: any;\n  totalLoadedQty: any;\n  loadslipCategory: any;\n  marketSegmentMap: any;\n  roles: any;\n  trackDetailsObj: any;\n  multistopTruckNumber: string;\n  multistopTruckType: string;\n  IS_MULTI_STOP: boolean;\n  loadslipTteUtil: number = 0;\n  loadslipWtUtil: number = 0;\n  loadslipVolUtil: number = 0;\n  sendForBarcodeDate: any;\n  variant_one_List = [];\n  variant_two_List = [];\n  route_shipmentNumber: string;\n  variant_ONE: string;\n  variant_TWO: string;\n  actualTruckType: any;\n  dropSeqList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  dropSeq: string;\n  freightAvailableflag: string;\n  lastSplittedItems = {};\n  userRoles: any;\n  isDraftMode: boolean = true;\n  truckT: string;\n  transporter: string;\n  sostoNumber: boolean;\n  sapInvoice: string;\n  IsUpdate: boolean;\n  confirmeventmessage: string;\n  isScanItemCheck: boolean = false;\n  STOSONumber: any;\n  totalTTEQty: number = 0;\n  elrFlag: boolean;\n  lrNum: any;\n  generateLr: boolean = false;\n  printLr: boolean;\n  totalQuantity: any;\n  totalOthersCount: number = 0;\n  IS_Truck_Part_of_Loadslip: string;\n  categoryList: any;\n  category: any;\n  selectedCategories = [];\n  @ViewChild('categorySelect') categorySelect: any;\n  indentCategory: any;\n  description: any;\n  city:any;\n  descriptionList: any;\n  truckTypeClass: any;\n  totalWeight:number;\n  trackingConsentStatus: any;\n  consentPhoneTelecom: any;\n  constructor(public service: ApiserviceService, private router: Router, private ActivatedRoute: ActivatedRoute, private toastr: ToastrService, private dialog: MatDialog) { }\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"load-slip\");\n    this.isLoading = true;\n    this.userSource = localStorage.getItem(\"sourceID\");\n    this.loadslipID = this.ActivatedRoute.snapshot.params['loadslipId'];\n    this.viewType = this.ActivatedRoute.snapshot.params['viewType'];\n    this.route_shipmentNumber = this.ActivatedRoute.snapshot.queryParams['shipmentNumber'];\n    this.shipmentNumber = this.route_shipmentNumber;\n    this.roles = constants.roles;\n    this.pageSize = 20;\n    this.page.limit = 20;\n    // For Normal Loadslip Procress\n    if (this.loadslipID) {\n      this.isLoadslipIdAvaliable = true;\n      // Get If Transpoter is registered for e-load receipt\n      // this.getElrFlag();\n      this.getLoadSlipDetailsById();\n    } else if (this.route_shipmentNumber) {\n      this.getLoadSlipUtilazationFromServer('', '', this.route_shipmentNumber);\n      this.getDestinationList();\n    } else {\n      this.getDestinationList();\n    }\n    // get variants \n    this.getvariants();\n  }\n\n\n  // Check multi stop \n  checkMultiStop() {\n    //check multi stop on based on the shipmentNumber,TruckNumber,Typeof truck if we get from the Route Params\n    // We can the Boolean of MULTI stop \n    if ((this.route_shipmentNumber) || (this.IS_MULTI_STOP)) {\n      return true\n    } else {\n      return false;\n    }\n  }\n\n  getElrFlag() {\n    this.service.get_service(ApiserviceService.apisList.getElrFlag + \"?loadslipId=\" + this.loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200 && response[\"data\"] == 'Y') {\n        //|| response[\"data\"] == 'N'\n        this.elrFlag = true;\n        this.lrNum = response['opsId'];\n      }\n    });\n  }\n\n  setLrButton() {\n    if (this.lrNum !== null && this.lrNum !== undefined) {\n      this.printLr = true;\n      this.generateLr = false;\n    }\n    else {\n      this.printLr = false;\n      this.generateLr = true;\n    }\n  }\n\n  // Generate Lr number\n  generateLrNum() {\n    console.log(\"**** generateLrNum\");\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.generateLrNum + \"?loadslipId=\" + this.loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.lrNum = response[\"opsId\"];\n        this.generateLr = false;\n        this.printLr = true;\n        this.isLoading = false;\n      }\n    });\n  }\n\n  // download load receipt\n  downloadLoadReceipt() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.printLoadReceipt + \"?loadslipId=\" + this.loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        let lrNo = response['opsId'];\n        const linkSource = 'data:application/pdf;base64,' + responseData;\n        var element = document.createElement('a');\n        element.setAttribute('href', linkSource);\n        element.setAttribute('download', lrNo);\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n        this.isLoading = false;\n        this.toastr.success(response['message']);\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n  getLoadSlipDetailsById() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getLoadSlipDetailsByID + \"/\" + this.loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        this.destination = responseData.destination;\n        this.description = responseData.description;\n        this.city = responseData.city;\n        this.shipmentNumber = responseData.shipmentID;\n        this.loadslipCategory = responseData.loadslipCategory;\n        this.bayArrivedDate = responseData.bayArrivedDate;\n        this.loadingStartDate = responseData.loadingStartDate;\n        this.loadingEndDate = responseData.loadingEndDate;\n        this.confirmedDate = responseData.confirmedDate;\n        this.releasedDate = responseData.releasedDate;\n        this.lsPrintDate = responseData.lsPrintDate;\n        this.sendForBarcodeDate = responseData.sendForBarcodeDate;\n        this.bay = responseData.bay;\n        this.ShipTo = responseData.shipTo;\n        this.truckType = responseData.truckNumber;\n        this.IS_Truck_Part_of_Loadslip = responseData.truckNumber;\n        this.multistopTruckNumber = responseData.truckNumber;\n        this.IS_MULTI_STOP = responseData.multiStop;\n        this.totalTyres = responseData.totalTyres;\n        this.totalTubes = responseData.totalTubes;\n        this.totalFlaps = responseData.totalFlaps;\n        this.totalValves = responseData.totalValves;\n        this.totalPctr = responseData.totPctr;\n        this.totalOthersCount = responseData.otherQty;\n        this.dropSeq = responseData.dropSeq;\n        this.freightAvailableflag = responseData.freightAvailableflag;\n        this.sostoNumber = responseData.sostoNumber;\n        this.sapInvoice = responseData.sapInvoice;\n        this.STOSONumber = responseData.sostoNumberVal;\n        this.totalTTEQty = responseData.totalTTE;\n        this.totalQuantity = responseData.totQty;\n        this.totalWeight = responseData.totalWeight;\n\n        // loadslip selecte categories \n        this.selectedCategories = responseData.selectedItemCategories;\n        // Last splitted object\n        this.lastSplittedItems = responseData.splitNumbersMap;\n        // Shipment level values\n        this.totalTTESeletecd = responseData.shipmentTTEUtil;\n        this.totalMaterialWeight = responseData.shipmentWeightUtil;\n        this.totalTruckVolume = responseData.shipmentVolumeUtil;\n        //Loads slip values \n        this.loadslipTteUtil = responseData.tteUtil;\n        this.loadslipWtUtil = responseData.weightUtil;\n        this.loadslipVolUtil = responseData.volumeUtil;\n        this.totalLoadedQty = responseData.totalLoadedQty;\n        this.itemLevelTotalTTE = responseData.totalTTE;\n        this.itemLevelTotalWeight = responseData.totalWeight;\n        this.itemLevelTotalVolume = responseData.totalVolume;\n        this.truckT = responseData.truckType;\n        this.transporter = responseData.servprov;\n        this.indentCategory = responseData.truckIndentCategory;\n        // variants & Actual Truck Type\n        this.variant_ONE = responseData.variant1;\n        this.actualTruckType = responseData.actualTruckType;\n        this.isDraftMode = responseData.isInDraft;\n        // ELR Flag, LR Number\n        this.elrFlag = responseData.elrFlag;\n        this.lrNum = responseData.elrNumber;\n        this.trackingConsentStatus = responseData.trackingConsentStatus;\n        this.consentPhoneTelecom = responseData.consentPhoneTelecom;\n        // Set if LR is to be Generated or Printed\n        this.setLrButton();\n        this.isLoading = false;\n        this.getTruckTypesForDest(this.destination);\n        \n        //get the loadslip plans & truckdetails\n        this.getLoadslipPlanByDestination(responseData, this.destination, '');\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      // this.isLoading = false;\n    })\n  }\n  getLoadslipPlanByDestination(responseData, destination, category) {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getLoadSlipsPlans + \"?destLoc=\" + destination + \"&loadslipId=\" + this.loadslipID + \"&itemCategory=\" + category).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        let repsonseData = response['data'];\n        // Trucktype save data from server\n        this.truckTypes = repsonseData.gatedInTrucks;\n        // Form Market segment (TUBE,FLAP,VALVE batch code )\n        this.marketSegmentMap = repsonseData.marketSegmentMap;\n        // destination related plans list\n        this.destinationWisePlans = repsonseData.loadSlipPlans;\n\n        // category list \n        this.categoryList = repsonseData.itemCategories\n        // this.category = this.selectedCategories;\n        // Logic for Tube Batch & Flap batch \n        // 1. Currently we are defaulting Batch Code for Tube and Flap as below:\n        //If tyre batch code ends with CC(last 2 digits), then default Tube and Flap batch code to BOCC.\n        // If tyre batch code ends with KZ(last 2 digits), then default Tube and Flap batch code to BOKZ.\n        //a.Marketing segment is REP: BOAW\n        //b.Marketing segment is OE: BOOE\n        //c.Marketing segment is EXPORT: BOEX\n        this.destinationWisePlans.forEach((data) => {\n          if (data.BATCH_CODE.endsWith('CC')) {\n            if (data['TUBE_CODE']) {\n              data['tubeBatch'] = 'BOCC';\n            }\n            if (data['FLAP_CODE']) {\n              data['flapBatch'] = 'BOCC';\n            }\n          } else if (data.BATCH_CODE.endsWith('KZ')) {\n            if (data['TUBE_CODE']) {\n              data['tubeBatch'] = 'BOKZ';\n            }\n            if (data['FLAP_CODE']) {\n              data['flapBatch'] = 'BOKZ';\n            }\n          } else {\n            if (data['TUBE_CODE']) {\n              data['tubeBatch'] = this.getBOMbatchCode(data.MARKET_SEGMENT);\n            }\n            if (data['FLAP_CODE']) {\n              data['flapBatch'] = this.getBOMbatchCode(data.MARKET_SEGMENT);\n            }\n          }\n        })\n\n        this.destinationWisePlans = [...this.destinationWisePlans]\n        //Add a new Object Which are getting from server\n        let newObject = {\n          \"TRUCK_NUMBER\": responseData.truckNumber,\n          \"TRUCK_TYPE\": responseData.truckType,\n          \"SERVPROV\": responseData.servprov,\n          \"ITEM_CATEGORY\": responseData.truckIndentCategory\n        }\n        // Push the data into the object If it is not availble in the data for Default Selection\n        let findTruck = this.truckTypes.findIndex(data => data.TRUCK_NUMBER == responseData.truckNumber);\n        if (findTruck == -1 && newObject.TRUCK_NUMBER) {\n          // To avoid adding empty object\n          this.truckTypes.push(newObject);\n        }\n        this.shiptoPlaceList = repsonseData.shipmentToLocs;\n        this.trackDetailsObj = this.truckTypes.find(truckObj => truckObj.TRUCK_NUMBER == this.truckType);\n        let respData = this.trackDetailsObj;\n        this.isLoading = false;\n        if (respData) {\n          //get the Utilization data\n          this.getLoadSlipUtilazationFromServer(respData.TRUCK_NUMBER, respData.TRUCK_TYPE, this.shipmentNumber);\n        }\n\n        // this.isLoading = false;\n        // Set table data\n        this.setLoadslipDatatableData(responseData);\n\n\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\");\n        return false\n      }\n\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      //this.isLoading = false;\n      return false\n    })\n  }\n\n\n  //get Destination wise plans after save as Draft\n  destinationwisePlans(destination) {\n    this.service.get_service(ApiserviceService.apisList.getLoadSlipsPlans + \"?destLoc=\" + destination + \"&loadslipId=\" + this.loadslipID).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        let repsonseData = response['data'];\n        // destination related plans list\n        this.destinationWisePlans = repsonseData.loadSlipPlans;\n        this.destinationWisePlans = [...this.destinationWisePlans]\n        this.marketSegmentMap = repsonseData.marketSegmentMap;\n        this.categoryList = repsonseData.itemCategories;\n        this.destinationWisePlans.forEach((data) => {\n          if (data.BATCH_CODE.endsWith('CC')) {\n            if (data['TUBE_CODE']) {\n              data['tubeBatch'] = 'BOCC';\n            }\n            if (data['FLAP_CODE']) {\n              data['flapBatch'] = 'BOCC';\n            }\n          } else if (data.BATCH_CODE.endsWith('KZ')) {\n            if (data['TUBE_CODE']) {\n              data['tubeBatch'] = 'BOKZ';\n            }\n            if (data['FLAP_CODE']) {\n              data['flapBatch'] = 'BOKZ';\n            }\n          } else {\n            if (data['TUBE_CODE']) {\n              data['tubeBatch'] = this.getBOMbatchCode(data.MARKET_SEGMENT);\n            }\n            if (data['FLAP_CODE']) {\n              data['flapBatch'] = this.getBOMbatchCode(data.MARKET_SEGMENT);\n            }\n          }\n          if (this.service.checkRole() == this.roles.rdc_PLN) {\n            data['qty'] = data.SUM_QTY;\n          }\n        })\n        this.destinationWisePlans = [...this.destinationWisePlans];\n      }\n\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    })\n  }\n\n\n  setLoadslipDatatableData(responseData) {\n    this.loadSlipData = [];\n    if (responseData.loadslipDraftDataDtos) {\n      responseData.loadslipDraftDataDtos.forEach(data => {\n        let newData = {\n          \"BATCH_CODE\": data.batchCode,\n          \"qty\": data.loadedQty,\n          \"lineNumber\": data.lineNumber,\n          \"ITEM_DESCRIPTION\": data.itemDesc,\n          \"ITEM_ID\": data.itemId,\n          \"VOLUME\": data.grossVol,\n          \"WEIGHT\": data.grossWt,\n          \"TTE\": data.tte,\n          \"SUM_QTY\": data.availableQty,\n          \"ITEM_CATEGORY\": data.itemCategory,\n          \"ITEM_CLASSIFICATION\": data.itemClassification,\n          \"MIN_PRIORITY\": data.priority,\n          \"isScannable\": data.isScannable,\n          \"scannedQty\": data.scannedQty,\n          \"isSplit\": data.isSplit,\n          // flap details\n          \"FLAP_DESC\": data.flapDesc,\n          \"flapBatch\": data.flapBatch,\n          \"FLAP_CODE\": data.flapSKU,\n          \"FLAP_COMP_QTY\": data.flapCompQty,\n          \"totalFlapQty\": data.falpQty,\n\n          //tube details\n          \"tubeBatch\": data.tubeBatch,\n          \"TUBE_CODE\": data.tubeSKU,\n          \"TUBE_COMP_QTY\": data.tubeCompQty,\n          \"totalTubeQty\": data.tubeQty,\n          \"TUBE_DESC\": data.tubeDesc,\n          //value details\n          \"valveBatch\": data.valveBatch,\n          \"VALVE_DESC\": data.valveDesc,\n          \"VALVE_CODE\": data.valveSKU,\n          \"VALVE_COMP_QTY\": data.valveCompQty,\n          \"totalValueQty\": data.valveQty,\n          \"canLSItemDeleted\": data.canLSItemDeleted\n        };\n        this.loadSlipData.push(newData);\n        this.loadSlipData = [...this.loadSlipData];\n      });\n    }\n  }\n  getLoadSlipUtilazationFromServer(truckNumber, truckType, shipmentNumber) {\n    this.isLoading = true;\n    let data = {\n      truckNumber: truckNumber,\n      trucktype: truckType,\n      shipmentId: shipmentNumber,\n      actucaltrucktype: this.actualTruckType,\n      variant1: this.variant_ONE\n    }\n    this.service.post_service(ApiserviceService.apisList.getLoadSlipUtlizations, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        let truckRepsonseData = response['data'];\n        this.loadslipUtilizationData = truckRepsonseData;\n        this.totalTTESeletecd = this.loadslipUtilizationData.shipmentTotalTTEUtil;\n        this.totalMaterialWeight = this.loadslipUtilizationData.shipmentTotalWtUtil;\n        this.totalTruckVolume = this.loadslipUtilizationData.shipmentTotalVolUtil;\n        this.multistopTruckNumber = this.loadslipUtilizationData.truckNumber;\n        this.multistopTruckType = this.loadslipUtilizationData.truckType;\n        this.actualTruckType = this.loadslipUtilizationData.actualTruckType;\n        this.variant_ONE = this.loadslipUtilizationData.variant1;\n        this.truckT = this.loadslipUtilizationData.truckType;\n        this.transporter = this.loadslipUtilizationData.servprov;\n        this.indentCategory = this.loadslipUtilizationData.truckIndentCategory;\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  // get the destination list which are under Approval & partiallty Apporved\n  getDestinationList() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getOpenDestinations).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        this.destinationList = response['data'].destinationList;\n        this.descriptionList = response['data'].descriptionList;\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong !\", \"!Error\")\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  //get the Truck type list\n  getTrucksList(destination, category, filterType) {\n    // Before loadslip creation we can change destination,description\n    // after loadslip creation those are not editble fields,destination list also not available\n    if (!this.isLoadslipIdAvaliable) {\n      let index: number = null;\n      index = this.destinationList.findIndex(item => item.dest_loc == destination);\n      if (index == -1) {\n        index = this.destinationList.findIndex(item => item.dest_desc == destination);\n      }\n      this.destination = this.destinationList[index].dest_loc;\n      this.description = this.destinationList[index].dest_desc;\n      destination = this.destination;\n    }\n    this.getLoadSlipsPlansData(destination, category, filterType);\n    \n    // Empty below fields if we changed destination\n    if (filterType == 'destinationFilter') {\n      this.totalTyres = '';\n      this.totalTubes = '';\n      this.totalValves = '';\n      this.truckType = '';\n      // If the Shipemnt is not a multistop clear data of TTE Util ,VOUEME Util, Weight Util\n      if (!this.checkMultiStop()) {\n        this.totalMaterialWeight = 0;\n        this.totalTTESeletecd = 0;\n        this.totalTruckVolume = 0;\n        this.truckT = '';\n        this.transporter = '';\n        this.indentCategory = '';\n        this.totalTTEQty = 0;\n        this.variant_ONE = '';\n        this.actualTruckType = '';\n      }\n    }\n\n  }\n\n  // Truck types based on destination\n  getTruckTypesForDest(destination){\n    if(destination){\n      this.service.get_service(ApiserviceService.apisList.getMasterTruckTypesWithDest+'?sourceLoc='+this.userSource+'&destLoc='+destination).subscribe(response => {\n        if(response['statusCode'] == 200){\n          this.truckTypeClass = response['data'];\n        }else{\n          this.toastr.error(response['message'] ? response['message'] : 'Something went wrong...!', 'errError!');\n        }\n      }, err =>{\n        this.toastr.error(err ? err : 'Something went wrong...', 'Error!')\n      })\n      }\n  }\n\n\n  getLoadSlipsPlansData(dest, category, filterType) {\n    this.isLoading = true;\n    // to close Category Select \n    this.categorySelect.close()\n    let destination = dest;\n    let cat = category ? category.toString() : ''\n    if (filterType == 'destinationFilter') {\n      this.category = [];\n      cat = \"\";\n    }\n    let loadslipId = this.loadslipID ? this.loadslipID : '';\n    this.service.get_service(ApiserviceService.apisList.getLoadSlipsPlans + \"?destLoc=\" + destination + \"&itemCategory=\" + cat + \"&loadslipId=\" + loadslipId).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        let repsonseData = response['data'];\n        // If it is first time creation of loadslip\n        // Before Loadslip creation we are considering the data loadslip items\n        if (!this.isLoadslipIdAvaliable) {\n          this.loadSlipData = repsonseData.loadSlipPlans;\n          this.marketSegmentMap = repsonseData.marketSegmentMap;\n          this.categoryList = repsonseData.itemCategories;\n          // to get city after destination selection\n          this.city = repsonseData.city;\n          // 1. Currently we are defaulting Batch Code for Tube and Flap as below:\n          //a.Marketing segment is REP: BOAW\n          //b.Marketing segment is OE: BOOE\n          //c.Marketing segment is EXPORT: BOEX\n          //If tyre batch code ends with CC(last 2 digits), then default Tube and Flap batch code to BOCC.\n          // If tyre batch code ends with KZ(last 2 digits), then default Tube and Flap batch code to BOKZ.\n          this.loadSlipData.forEach((data, index) => {\n            if (data.BATCH_CODE.endsWith('CC')) {\n              if (data['TUBE_CODE']) {\n                data['tubeBatch'] = 'BOCC';\n              }\n              if (data['FLAP_CODE']) {\n                data['flapBatch'] = 'BOCC';\n              }\n            } else if (data.BATCH_CODE.endsWith('KZ')) {\n              if (data['TUBE_CODE']) {\n                data['tubeBatch'] = 'BOKZ';\n              }\n              if (data['FLAP_CODE']) {\n                data['flapBatch'] = 'BOKZ'\n              }\n            } else {\n              if (data['TUBE_CODE']) {\n                data['tubeBatch'] = this.getBOMbatchCode(data.MARKET_SEGMENT);\n              }\n              if (data['FLAP_CODE']) {\n                data['flapBatch'] = this.getBOMbatchCode(data.MARKET_SEGMENT);\n              }\n            }\n            if (this.service.checkRole() == this.roles.rdc_PLN) {\n              // for RDC role we are defaulting qty , that why we need defalut tubeQty,FlapQty\n              data['qty'] = data.SUM_QTY;\n              // total tube quantity caluculation \n              data.totalTubeQty = (Number(data.TUBE_COMP_QTY) ? Number(data.TUBE_COMP_QTY) : 0) * (Number(data.qty) ? Number(data.qty) : 0);\n              //total flap qunatity caluculation\n              data.totalFlapQty = (Number(data.FLAP_COMP_QTY) ? Number(data.FLAP_COMP_QTY) : 0) * (Number(data.qty) ? Number(data.qty) : 0);\n              this.ManualTTE_Weight_volume_Calculation();\n            }\n            this.loadSlipData = [...this.loadSlipData];\n          })\n        } else {\n          // If the Loadslip created we are considering the response data as below grid loadslipItems\n          let repsonseData = response['data'];\n          // // Trucktype save data from server\n          // this.truckTypes = repsonseData.gatedInTrucks;\n          // Form Market segment (TUBE,FLAP,VALVE batch code )\n          this.marketSegmentMap = repsonseData.marketSegmentMap;\n          // destination related plans list\n          this.destinationWisePlans = repsonseData.loadSlipPlans;\n\n          // category list \n          // this.categoryList = repsonseData.itemCategories\n          // this.category = this.selectedCategories;\n          // Logic for Tube Batch & Flap batch \n          // 1. Currently we are defaulting Batch Code for Tube and Flap as below:\n          //If tyre batch code ends with CC(last 2 digits), then default Tube and Flap batch code to BOCC.\n          // If tyre batch code ends with KZ(last 2 digits), then default Tube and Flap batch code to BOKZ.\n          //a.Marketing segment is REP: BOAW\n          //b.Marketing segment is OE: BOOE\n          //c.Marketing segment is EXPORT: BOEX\n          this.destinationWisePlans.forEach((data) => {\n            if (data.BATCH_CODE.endsWith('CC')) {\n              if (data['TUBE_CODE']) {\n                data['tubeBatch'] = 'BOCC';\n              }\n              if (data['FLAP_CODE']) {\n                data['flapBatch'] = 'BOCC';\n              }\n            } else if (data.BATCH_CODE.endsWith('KZ')) {\n              if (data['TUBE_CODE']) {\n                data['tubeBatch'] = 'BOKZ';\n              }\n              if (data['FLAP_CODE']) {\n                data['flapBatch'] = 'BOKZ';\n              }\n            } else {\n              if (data['TUBE_CODE']) {\n                data['tubeBatch'] = this.getBOMbatchCode(data.MARKET_SEGMENT);\n              }\n              if (data['FLAP_CODE']) {\n                data['flapBatch'] = this.getBOMbatchCode(data.MARKET_SEGMENT);\n              }\n            }\n          })\n\n          this.destinationWisePlans = [...this.destinationWisePlans]\n\n        }\n        // if the filter was destination we need the fetch new truck list \n        // for category filter no need reset the trcuklist ,still remains same list\n        if (filterType == 'destinationFilter') {\n          this.truckTypes = repsonseData.gatedInTrucks;\n        }\n        this.shiptoPlaceList = repsonseData.shipmentToLocs;\n        this.isLoading = false;\n        this.getTruckTypesForDest(destination);\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\");\n      }\n\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n  //\n  getBOMbatchCode(key) {\n    console.log(key)\n    return this.marketSegmentMap[key]\n  }\n  // Update Angular data tablesd\n  updateValue(event, cell, rowIndex, row) {\n    let eventValue = event.target.value;\n    this.loadSlipData[rowIndex][cell] = eventValue;\n    this.loadSlipData = [...this.loadSlipData];\n    console.log('UPDATED!', this.loadSlipData[rowIndex][cell]);\n    console.log(this.totalMaterialWeight, \"taoafaffsj\")\n  }\n\n\n\n  calculateMaterialWeight(row) {\n    // If the scan Qty is he can't do qty as zero \n    if ((row.scannedQty > 0) && ((row.qty == 0) || (row.qty == ''))) {\n      this.isScanItemCheck = true;\n      this.toastr.error(\"Qty sholud grather than Zero\")\n    } else {\n      this.isScanItemCheck = false;\n      this.totalLoadedQty = 0;\n      this.itemLevelTotalTTE = 0;\n      this.itemLevelTotalWeight = 0;\n      this.itemLevelTotalVolume = 0;\n      this.totalTTEQty = 0;\n      // total tube quantity caluculation \n      row.totalTubeQty = (Number(row.TUBE_COMP_QTY) ? Number(row.TUBE_COMP_QTY) : 0) * (Number(row.qty) ? Number(row.qty) : 0);\n\n      //total flap qunatity caluculation\n      row.totalFlapQty = (Number(row.FLAP_COMP_QTY) ? Number(row.FLAP_COMP_QTY) : 0) * (Number(row.qty) ? Number(row.qty) : 0);\n\n      //total flap quantity caluculation\n      // row.totalValueQty = (Number(row.VALVE_COMP_QTY) ? Number(row.VALVE_COMP_QTY) : 0) * (Number(row.qty) ? Number(row.qty) : 0);\n\n      this.loadSlipData.forEach(row => {\n        if (row.qty && (row.qty != null)) {\n          let qty = Number(row.qty)\n          // Item Level Calculations\n          this.itemLevelTotalTTE += qty * (row.TTE ? row.TTE : 0);\n          this.itemLevelTotalWeight += qty * (row.WEIGHT ? row.WEIGHT : 0);\n          this.itemLevelTotalVolume += qty * (row.VOLUME ? row.VOLUME : 0);\n          this.totalLoadedQty += qty;\n        }\n\n      })\n\n      //total TTE QTY for View LS page\n      this.totalTTEQty = this.itemLevelTotalTTE;\n      //total Material Weight  filled In the Truck\n      if ((this.loadslipUtilizationData ? this.loadslipUtilizationData.truckWeightCapacity : '') != null && (this.loadslipUtilizationData ? this.loadslipUtilizationData.truckWeightCapacity : '') != 0) {\n\n        // Check multi-Drop or Normal Creation for Adding Weight Util\n        if (this.checkMultiStop()) {\n          this.totalMaterialWeight = ((this.itemLevelTotalWeight / (this.loadslipUtilizationData ? this.loadslipUtilizationData.truckWeightCapacity : '')) * 100);\n          this.totalMaterialWeight = (this.totalMaterialWeight + (this.loadslipUtilizationData ? this.loadslipUtilizationData.shipmentTotalWtUtil : '')) - this.loadslipWtUtil;\n        } else {\n          this.totalMaterialWeight = ((this.itemLevelTotalWeight / (this.loadslipUtilizationData ? this.loadslipUtilizationData.truckWeightCapacity : '')) * 100);\n        }\n      }\n      //Total  TTE filled int the Truck\n      if ((this.loadslipUtilizationData ? this.loadslipUtilizationData.tteCapacity : '') != null && (this.loadslipUtilizationData ? this.loadslipUtilizationData.tteCapacity : '') != 0) {\n\n        //Check TTE Util for Multi-Drop or Noramal Loadslip creation\n        if (this.checkMultiStop()) {\n          this.totalTTESeletecd = ((this.itemLevelTotalTTE / (this.loadslipUtilizationData ? this.loadslipUtilizationData.tteCapacity : '')) * 100);\n          this.totalTTESeletecd = (this.totalTTESeletecd + (this.loadslipUtilizationData ? this.loadslipUtilizationData.shipmentTotalTTEUtil : '')) - this.loadslipTteUtil;\n        } else {\n          this.totalTTESeletecd = ((this.itemLevelTotalTTE / (this.loadslipUtilizationData ? this.loadslipUtilizationData.tteCapacity : '')) * 100);\n        }\n      }\n\n      // Total Volume Occupied in The Truck \n      if ((this.loadslipUtilizationData ? this.loadslipUtilizationData.truckVolumeCapacity : '') != null && (this.loadslipUtilizationData ? this.loadslipUtilizationData.truckVolumeCapacity : '') != 0) {\n\n\n        if (this.checkMultiStop()) {\n          this.totalTruckVolume = ((this.itemLevelTotalVolume / (this.loadslipUtilizationData ? this.loadslipUtilizationData.truckVolumeCapacity : '')) * 100);\n          this.totalTruckVolume = (this.totalTruckVolume + (this.loadslipUtilizationData ? this.loadslipUtilizationData.shipmentTotalVolUtil : '')) - this.loadslipVolUtil;\n        } else {\n          this.totalTruckVolume = ((this.itemLevelTotalVolume / (this.loadslipUtilizationData ? this.loadslipUtilizationData.truckVolumeCapacity : '')) * 100)\n        }\n      }\n    }\n  }\n\n\n\n  // get Load slip Utilizations \n  getLoadSlipUtilazations(truckNumber) {\n\n    // Before marking the service call we are checking whether truck is select or None\n    // If the truck is there is there we are service\n    // If the value is none we are going reset trucktype,Transporter,shipTo, Actual truck type,variant,TTE values\n    if (truckNumber) {\n      this.isLoading = true;\n      // the below 3 lines of  code for gettting the current truck selected and get the truckNumber,TruckType,Transporter\n      let trackingObj = truckNumber ? (this.truckTypes.find(truckObj => truckObj.TRUCK_NUMBER == truckNumber)) : '';\n      // if (this.shipmentNumber) {\n      //   this.truckT = this.loadslipUtilizationData ? this.loadslipUtilizationData.truckType : '';\n      //   this.transporter = this.loadslipUtilizationData ? this.loadslipUtilizationData.servprov : '';\n      // } else {\n      this.truckT = trackingObj ? trackingObj.TRUCK_TYPE : '';\n      this.transporter = trackingObj ? trackingObj.SERVPROV : '';\n      this.indentCategory = trackingObj ? trackingObj.ITEM_CATEGORY : '';\n      // }\n\n      let data = {\n        truckNumber: trackingObj ? trackingObj.TRUCK_NUMBER : '',\n        trucktype: trackingObj ? trackingObj.TRUCK_TYPE : '',\n        shipmentId: this.shipmentNumber,\n        actucaltrucktype: this.actualTruckType,\n        variant1: this.variant_ONE,\n        trasporter: trackingObj ? trackingObj.SERVPROV : '',\n        souceLoc: this.userSource,\n        destLoc: this.destination,\n\n      }\n      this.service.post_service(ApiserviceService.apisList.getLoadSlipUtlizations, data).subscribe(response => {\n        console.log(response);\n        if (response['statusCode'] == 200) {\n          let repsonseData = response['data']\n          this.loadslipUtilizationData = repsonseData;\n          this.ShipTo = this.loadslipUtilizationData.shipToDestination;\n          this.variant_ONE = this.loadslipUtilizationData.variant1;\n          this.ManualTTE_Weight_volume_Calculation();\n          this.isLoading = false;\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.totalMaterialWeight = ''\n      this.totalTTESeletecd = ''\n      this.totalTruckVolume = '';\n      this.truckType = '';\n      this.truckT = '';\n      this.transporter = '';\n      this.indentCategory = '';\n      this.actualTruckType = '';\n      this.variant_ONE = '';\n      this.loadslipUtilizationData = {};\n    }\n  }\n\n  // Calculate manual TTE ,Material Weight ,Total Volume\n  ManualTTE_Weight_volume_Calculation() {\n    this.totalLoadedQty = 0;\n    this.itemLevelTotalTTE = 0;\n    this.itemLevelTotalWeight = 0;\n    this.itemLevelTotalVolume = 0;\n    this.totalMaterialWeight = 0\n    this.totalTTESeletecd = 0\n    this.totalTruckVolume = 0;\n    this.totalTTEQty = 0;\n    this.loadSlipData.forEach(row => {\n      if (row.qty != null) {\n        let qty = Number(row.qty)\n        // Item Level Calculations\n        this.itemLevelTotalTTE += qty * (row.TTE ? row.TTE : 0);\n        this.itemLevelTotalWeight += qty * (row.WEIGHT ? row.WEIGHT : 0);\n        this.itemLevelTotalVolume += qty * (row.VOLUME ? row.VOLUME : 0);\n        this.totalLoadedQty += qty;\n        // total tube quantity caluculation \n        // row.totalTubeQty = (Number(row.TUBE_COMP_QTY) ? Number(row.TUBE_COMP_QTY) : 0) * (Number(row.qty) ? Number(row.qty) : 0);\n        //total flap qunatity caluculation\n        // row.totalFlapQty = (Number(row.FLAP_COMP_QTY) ? Number(row.FLAP_COMP_QTY) : 0) * (Number(row.qty) ? Number(row.qty) : 0);\n        //total flap quantity caluculation\n        // row.totalValueQty = (Number(row.VALVE_COMP_QTY) ? Number(row.VALVE_COMP_QTY) : 0) * (Number(row.qty) ? Number(row.qty) : 0)\n      }\n    })\n    //total TTE QTY for View LS page\n    this.totalTTEQty = this.itemLevelTotalTTE;\n    //total Material Weight  filled In the Truck\n    if ((this.loadslipUtilizationData ? this.loadslipUtilizationData.truckWeightCapacity : 0) != null && (this.loadslipUtilizationData ? this.loadslipUtilizationData.truckWeightCapacity : 0) != 0) {\n      // Check multi-Drop or Normal Creation for Adding Weight Util\n      if (this.checkMultiStop()) {\n        this.totalMaterialWeight = ((this.itemLevelTotalWeight / (this.loadslipUtilizationData ? this.loadslipUtilizationData.truckWeightCapacity : 0)) * 100);\n        this.totalMaterialWeight = (this.totalMaterialWeight + (this.loadslipUtilizationData ? this.loadslipUtilizationData.shipmentTotalWtUtil : 0)) - this.loadslipWtUtil;\n      } else {\n        this.totalMaterialWeight = ((this.itemLevelTotalWeight / (this.loadslipUtilizationData ? this.loadslipUtilizationData.truckWeightCapacity : 0)) * 100);\n      }\n    }\n    else {\n      this.totalMaterialWeight = 0;\n    }\n    //Total  TTE filled int the Truck\n    if ((this.loadslipUtilizationData ? this.loadslipUtilizationData.tteCapacity : 0) != null && (this.loadslipUtilizationData ? this.loadslipUtilizationData.tteCapacity : 0) != 0) {\n      //Check TTE Util for Multi-Drop or Noramal Loadslip creation\n      if (this.checkMultiStop()) {\n        this.totalTTESeletecd = ((this.itemLevelTotalTTE / (this.loadslipUtilizationData ? this.loadslipUtilizationData.tteCapacity : 0)) * 100);\n        this.totalTTESeletecd = (this.totalTTESeletecd + (this.loadslipUtilizationData ? this.loadslipUtilizationData.shipmentTotalTTEUtil : 0)) - this.loadslipTteUtil;\n      } else {\n        this.totalTTESeletecd = ((this.itemLevelTotalTTE / (this.loadslipUtilizationData ? this.loadslipUtilizationData.tteCapacity : 0)) * 100);\n      }\n    } else {\n      this.totalTTESeletecd = 0;\n    }\n    // Total Volume Occupied in The Truck \n    if ((this.loadslipUtilizationData ? this.loadslipUtilizationData.truckVolumeCapacity : 0) != null && (this.loadslipUtilizationData ? this.loadslipUtilizationData.truckVolumeCapacity : 0) != 0) {\n      if (this.checkMultiStop()) {\n        this.totalTruckVolume = ((this.itemLevelTotalVolume / (this.loadslipUtilizationData ? this.loadslipUtilizationData.truckVolumeCapacity : 0)) * 100);\n        this.totalTruckVolume = (this.totalTruckVolume + (this.loadslipUtilizationData ? this.loadslipUtilizationData.shipmentTotalVolUtil : 0)) - this.loadslipVolUtil;\n      } else {\n        this.totalTruckVolume = (this.itemLevelTotalVolume / (this.loadslipUtilizationData ? this.loadslipUtilizationData.truckVolumeCapacity : 0)) * 100\n      }\n    } else {\n      this.totalTruckVolume = 0;\n    }\n  }\n\n  // Load slips events trigger\n  eventCall(loadSlipID, eventType) {\n    // check whether loadslip created or not\n    if (loadSlipID) {\n      console.log(eventType + \",\" + this.loadslipID);\n      // If is event type confirm and there is not truck should validated  \n      if ((eventType == 'CONFIRM') && !this.truckType) {\n        this.toastr.error(\"Please select truck before confirm event\", \"! Error\");\n      } else {\n        this.isLoading = true;\n        console.log(\"Else is True:\" + eventType + \",\" + this.loadslipID);\n        let data = {\n          loadslipID: loadSlipID,\n          eventType: eventType\n        };\n        console.log(\"Reached Trigger API:\" + data['loadslipID']);\n        //this.toastr.info(\"Reached Trigger API:\");\n        this.service.post_service(ApiserviceService.apisList.updateLoadSlipevent, data).subscribe(response => {\n          console.log(\"Response Received:\" +  JSON.stringify({ data: response}, null, 4));\n          //this.toastr.info(\"Response Received:\" + response['data']);\n          let stoSTOMessage = '';\n          stoSTOMessage = response['message'];\n          if (response['statusCode'] == 200) {\n            //Event type if Draft\n            if (response['data']) {\n              this.toastr.success(stoSTOMessage);\n              let responseData = response['data']['data'];\n              this.bayArrivedDate = responseData.bayArrivedDate;\n              this.loadingStartDate = responseData.loadingStartDate;\n              this.loadingEndDate = responseData.loadingEndDate;\n              this.confirmedDate = responseData.confirmedDate;\n              this.releasedDate = responseData.releasedDate;\n              this.lsPrintDate = responseData.lsPrintDate;\n              this.sendForBarcodeDate = responseData.sendForBarcodeDate\n              this.bay = responseData.bay;\n              this.sostoNumber = responseData.sostoNumber;\n              this.STOSONumber = responseData.sostoNumberVal;\n              this.multistopTruckNumber = responseData.truckNumber;\n              this.selectedCategories = responseData.selectedItemCategories;\n              this.setLoadslipDatatableData(responseData);\n            }\n            // For the confirm event we are showing whether STO/SO creation success or failure\n            if (eventType == 'CONFIRM') {\n              $('#confirmeeventresposeModal').modal('show');\n              this.confirmeventmessage = stoSTOMessage\n            }\n            this.isLoading = false;\n\n          } else {\n            this.isLoading = false;\n            console.log(\"Error:\", response['message']);\n            \n            this.toastr.info(\"Error\" + response['message']);\n            this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n          }\n\n        }, (err) => {\n          console.log(\"Error\", err);\n          this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        })\n      }\n    } else {\n      this.toastr.warning(\"Please create a Loadslip\", \"!! Warning\");\n    }\n\n\n  }\n\n  //save as draft or print eEvents trigger\n  saveAsDraft_Print_trigger(eventType) {\n    this.isLoading = true;\n    this.category = [];\n    let linenumber;\n    let Is_Qty_entered = 0;\n    this.totalTyres = 0; this.totalTubes = 0; this.totalFlaps = 0;\n    this.totalValves = 0; this.totalPctr = 0; this.totalOthersCount = 0;\n    let newDraftableDataArray = []; let index = 1;\n    this.loadSlipData.forEach((data) => {\n      if (data.qty && data.qty != 0) {\n        // For the line Number value we are checking below the condition\n        // If it has loadslip ID we are considering the value which is coming from backend\n        // Otherwise we are considering as Index value\n        if (this.loadslipID) {\n          linenumber = data.lineNumber;\n        } else {\n          linenumber = index;\n        }\n        index++;\n        let newArray = {\n          \"batchCode\": data.BATCH_CODE,\n          \"falpQty\": data.totalFlapQty,\n          \"flapBatch\": data.flapBatch,\n          \"flapSKU\": data.FLAP_CODE,\n          \"flapDesc\": data.FLAP_DESC,\n          \"scannedQty\": data.scannedQty,\n          \"grossVol\": data.VOLUME,\n          \"grossWt\": data.WEIGHT,\n          \"itemDesc\": data.ITEM_DESCRIPTION,\n          \"itemCategory\": data.ITEM_CATEGORY,\n          \"itemId\": data.ITEM_ID,\n          \"lineNumber\": linenumber,\n          \"loadedQty\": data.qty,\n          \"tte\": data.TTE,\n          \"isSplit\": data.isSplit,\n          \"tubeBatch\": data.tubeBatch,\n          \"tubeQty\": data.totalTubeQty,\n          \"tubeSKU\": data.TUBE_CODE,\n          \"tubeDesc\": data.TUBE_DESC,\n          \"valveBatch\": data.valveBatch,\n          \"valveQty\": data.totalValueQty,\n          \"valveSKU\": data.VALVE_CODE,\n          \"valveDesc\": data.VALVE_DESC\n\n        }\n        newDraftableDataArray.push(newArray);\n        // This Is_Qty_entered key checking whether any of the item Enter a valve or not\n        // If the value entered we are increasing valve by one\n        // Below we are checking the variable value Zero or not\n        Is_Qty_entered = Is_Qty_entered + 1;\n\n        console.log(\"****2 \" + this.lrNum);\n        switch (data.ITEM_CLASSIFICATION) {\n          // for Total tubes\n          case 'TUBE':\n            this.totalTubes += parseInt(data.qty ? data.qty : 0);\n            break;\n          // for total Flaps\n          case 'FLAP':\n            this.totalFlaps += parseInt(data.qty ? data.qty : 0);\n            break;\n          // for Valves\n          case 'VALVE':\n            this.totalValves += parseInt(data.qty ? data.qty : 0);\n            break;\n\n          case 'TYRE':\n            // if it is PCTR\n            if (data.ITEM_CATEGORY === 'PCTR') {\n              this.totalPctr += parseInt(data.qty ? data.qty : 0);\n              //It it is tyre\n            } else {\n              this.totalTyres += parseInt(data.qty);\n              this.totalTubes += parseInt(data.totalTubeQty ? data.totalTubeQty : 0);\n              this.totalFlaps += parseInt(data.totalFlapQty ? data.totalFlapQty : 0);\n              this.totalValves += parseInt(data.totalValueQty ? data.totalValueQty : 0);\n            }\n            break;\n          //  default is tyres\n          default:\n            // For others \n            this.totalOthersCount += Number(data.qty ? data.qty : 0);\n            break;\n        }\n\n      }\n    });\n\n    console.log(\"****3 \" + this.lrNum);\n    //check user entered Qty (Qty in Qty column) or Not\n    if (Is_Qty_entered != 0) {\n      console.log(\"****4 \" + this.lrNum);\n      //Send Different TTE based on the Type of shipment (MULTI DROP/SINGLE DROP)\n      //If it is Single stop Send the  TTE what we got from calculation\n      // If the Multi Stop Remove TTE (Loadslip level TTE) from Total TTE \n      let sendbleTTEUtil = 0;\n      let sendableWEIGHTUtil = 0;\n      let sendableVOLUMEUtil = 0;\n      let multiloadslipItemLevelTTE = 0;\n      let multiLoadslipItemLevelWeight = 0;\n      let multiLoadslipItemLevelVolume = 0;\n      if (this.checkMultiStop()) {\n        // MULTI STOP TTE , WEIGHT, VOLUME\n        this.loadSlipData.forEach(row => {\n          if (row.qty != null) {\n            let qty = Number(row.qty)\n            // Item Level Calculations\n            multiloadslipItemLevelTTE += qty * (row.TTE ? row.TTE : 0);\n            multiLoadslipItemLevelWeight += qty * (row.WEIGHT ? row.WEIGHT : 0);\n            multiLoadslipItemLevelVolume += qty * (row.VOLUME ? row.VOLUME : 0);\n          }\n        })\n        //total Material Weight  filled In the Truck\n        if (this.loadslipUtilizationData.truckWeightCapacity != null && this.loadslipUtilizationData.truckWeightCapacity != 0) {\n          sendableWEIGHTUtil = ((multiLoadslipItemLevelWeight / this.loadslipUtilizationData.truckWeightCapacity) * 100);\n        }\n        //Total  TTE filled int the Truck\n        if (this.loadslipUtilizationData.tteCapacity != null && this.loadslipUtilizationData.tteCapacity != 0) {\n          //Check TTE Util for Multi-Drop or Noramal Loadslip creation\n          sendbleTTEUtil = ((multiloadslipItemLevelTTE / this.loadslipUtilizationData.tteCapacity) * 100);\n        }\n        // Total Volume Occupied in The Truck \n        if (this.loadslipUtilizationData.truckVolumeCapacity != null && this.loadslipUtilizationData.truckVolumeCapacity != 0) {\n          sendableVOLUMEUtil = ((multiLoadslipItemLevelVolume / this.loadslipUtilizationData.truckVolumeCapacity) * 100)\n        }\n      } else {\n        // SINGLE STOP TTE ,WEIGHT, VOLUME\n        sendbleTTEUtil = Number(this.totalTTESeletecd);\n        sendableWEIGHTUtil = Number(this.totalMaterialWeight ? this.totalMaterialWeight : 0);\n        sendableVOLUMEUtil = Number(this.totalTruckVolume ? this.totalTruckVolume : 0)\n      }\n      let saveasDraftData = {\n        source: this.userSource,\n        destination: this.destination,\n        truckNumber: this.truckType,\n        loadslipDraftDataDtos: newDraftableDataArray,\n        action: eventType,\n        loadSlipId: this.loadslipID,\n        tteUtil: sendbleTTEUtil,\n        weightUtil: sendableWEIGHTUtil,\n        volumeUtil: sendableVOLUMEUtil,\n        totalTyres: this.totalTyres,\n        totalTubes: this.totalTubes,\n        totalFlaps: this.totalFlaps,\n        totalValves: this.totalValves,\n        totPctr: this.totalPctr,\n        otherQty: this.totalOthersCount,\n        totalLoadedQty: this.totalLoadedQty,\n        totalTTE: this.itemLevelTotalTTE,\n        totalWeight: this.itemLevelTotalWeight,\n        totalVolume: this.itemLevelTotalVolume,\n        shipTo: this.ShipTo,\n        shipmentID: this.shipmentNumber,\n        actualTruckType: this.actualTruckType,\n        variant1: this.variant_ONE,\n        variant2: this.variant_TWO,\n        dropSeq: this.dropSeq\n      }\n      //Check whether it is save or Update\n      if (this.loadslipID) {\n        this.IsUpdate = true\n      } else {\n        this.IsUpdate = false;\n      }\n\n      // Check Whether Batchcode exit or not \n      // if condition returns the true if BATCH_CODE was null or empty, then we are checking reverse using '!' symbol\n      // That means we checking , there is not empty and Null condition for BATCH_CODE\n      if (!this.loadSlipData.some(item => (item.BATCH_CODE == null || item.BATCH_CODE == \"\"))) {\n        if (this.checkMultiStop()) {\n          let HTTPAPI = ApiserviceService.apisList.multipleDropLoadSlip;\n          this.loadslipsave(saveasDraftData, HTTPAPI);\n        } else {\n          let HTTPAPI = ApiserviceService.apisList.loadslidSaveasDraft;\n          this.loadslipsave(saveasDraftData, HTTPAPI);\n        }\n      } else {\n        this.isLoading = false\n        this.toastr.error(\"Please enter Batch code\", \"! Error\");\n      }\n\n      this.editing = {};\n    } else {\n      this.isLoading = false\n      this.toastr.warning(\"Please enter Quantity\", \"! Warning\")\n    }\n  }\n  // end of \n\n\n\n\n\n\n\n\n\n  // save as Draft Server API\n  loadslipsave(saveasDraftData, HTTPAPI) {\n    this.service.post_service(HTTPAPI, saveasDraftData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.isLoading = false;\n        let totalResponse = response['data'];\n        let responseData = totalResponse.loadslipDraftDto;\n        this.loadslipCategory = responseData.loadslipCategory;\n\n        if (this.loadslipID) {\n          this.destinationwisePlans(this.destination);\n        }\n        // ELR Flag, LR Number\n        this.elrFlag = responseData.elrFlag;\n        this.lrNum = responseData.elrNumber;\n        // Set if LR is to be Generated or Printed\n        this.setLrButton();\n        this.loadSlipData = [];\n        this.actualTruckType = totalResponse.actucalTruckType;\n        this.variant_ONE = totalResponse.variant1;\n        this.truckT = totalResponse.loadslipDraftDto.truckType;\n        // IS_Truck_Part_of_Loadslip variable for use for LS on same truck \n        // we are taking variable because \"trckT\" and  \"TruckType \" variable can modified if we select the truck\n        // We dnt know whether they are part of loadslip or not (Done saveasDraft or not), that we are we are taking another variable considering the values from the backend\n        this.IS_Truck_Part_of_Loadslip = this.truckT;\n        this.transporter = totalResponse.loadslipDraftDto.servprov;\n        this.indentCategory = totalResponse.loadslipDraftDto.truckIndentCategory;\n        this.freightAvailableflag = totalResponse.loadslipDraftDto.freightAvailableflag;\n        // Last splitted object\n        this.lastSplittedItems = totalResponse.loadslipDraftDto.splitNumbersMap;\n        this.totalQuantity = totalResponse.loadslipDraftDto.totQty;\n\n        this.selectedCategories = totalResponse.selectedItemCategories;\n        this.setLoadslipDatatableData(responseData);\n        // For showing the Toaster messages\n        switch (saveasDraftData.action) {\n          case 'DRAFT':\n            if (this.loadslipID) {\n              this.toastr.success(\"Loadslip Updated Successfully !!\", 'Success');\n            } else {\n              this.toastr.success(\"Loadslip Created Successfully !!\", 'Success');\n            }\n            break;\n\n          default:\n            if (this.loadslipID) {\n              this.lsPrintDate = response['data'].lsPrintDate;\n            }\n            this.toastr.success(\"Loadslip Printed Successfully !!\", 'Success');\n            break;\n        }\n        if (response['data'].loadSlipId) {\n          this.showLoadslipInModal(response['data'].loadSlipId, saveasDraftData.action, this.IsUpdate, response['data']);\n        }\n        let base64Data = response['data'].loadslip;\n        if (base64Data) {\n          const linkSource = 'data:application/pdf;base64,' + base64Data;\n          var element = document.createElement('a');\n          element.setAttribute('href', linkSource);\n          element.setAttribute('download', response['data'].loadSlipId);\n          document.body.appendChild(element);\n          element.click();\n        }\n\n\n      } else {\n        if (response['data']) {\n          this.openloadsliperrorPopup(response['data'])\n        }\n        this.isLoading = false;\n      }\n\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  //open loadslip error list \n  openloadsliperrorPopup(errorList) {\n    const dialogRef = this.dialog.open(CreateLoadslipsErrorPopupComponent, {\n      data: errorList,\n      disableClose: true\n    });\n  }\n\n\n  // Show loadslipId with success POPUP\n  showLoadslipInModal(value, typeofevent, IsUpdate, response) {\n    const dialogRef = this.dialog.open(LoadslipSuccessDialogComponent, {\n      data: { loadslipId: value, type: typeofevent, isupdate: IsUpdate, loadslipData: response },\n      disableClose: true\n    });\n    //reset the data which user selected after successful load slip creation\n    if (!this.loadslipID) {\n      this.totalMaterialWeight = ''\n      this.totalTTESeletecd = ''\n      this.totalTruckVolume = '';\n      this.totalTyres = '';\n      this.totalTubes = '';\n      this.totalFlaps = '';\n      this.totalValves = '';\n      this.destination = '';\n      this.description = '';\n      this.truckType = '';\n      this.loadSlipData = [];\n      this.ShipTo = '';\n    }\n  }\n\n\n  //clear user enter data\n  cancelLoadslipCreation() {\n    this.isLoading = true;\n    const dialogRef = this.dialog.open(LoadslipCancelPopupComponent, { disableClose: true });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      if (result) {\n        this.totalMaterialWeight = ''\n        this.totalTTESeletecd = ''\n        this.totalTruckVolume = '';\n        this.totalTyres = '';\n        this.totalTubes = '';\n        this.totalValves = '';\n        this.destination = '';\n        this.totalFlaps = '';\n        this.loadSlipData = [];\n        this.truckType = '';\n        this.truckT = '';\n        this.transporter = '';\n        this.indentCategory = '';\n        this.actualTruckType = '';\n        this.variant_ONE = '';\n        this.freightAvailableflag = '';\n        this.dropSeq = '';\n        this.totalTTEQty = 0;\n        this.description = '';\n        this.loadSlipData = [...this.loadSlipData];\n        this.indentCategory = '';\n        this.description='';\n        this.city ='';\n      }\n      this.isLoading = false;\n    })\n  }\n\n\n  // Download loadslip after trigger CONFIRM event\n  downloadLoadslip() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.printLoadslip + \"?loadslipId=\" + this.loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        const linkSource = 'data:application/pdf;base64,' + responseData;\n        var element = document.createElement('a');\n        element.setAttribute('href', linkSource);\n        element.setAttribute('download', this.loadslipID);\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n\n        this.isLoading = false;\n        this.toastr.success(response['message']);\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  //sent for barcode scanning\n  sendForBarcode() {\n    // check whether loadslip created or not\n    if (this.loadslipID) {\n      this.isLoading = true;\n      let data = {}\n      this.service.post_service(ApiserviceService.apisList.sendToSAPForCodeScan + \"/\" + this.loadslipID, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.isLoading = false;\n          this.toastr.success(response['message']);\n          this.sendForBarcodeDate = response['data'].data.sendForBarcodeDate\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.toastr.warning(\"Please create a Loadslip\", \"!! Warning\");\n    }\n\n\n  }\n\n\n  // loadslip same trcuk navigation\n  loadslipOnSameTruckNavigation() {\n    if (this.shipmentNumber) {\n      if (this.IS_Truck_Part_of_Loadslip) {\n        this.isLoading = true;\n        this.service.get_service(ApiserviceService.apisList.isLsOnSameTruckAllowed + \"?shipmentId=\" + this.shipmentNumber).subscribe(response => {\n          if (response['statusCode'] == 200) {\n            this.isLoading = false;\n            if ((this.service.checkRole() == this.roles.fgsOperations1) || (this.service.checkRole() == this.roles.fgsOperations2)\n              || (this.service.checkRole() == this.roles.fgsOperations3) || (this.service.checkRole() == this.roles.fgsOperations4)) {\n\n              this.router.navigate(['/fgs/create-load-slip'], { queryParams: { shipmentNumber: this.shipmentNumber } });\n\n            } else if (this.service.checkRole() == this.roles.rdc_PLN) {\n\n              this.router.navigate(['/rdc/create-load-slip'], { queryParams: { shipmentNumber: this.shipmentNumber } })\n            }\n          } else {\n            this.isLoading = false;\n            this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n          }\n        }, (err) => {\n          console.log(\"Error\", err);\n          this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        })\n\n      } else {\n        this.toastr.error(\"Please select truck before Ls on same Truck\", \"! Error\")\n      }\n    } else {\n      this.toastr.warning('Please Create a Loadslip')\n    }\n\n  }\n\n  //share Truck destination list\n  shareTruckDestinationList() {\n    if (this.shipmentNumber) {\n      if (this.IS_Truck_Part_of_Loadslip) {\n        this.isLoading = true;\n        this.service.get_service(ApiserviceService.apisList.shareTruckDestions).subscribe(response => {\n          if (response['statusCode'] == 200) {\n            this.shareTrcukDestinations = response['data'];\n            $('#myModal').modal('show');\n            this.isLoading = false;\n          } else {\n            this.isLoading = false;\n            this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n          }\n        }, (err) => {\n          console.log(\"Error\", err);\n          this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        })\n      } else {\n        this.toastr.warning(\"Please select truck before Share Truck\", \"! Error\")\n      }\n    } else {\n      this.toastr.warning('Please Create a Loadslip')\n    }\n  }\n  //share truck Server API\n  shareTruck() {\n    this.isLoading = true;\n    if(this.shareTruckLocation){\n    let data = {};\n    this.service.post_service(ApiserviceService.apisList.shareTruck + \"?shipmentId=\" + this.shipmentNumber + '&pickupLoc=' + this.shareTruckLocation, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.toastr.success(response['message']);\n        this.shareTrcukDestinations = [];\n        $('#myModal').modal('hide');\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }else{\n    this.toastr.warning(\"Please select a pickup location...\", 'Warning!');\n    this.isLoading= false;\n  }\n}\n\n\n  // get master variants data\n  getvariants() {\n    //this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getVariants).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        this.variant_one_List = responseData.variant1;\n        this.variant_two_List = responseData.variant2;\n        //this.isLoading = false;\n        // get the list of actual trucktypes\n       // this.getActualTruckTypeList();\n      } else {\n        // this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    })\n  }\n\n  // get the list of actual truck type\n  getActualTruckTypeList() {\n    this.actualTruckTypeList = [];\n    //this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getMasterTruckstype).subscribe(response => {\n      console.log(\"respio\", response)\n      this.actualTruckTypeList = response['data'];\n      //this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n  split(data) {\n    console.log(data);\n    // below line code for parent, set to not splitted that why isSplit is 'N', for child isSplit will be 'Y'\n    data['isSplit'] = 'N';\n    let rowData = { ...data };\n    rowData.BATCH_CODE = '';\n    rowData.qty = 0;\n    rowData.scannedQty = 0;\n    rowData.totalValueQty = 0;\n    // Below line child item that why isSplit was 'Y'\n    rowData['isSplit'] = 'Y';\n    // index here from the line number of item\n    let current_index = data.lineNumber;\n    let pushble_index;\n    let addbleNumber: number = 0.1;\n    if (this.lastSplittedItems[current_index + 'line']) {\n      let lastModified = this.lastSplittedItems[current_index + 'line'];\n      pushble_index = this.loadSlipData.findIndex(item => item.lineNumber === lastModified);\n      let new_value = Math.round((lastModified + addbleNumber) * 1e12) / 1e12;\n      this.lastSplittedItems[current_index + 'line'] = new_value;\n      rowData.lineNumber = new_value;\n\n    } else {\n      pushble_index = this.loadSlipData.findIndex(item => item.lineNumber == data.lineNumber);\n      rowData.lineNumber = rowData.lineNumber + addbleNumber;\n      this.lastSplittedItems[data.lineNumber + \"line\"] = rowData.lineNumber;\n\n    }\n    //check whether the the item is present in the list or not\n\n    if (pushble_index != -1) {\n      // Add +1 for Index start with '0'\n      pushble_index = pushble_index + 1;\n    } else {\n      pushble_index = this.loadSlipData.findIndex(item => item.lineNumber == data.lineNumber + 1);\n      if (pushble_index != -1) {\n        pushble_index = pushble_index;\n      } else {\n        let comparebleLineNumber = data.lineNumber + 1;\n\n        for (let i = 1; i <= this.loadSlipData.length; i++) {\n          const isExit_lineNumber = this.loadSlipData.some(item => item.lineNumber == comparebleLineNumber);\n          if (isExit_lineNumber) {\n            pushble_index = this.loadSlipData.findIndex(item => item.lineNumber == comparebleLineNumber);\n            break;\n          } else {\n            comparebleLineNumber++;\n            if (i == this.loadSlipData.length) {\n              // pushble_index = data.lineNumber;\n              pushble_index = this.loadSlipData.findIndex(item => item.lineNumber == data.lineNumber) + 1;\n              break;\n            } else {\n              continue;\n            }\n          }\n        }\n      }\n    }\n    this.loadSlipData.splice(pushble_index, 0, rowData);\n    // this.loadSlipData.push(this.lastSplittedItems)\n    this.loadSlipData = [...this.loadSlipData];\n\n    console.log(this.loadSlipData, \"this.lastSplittedItems\", this.lastSplittedItems);\n  }\n\n  deleteRow(data) {\n    //check the deletion whether a PARENT / CHILD \n    // if child delete single record\n    // if parent delete all childs aswell including parent \n    let deletebleIndex; let inboundValue; let outBiundValue;\n    if (data.isSplit == 'N') {\n      // For Parent \n      inboundValue = data.lineNumber;\n      outBiundValue = inboundValue + 1;\n      let copyLoadSlipData = [...this.loadSlipData];\n      copyLoadSlipData.forEach(item => {\n        // Line Number Not lessthan Inbound value && Not grather than Outbound value\n        if ((item.lineNumber >= inboundValue) && (item.lineNumber < outBiundValue)) {\n          // deletebleIndex = this.loadSlipData.findIndex(item => item.lineNumber == data.lineNumber);\n          deletebleIndex = this.loadSlipData.findIndex(currentItem => currentItem.lineNumber == item.lineNumber);\n          if (item['destinationItem'] && (item.isSplit == 'N')) {\n            // Revert back the values to the intial state of the object\n            item.qty = null;\n            this.destinationWisePlans.push(item)\n          }\n          // Delete item from Loadslip Items\n          this.loadSlipData.splice(deletebleIndex, 1);\n        }\n      })\n    } else if (data.isSplit == 'Y') {\n      // For Child\n      deletebleIndex = this.loadSlipData.findIndex(item => item.lineNumber == data.lineNumber);\n      // Delete item from Loadslip Items\n      this.loadSlipData.splice(deletebleIndex, 1);\n    } else if (data['destinationItem']) {\n      deletebleIndex = this.loadSlipData.findIndex(currentItem => currentItem.lineNumber == data.lineNumber);\n      // Revert back the values to the intial state of the object\n      data.qty = null;\n      this.destinationWisePlans.push(data)\n      this.loadSlipData.splice(deletebleIndex, 1);\n    }\n\n    this.destinationWisePlans = [...this.destinationWisePlans];\n\n    this.loadSlipData = [...this.loadSlipData];\n    // this.ManualTTE_Weight_volume_Calculation();\n    this.calculateMaterialWeight(data);\n    console.log(this.loadSlipData, \"this.loadSlipData\")\n\n  }\n\n\n\n  add(data) {\n    console.log(data);\n    let rowData = { ...data };\n    let indexofSplice = this.destinationWisePlans.findIndex(item => (item.ITEM_ID == rowData.ITEM_ID) && (item.BATCH_CODE == rowData.BATCH_CODE));\n\n    let loadslipLength = this.loadSlipData.length;\n    if (loadslipLength == 0) {\n      // if length is Zero add Item at 1 Index of Loadslip items\n      rowData.lineNumber = 1;\n    } else {\n      // rowData.lineNumber = parseInt(this.loadSlipData[loadslipLength - 1].lineNumber) + 1;\n      rowData.lineNumber = parseInt(Math.max.apply(null, this.loadSlipData.map(item => item.lineNumber))) + 1;\n    }\n    // For Identification from the destination item ,By this parameter we are diriving color for the line as light orage color\n    rowData['destinationItem'] = true;\n    if (this.service.checkRole() == this.roles.rdc_PLN) {\n      rowData.qty = data.SUM_QTY;\n      rowData.totalTubeQty = (Number(rowData.TUBE_COMP_QTY) ? Number(rowData.TUBE_COMP_QTY) : 0) * (Number(rowData.qty) ? Number(rowData.qty) : 0);\n      rowData.totalFlapQty = (Number(rowData.FLAP_COMP_QTY) ? Number(rowData.FLAP_COMP_QTY) : 0) * (Number(rowData.qty) ? Number(rowData.qty) : 0);\n    }\n    this.loadSlipData = [...this.loadSlipData, rowData]\n\n    this.destinationWisePlans.splice(indexofSplice, 1);\n    this.destinationWisePlans = [...this.destinationWisePlans];\n    this.calculateMaterialWeight(data);\n\n  }\n  IsIntiger(n) {\n    return n % 1 === 0;\n  }\n\n  getRowClass = (row) => {\n    console.log('rowClass')\n    return {\n      'row-color': (row.isSplit == 'Y'),\n      'row-red-color': (row.destinationItem)\n    };\n  }\n\n\n  stosoDelete(loadslip) {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.stosoDelete + \"?loadslipId=\" + loadslip).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responsedata = response['data'];\n        this.sostoNumber = responsedata.sostoNumber;\n        this.STOSONumber = responsedata.sostoNumberVal;\n        this.lsPrintDate = responsedata.lsPrintDate;\n        this.confirmedDate = responsedata.confirmedDate;\n        this.setLoadslipDatatableData(responsedata);\n        this.isLoading = false;\n        this.toastr.success(response['message'])\n      }\n      else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  is_Role_RDC() {\n    if (this.service.checkRole() == this.roles.rdc_PLN) {\n      return true\n    } else {\n      return false;\n    }\n  }\n\n  // If the truck got chages then defalut to empty Actual trucktype,Variant1\n  defaultTruckData() {\n    this.actualTruckType = '';\n    this.variant_ONE = '';\n  }\n\n  openedChange(opened: boolean, dest, category, typefilter) {\n    console.log(opened);\n    if (!opened) {\n      this.getTrucksList(dest, category, typefilter)\n    }\n\n  }\n\n   // Print Excel\n   export(): void {\n    this.isLoading = true;\n    this.service.get_service_DownLoadExcel(ApiserviceService.apisList.printLoadslip +'?loadslipId='+this.loadslipID+'&excel='+true).subscribe(response => {\n      if (response) {\n        // Uncomment when export excel is generated in backend\n        var blob = new Blob([response.body], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n          var filename = this.loadslipID+'.xlsx';\n          const link = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          document.body.appendChild(a);\n          a.setAttribute('style', 'display: none');\n          a.href = link;\n          a.download = filename\n          a.click();\n          window.URL.revokeObjectURL(link);\n          a.remove();\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..in response\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n\n  }\n\n  checkConsentLoadSlip(loadSlipID: any, eventType: any) {\n    this.trackingConsentStatus = 'Checking Consent Initiated';\n    this.eventCall(loadSlipID, eventType);\n  }\n}\n\n","import { ShareModuleModule } from 'src/app/public/share-module/share-module.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreateLoadSlipComponent } from './create-load-slip.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { customMaterialModule } from '../../angular-material';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { LoadslipCancelPopupComponent } from 'src/app/public/loadslip-cancel-popup/loadslip-cancel-popup.component';\nimport { LoadslipSuccessDialogComponent } from 'src/app/public/loadslip-success-dialog/loadslip-success-dialog.component';\nimport { CreateLoadslipsErrorPopupComponent } from 'src/app/public/create-loadslips-error-popup/create-loadslips-error-popup.component';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\nconst routes: Routes = [\n  { path: '', component: CreateLoadSlipComponent },\n  { path: ':loadslipId', component: CreateLoadSlipComponent },\n  { path: ':loadslipId/:viewType', component: CreateLoadSlipComponent },\n  { path: ':shipmentId/:truckNumber/:typeOfTruck/:variant1/:actualTruckType', component: CreateLoadSlipComponent }\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    FormsModule,\n    customMaterialModule,\n    LoaderModule,\n    NgxDatatableModule,\n    ShareModuleModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    CreateLoadSlipComponent,\n  ],\n  entryComponents: [\n    CreateLoadSlipComponent,\n    LoadslipCancelPopupComponent,\n    LoadslipSuccessDialogComponent,\n    CreateLoadslipsErrorPopupComponent,\n  ]\n})\nexport class CreateLoadSlipModule { }\n"],"sourceRoot":""}