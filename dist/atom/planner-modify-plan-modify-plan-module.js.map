{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/planner/modify-plan/modify-plan.component.html","webpack:///./src/app/planner/modify-plan/modify-plan.component.scss","webpack:///./src/app/planner/modify-plan/modify-plan.component.ts","webpack:///./src/app/planner/modify-plan/modify-plan.module.ts","webpack:///./src/app/public/modify-plan-delete-confirmation/modify-plan-delete-confirmation.component.html","webpack:///./src/app/public/modify-plan-delete-confirmation/modify-plan-delete-confirmation.component.scss","webpack:///./src/app/public/modify-plan-delete-confirmation/modify-plan-delete-confirmation.component.ts"],"names":[],"mappings":"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","file":"planner-modify-plan-modify-plan-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h4 class=\\\"manulal-plan-header \\\">\\n    Dispatch Plan > Modify Plan\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h4>\\n  <div class=\\\"manualplan-fields\\\">\\n    <div class=\\\"col-md-12 row\\\" *ngIf=\\\"isShow\\\">\\n      <div class=\\\"col-md-12 padding-right-40\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"formPicker\\\" placeholder=\\\"From Date\\\" [(ngModel)]=\\\"fromDate\\\"\\n                  name=\\\"fromDate\\\" (dateChange)=\\\"addEvent('fromDate', $event)\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"formPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #formPicker disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"toPicker\\\" [min]=\\\"fromDate\\\" placeholder=\\\"To Date\\\"\\n                  [(ngModel)]=\\\"toDate\\\" name=\\\"toDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toPicker [disabled]=\\\"!fromDate\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <!-- check_Role_DP_REP == roles.planner3  -->\\n          <!-- <div class=\\\"col-md-1 pl-0\\\" *ngIf=\\\"service.isDPREPRole()\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Source\\\" (keyup)=\\\"getfilterSource($event)\\\" autocomplete=\\\"off\\\"\\n                [matAutocomplete]=\\\"sourceAutocomplete\\\" [(ngModel)]=\\\"sourceCode\\\" name=\\\"source\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\">\\n                <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n                  <span matTooltip={{list.value}}>{{list.value}} - ({{list.description}})</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n          </div> -->\\n          <div class=\\\"col-md-1 pl-0\\\" *ngIf = \\\"isSoureDisable()\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Source\\\" (keyup)=\\\"getfilterSource($event)\\\" [disabled]=\\\"(isSoureDisable()) \\\"\\n                autocomplete=\\\"off\\\" [matAutocomplete]=\\\"sourceAutocomplete\\\" [(ngModel)]=\\\"sourceCode\\\" name=\\\"source\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\" >\\n                <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n                  <span matTooltip={{list.value}}>{{list.value}} - ({{list.description}})</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\" *ngIf = \\\"!isSoureDisable()\\\">\\n              <div class=\\\"form-group cust-form-group\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                  <mat-select placeholder=\\\"Source\\\" [(ngModel)]=\\\"sourceCodeList\\\" name=\\\"sourceCodeList\\\"\\n                    multiple [disabled]=\\\"(isSoureDisable()) \\\">\\n                    <mat-option *ngFor=\\\"let source of openPlanSourceList\\\" [value]=\\\"source\\\">{{source}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Destination\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n                  [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\" (keyup)=\\\"getUserSearchData($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\"\\n                    (click)=\\\"setDestDescription(list.description)\\\"\\n                    (onSelectionChange)=\\\"setDestDescription(list.description)\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"State\\\"\\n                  [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destination\\\"\\n                  (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                    (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                    <span>({{list.description}})</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Material Code\\\" aria-label=\\\"Material Code\\\"\\n                  [matAutocomplete]=\\\"materialCodeAutocomplete\\\" [(ngModel)]=\\\"materialCode\\\" name=\\\"materialCode\\\"\\n                  (keyup)=\\\"filterMaterialCode($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #materialCodeAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of materilcodelist\\\" [value]=\\\"list.value\\\"\\n                    (click)=\\\"setMaterialDescription(list.description)\\\"\\n                    (onSelectionChange)=\\\"setMaterialDescription(list.description)\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Material Description\\\" aria-label=\\\"Material Description\\\"\\n                  [matAutocomplete]=\\\"materialDescriptionAutocomplete\\\" [(ngModel)]=\\\"materialDescription\\\"\\n                  name=\\\"materialDescription\\\" (keyup)=\\\"filterMaterialDescription($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #materialDescriptionAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of materialDescriptionList\\\" [value]=\\\"list.description\\\"\\n                    (click)=\\\"setMaterialCode(list.value)\\\" (onSelectionChange)=\\\"setMaterialCode(list.value)\\\">\\n                    <span>{{list.description}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Category\\\" [(ngModel)]=\\\"materialGroup\\\" name=\\\"materialGroup\\\" multiple>\\n                  <mat-option *ngFor=\\\"let category of categoryList\\\" [value]=\\\"category\\\">{{category}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"MKT Segment\\\" [(ngModel)]=\\\"mktsegment\\\" name=\\\"mktsegment\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let mktsegment of mktsegmentList\\\" [value]=\\\"mktsegment\\\">\\n                    {{mktsegment}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Plan Id\\\" [(ngModel)]=\\\"planId\\\" name=\\\"planId\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Plan Status\\\" [(ngModel)]=\\\"planStatus\\\" name=\\\"planStatus\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let item of planStatusList\\\" [value]=\\\"item.value\\\">\\n                    {{item.key}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"status\\\" name=\\\"status\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let data of statuses\\\" [value]=\\\"data.value\\\">{{data.key}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Insert User\\\" [(ngModel)]=\\\"insertUser\\\" name=\\\"insertUser\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <mat-select placeholder=\\\"Priority\\\" [(ngModel)]=\\\"priority\\\" name=\\\"priority\\\" multiple>\\n                  <mat-option value=\\\"ISNULL\\\">ISNULL</mat-option>\\n                  <mat-option *ngFor=\\\"let priority of priorityList\\\" [value]=\\\"priority\\\">{{priority}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"pull-right\\\">\\n        <div class=\\\"search-fileds\\\">\\n          <button class=\\\"theme-small-button\\\" (click)=\\\"plannerSearch()\\\" matTooltip=\\\"Search\\\">\\n            <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <button class=\\\"theme-delete-button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear\\\">\\n            <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"datatable ngx-table-custom-scroll ngx-table-tr-custom-scroll\\\">\\n    <!-- Data table starts -->\\n    <ngx-datatable #table class=\\\"material\\\" [columnMode]=\\\"'force'\\\" [scrollbarH]=\\\"true\\\" [headerHeight]=\\\"50\\\"\\n      [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"modifyPlanData\\\" [externalPaging]=\\\"true\\\" [limit]=\\\"page.limit\\\"\\n      [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\" (page)=\\\"datatablePageData($event)\\\" [selected]=\\\"selected\\\"\\n      [selectionType]=\\\"'checkbox'\\\" [selectAllRowsOnPage]=\\\"false\\\" [summaryRow]=\\\"true\\\" [summaryHeight]=\\\"'auto'\\\"\\n      [summaryPosition]=\\\"'bottom'\\\">\\n      <ngx-datatable-column [width]=\\\"50\\\" [frozenLeft]=\\\"true\\\" *ngIf=\\\"!responsiveHideShow\\\" [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"false\\\"\\n      [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n      <ng-template ngx-datatable-header-template let-value=\\\"value\\\" let-allRowsSelected=\\\"allRowsSelected\\\"\\n        let-selectFn=\\\"selectFn\\\" let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\">\\n        <input type=\\\"checkbox\\\" [checked]=\\\"allRowsSelected\\\"\\n          (change)=\\\"selectFn(!allRowsSelected);onSelectAll($event)\\\" />\\n      </ng-template>\\n      <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-isSelected=\\\"isSelected\\\" let-row=\\\"row\\\"\\n        let-rowIndex=\\\"rowIndex\\\" let-onCheckboxChangeFn=\\\"onCheckboxChangeFn\\\">\\n        <input type=\\\"checkbox\\\" [checked]=\\\"isSelected\\\" (change)=\\\"onCheckboxChangeFn($event);onSelect($event,row)\\\" />\\n      </ng-template>\\n    </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Action\\\" [frozenLeft]=\\\"true\\\" *ngIf=\\\"!responsiveHideShow\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <!-- (row.dispatchedQuantity == 0) && (row.reservedQuantity == 0) -->\\n          <button class=\\\"theme-small-button btn\\\" matTooltip=\\\"Modify plan\\\" (click)=\\\"rowLevelModifyPlan(row)\\\"\\n            [disabled]=\\\"(row.isError)\\\">\\n            <i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <!-- Commented as per new requiremet on 11/07/2019 -->\\n          <!-- If the Dispatch Qty & Reserved Qty & Loaded Qty is there He cant do any delet action -->\\n          <!-- <span *ngIf=\\\"(row.dispatchedQuantity == 0) && (row.reservedQuantity == 0) && (row.loaded == 0)\\\">\\n            <button class=\\\"theme-delete-button btn\\\" matTooltip=\\\"Delete plan\\\" (click)=\\\"rowlevelDeletePlan(row)\\\">\\n              <i class=\\\"fa fa-trash-o fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n          </span> -->\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <!-- Plan Id column -->\\n      <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Plan Id\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"planId\\\" [summaryFunc]=\\\"emptySumm\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.planId}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <!-- Dispatch plan column -->\\n      <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Disp Date\\\" [width]=\\\"110\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"dispatchDate\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <ng-container *ngIf=\\\"row.status !== 'COMPLETED'\\\">\\n            <div *ngIf=\\\"isView(row)\\\">\\n              {{row.dispatchDate | customDateFormat | date:'dd-MMM-yyyy'}}\\n            </div>\\n            <div *ngIf=\\\"isEdit(row)\\\">\\n              <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\"\\n                (click)=\\\"editing[rowIndex + '-dispatchDate'] = true\\\" *ngIf=\\\"!editing[rowIndex + '-dispatchDate']\\\">\\n                <span class=\\\"edit-label\\\">{{row.dispatchDate | customDateFormat | date:'dd-MMM-yyyy'}}\\n                </span>\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n              </div>\\n              <mat-form-field *ngIf=\\\"editing[rowIndex+ '-dispatchDate']\\\">\\n                <input matInput [matDatepicker]=\\\"rowIndexPicker\\\" [value]=\\\"row.formattedDate\\\" autofocus\\n                  (dateChange)=\\\"updateValue(row,$event,'dispatchDate',rowIndex)\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"rowIndexPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #rowIndexPicker></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"row.status === 'COMPLETED'\\\">\\n            {{row.dispatchDate | customDateFormat | date:'dd-MMM-yyyy'}}\\n          </ng-container>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <!-- Source column -->\\n      <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Source\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"sourceLocation\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.sourceLocation}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <!-- Destination Column -->\\n      <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Dest\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"destinationLocation\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <ng-container *ngIf=\\\"row.status !== 'COMPLETED'\\\">\\n            <div *ngIf=\\\"isEdit(row)\\\">\\n              <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\"\\n                (click)=\\\"editing[rowIndex + '-destinationLocation'] = true\\\"\\n                *ngIf=\\\"!editing[rowIndex + '-destinationLocation']\\\">\\n                <span class=\\\"edit-label\\\">{{row.destinationLocation}}\\n                </span>\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n              </div>\\n              <mat-form-field *ngIf=\\\"editing[rowIndex+ '-destinationLocation']\\\">\\n                <input matInput [matAutocomplete]=\\\"datatableDestAutocomplete\\\"\\n                  (blur)=\\\"updateValue(row,$event, 'destinationLocation', rowIndex)\\\" [value]=\\\"row.destinationLocation\\\"\\n                  autofocus (keyup)=\\\"getdatatableDestinatinList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #datatableDestAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of datatableDestinationList\\\" [value]=\\\"list.value\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n            <div *ngIf=\\\"isView(row)\\\">\\n              {{row.destinationLocation}}</div>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"row.status === 'COMPLETED'\\\">\\n            {{row.destinationLocation}}\\n          </ng-container>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <!-- Material Code -->\\n      <ngx-datatable-column [frozenLeft]=\\\"freezeLeftValue\\\" name=\\\"Material Code\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\"\\n        [sortable]=\\\"false\\\" prop=\\\"itemId\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <ng-container *ngIf=\\\"row.status !== 'COMPLETED'\\\">\\n            <div *ngIf=\\\"isEdit(row)\\\">\\n              <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-itemId'] = true\\\"\\n                *ngIf=\\\"!editing[rowIndex + '-itemId']\\\">\\n                <span class=\\\"edit-label\\\">{{row.itemId}}\\n                </span>\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n              </div>\\n              <mat-form-field *ngIf=\\\"editing[rowIndex+ '-itemId']\\\">\\n                <input autofocus matInput [matAutocomplete]=\\\"datatableMaterialCodeAutocomplete\\\"\\n                  (blur)=\\\"updateValue(row,$event, 'itemId', rowIndex)\\\" [value]=\\\"row.itemId\\\"\\n                  (keyup)=\\\"filterMaterialCodeDatatables($event,rowIndex)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #datatableMaterialCodeAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of datamaterilcodelist;let i=index\\\" [value]=\\\"list.value\\\"\\n                    (click)=\\\"setMaterialDesDatatable(list.description,rowIndex)\\\"\\n                    (onSelectionChange)=\\\"setMaterialDesDatatable(list.description,rowIndex)\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n            <div *ngIf=\\\"isView(row)\\\">{{row.itemId}}\\n            </div>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"row.status === 'COMPLETED'\\\">\\n            {{row.itemId}}\\n          </ng-container>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <!-- Material Description -->\\n      <ngx-datatable-column [frozenLeft]=\\\"freezeLeftValue\\\" name=\\\"Material Description\\\" [width]=\\\"220\\\" [resizeable]=\\\"false\\\"\\n        [sortable]=\\\"false\\\" prop=\\\"itemDescription\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.itemDescription}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <!-- Destination Description -->\\n      <ngx-datatable-column name=\\\"Dest Description\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"destinationDescription\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          {{row.destinationDescription}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Cat\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"category\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.category}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"TTE\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"tte\\\"\\n        [summaryTemplate]=\\\"tteCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.tte}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <!-- Batch Code -->\\n      <ngx-datatable-column name=\\\"Batch\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"batchCode\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <ng-container *ngIf=\\\"row.status !== 'COMPLETED'\\\">\\n            <div *ngIf=\\\"isEdit(row)\\\">\\n              <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-batchCode'] = true\\\"\\n                *ngIf=\\\"!editing[rowIndex + '-batchCode']\\\">\\n                <span class=\\\"edit-label\\\">{{row.batchCode}}\\n                </span>\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n              </div>\\n              <mat-form-field *ngIf=\\\"editing[rowIndex+ '-batchCode']\\\">\\n                <input matInput [matAutocomplete]=\\\"datatableBatchcodeAutocomplete\\\"\\n                  (blur)=\\\"updateValue(row,$event, 'batchCode', rowIndex)\\\" [value]=\\\"row.batchCode\\\" autofocus\\n                  (keyup)=\\\"datatablesBatchcode($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #datatableBatchcodeAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of datatablesBatchcodeList\\\" [value]=\\\"list.value\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n            <div *ngIf=\\\"isView(row)\\\">\\n              {{row.batchCode}}\\n            </div>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"row.status === 'COMPLETED'\\\">\\n            {{row.batchCode}}\\n          </ng-container>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n\\n      <!-- Priority -->\\n      <ngx-datatable-column name=\\\"Pr\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"priority\\\"\\n        [summaryFunc]=\\\"emptySumm\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <!-- plan status is completed then can't edit the field -->\\n          <ng-container *ngIf=\\\"row.status !== 'COMPLETED'\\\">\\n            <div *ngIf=\\\"isEdit(row)\\\">\\n              <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-priority'] = true\\\"\\n                *ngIf=\\\"!editing[rowIndex + '-priority']\\\">\\n                <span class=\\\"edit-label\\\">{{row.priority}}\\n                </span>\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n              </div>\\n              <ng-container *ngIf=\\\"editing[rowIndex+ '-priority']\\\">\\n                <input class=\\\"table-input\\\" autofocus (blur)=\\\"updateValue(row,$event, 'priority', rowIndex)\\\"\\n                  [value]=\\\"row.priority\\\" (keypress)=\\\"service.numberOnly($event)\\\">\\n              </ng-container>\\n            </div>\\n            <div *ngIf=\\\"isView(row)\\\">\\n              {{row.priority}}\\n            </div>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"row.status === 'COMPLETED'\\\">\\n            {{row.priority}}\\n          </ng-container>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <!--MKT segment  -->\\n      <ngx-datatable-column name=\\\"MKT Seg\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"marketSegment\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <ng-container *ngIf=\\\"row.status !== 'COMPLETED'\\\">\\n            <div *ngIf=\\\"isEdit(row)\\\">\\n              <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\"\\n                (click)=\\\"editing[rowIndex + '-marketSegment'] = true\\\" *ngIf=\\\"!editing[rowIndex + '-marketSegment']\\\">\\n                <span class=\\\"edit-label\\\">{{row.marketSegment}}\\n                </span>\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n              </div>\\n              <ng-container *ngIf=\\\"editing[rowIndex + '-marketSegment']\\\">\\n                <mat-select autofocus placeholder=\\\"MKT Segment\\\" [ngModel]=\\\"row.marketSegment\\\"\\n                  name=\\\"mktsegment{{rowIndex}}\\\" (ngModelChange)=\\\"updateValue(row,$event, 'marketSegment', rowIndex)\\\">\\n                  <mat-option *ngFor=\\\"let mktsegment of mktsegmentList\\\" [value]=\\\"mktsegment\\\">\\n                    {{mktsegment}}\\n                  </mat-option>\\n                </mat-select>\\n              </ng-container>\\n            </div>\\n            <div *ngIf=\\\"isView(row)\\\">\\n              {{row.marketSegment}}\\n            </div>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"row.status === 'COMPLETED'\\\">\\n            {{row.marketSegment}}\\n          </ng-container>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <!-- Quantity-->\\n      <ngx-datatable-column name=\\\"Plan Qty\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"quantity\\\"\\n        [summaryTemplate]=\\\"planQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <ng-container *ngIf=\\\"row.status !== 'COMPLETED'\\\">\\n            <div *ngIf=\\\"isEdit(row)\\\">\\n              <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-quantity'] = true\\\"\\n                *ngIf=\\\"!editing[rowIndex + '-quantity']\\\">\\n                <span class=\\\"edit-label\\\">{{row.quantity}}\\n                </span>\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n              </div>\\n              <ng-container *ngIf=\\\"editing[rowIndex+ '-quantity']\\\">\\n                <input class=\\\"table-input\\\" autofocus (blur)=\\\"updateValue(row,$event, 'quantity', rowIndex)\\\"\\n                  [value]=\\\"row.quantity\\\" (input)=\\\"editPlanQty($event,row,rowIndex)\\\"\\n                  (keypress)=\\\"service.numberOnly($event)\\\">\\n              </ng-container>\\n            </div>\\n            <div *ngIf=\\\"isView(row)\\\">\\n              {{row.quantity}}\\n            </div>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"(row.status === 'COMPLETED')\\\">\\n            {{row.quantity}}\\n          </ng-container>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <!-- Approve Quantity -->\\n      <ngx-datatable-column name=\\\"App Qty\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"approvedQuantity\\\"\\n        [summaryTemplate]=\\\"apprQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.approvedQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Un Appr Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"unapprovedQuantity\\\" [summaryTemplate]=\\\"unapprQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.unapprovedQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Appr Del\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"deletedApprQuantity\\\" [summaryTemplate]=\\\"apprDeleteQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.deletedApprQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Un Appr Del\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"deletedUnApprQuantity\\\" [summaryTemplate]=\\\"unapprDeleteQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.deletedUnApprQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Reserved\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"reservedQuantity\\\"\\n        [summaryTemplate]=\\\"reservedQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.reservedQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Loaded\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"loaded\\\"\\n        [summaryTemplate]=\\\"loadedQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{(row.loaded)?(row.loaded):0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Disp\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"dispatchedQuantity\\\"\\n        [summaryTemplate]=\\\"dispatchedQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.dispatchedQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Avail Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"availableQuantity\\\" [summaryTemplate]=\\\"availableQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.availableQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Tot Avail Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"totalAvailableQuantity\\\" [summaryTemplate]=\\\"totalAvailableQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.totalAvailableQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Qty to be Del Appr\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"deleteApprQuantity\\\" [summaryFunc]=\\\"emptySumm\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div *ngIf=\\\"(((row.totalAvailableQuantity)?(row.totalAvailableQuantity):0) > 0)\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\"\\n              (click)=\\\"editing[rowIndex + '-deleteApprQuantity'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-deleteApprQuantity']\\\">\\n              <span class=\\\"edit-label\\\">{{row.deleteApprQuantity}}\\n              </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <ng-container *ngIf=\\\"editing[rowIndex + '-deleteApprQuantity']\\\">\\n              <input class=\\\"table-input\\\" autofocus type=\\\"number\\\" min=\\\"0\\\"\\n                (blur)=\\\"updateValue(row,$event, 'deleteApprQuantity', rowIndex)\\\" [value]=\\\"row.deleteApprQuantity\\\"\\n                (input)=\\\"deleteApprQty($event,row,rowIndex)\\\" (keypress)=\\\"service.numberOnly($event)\\\">\\n            </ng-container>\\n          </div>\\n          <div *ngIf=\\\"(((row.totalAvailableQuantity)?(row.totalAvailableQuantity):0) == 0)\\\">\\n            {{row.deleteApprQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Qty to be Del Un Appr\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"deleteUnApprQuantity\\\" [summaryFunc]=\\\"emptySumm\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div *ngIf=\\\"(((row.totalAvailableQuantity)?(row.totalAvailableQuantity):0) > 0)\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\"\\n              (click)=\\\"editing[rowIndex + '-deleteUnApprQuantity'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-deleteUnApprQuantity']\\\">\\n              <span class=\\\"edit-label\\\">{{row.deleteUnApprQuantity}}\\n              </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <ng-container *ngIf=\\\"editing[rowIndex + '-deleteUnApprQuantity']\\\">\\n              <input class=\\\"table-input\\\" autofocus oncopy=\\\"return false\\\" oncut=\\\"return false\\\" onpaste=\\\"return false\\\"\\n                (blur)=\\\"updateValue(row,$event, 'deleteUnApprQuantity', rowIndex)\\\" [value]=\\\"row.deleteUnApprQuantity\\\"\\n                (input)=\\\"deleteUnApprQty($event,row,rowIndex)\\\" (keypress)=\\\"service.numberOnly($event)\\\">\\n            </ng-container>\\n          </div>\\n          <div *ngIf=\\\"(((row.totalAvailableQuantity)?(row.totalAvailableQuantity):0) == 0)\\\">\\n            {{row.deleteUnApprQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Avail TTE\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"availbleTTE\\\"\\n        [summaryTemplate]=\\\"totalAvailableTTEPercentageCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.availbleTTE | number : '1.2-2' }}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Truck Count\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"truckCount\\\"\\n        [summaryTemplate]=\\\"truckPercentageCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.truckCount | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Weight (Kg)\\\" [width]='60' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"Weight\\\"\\n      [summaryTemplate]=\\\"weightCell\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.weight | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Available Weight (Kg)\\\" [width]='80' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalWeight\\\"\\n        [summaryTemplate]=\\\"totalWeightCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.totalWeight | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Weight Util (%)\\\" [width]='60' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"weightUtil\\\"\\n        [summaryTemplate]=\\\"totalWeightUtilCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.weightUtil | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Volume (CUMTR)\\\" [width]='70' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"Volume\\\"\\n        [summaryTemplate]=\\\"volumeCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.volume | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Available Volume (CUMTR)\\\" [width]='110' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalVolume\\\"\\n        [summaryTemplate]=\\\"totalVolumeCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.totalVolume | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Volume Util (%)\\\" [width]='80' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"volume\\\"\\n        [summaryTemplate]=\\\"totalVolumeUtilCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.volumeUtil | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Plan Status\\\" [width]='100' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"appStatus\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.status}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"145\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"insertUser\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          {{row.insertUser}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Update User\\\" [width]='145' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"updateUser\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.updateUser}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Insert Date\\\" [width]='130' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"insertDate\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.insertDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Update Date\\\" [width]='130' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"updateDate\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.updateDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Plan Age (Days)\\\" [width]='70' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"planAge\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.planAge}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Comments\\\" [width]='100' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"comments\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          <span [attr.title]=\\\"row.comments\\\" (click)=\\\"showIntegrationMessage(row)\\\">{{\\n            (row.comments?.length>9)? (row.comments | slice:0:9)+'..':(row.comments)}}</span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Status\\\" [width]='140' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"appStatus\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          <button class=\\\"btn btn-sm lightgreen-button\\\"\\n            [ngClass]=\\\"(row.appStatus=='APPROVED')?'lightgreen-button':'light-red-color'\\\">\\n            {{row.appStatus}}\\n          </button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <!-- Actions -->\\n      <ngx-datatable-column name=\\\"Action\\\"  *ngIf=\\\"responsiveHideShow\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <!-- (row.dispatchedQuantity == 0) && (row.reservedQuantity == 0) -->\\n          <button class=\\\"theme-small-button btn\\\" matTooltip=\\\"Modify plan\\\" (click)=\\\"rowLevelModifyPlan(row)\\\"\\n            [disabled]=\\\"(row.isError)\\\">\\n            <i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <!-- Commented as per new requiremet on 11/07/2019 -->\\n          <!-- If the Dispatch Qty & Reserved Qty & Loaded Qty is there He cant do any delet action -->\\n          <!-- <span *ngIf=\\\"(row.dispatchedQuantity == 0) && (row.reservedQuantity == 0) && (row.loaded == 0)\\\">\\n            <button class=\\\"theme-delete-button btn\\\" matTooltip=\\\"Delete plan\\\" (click)=\\\"rowlevelDeletePlan(row)\\\">\\n              <i class=\\\"fa fa-trash-o fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n          </span> -->\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column [width]=\\\"50\\\" *ngIf=\\\"responsiveHideShow\\\" [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"false\\\"\\n        [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-header-template let-value=\\\"value\\\" let-allRowsSelected=\\\"allRowsSelected\\\"\\n          let-selectFn=\\\"selectFn\\\" let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\">\\n          <input type=\\\"checkbox\\\" [checked]=\\\"allRowsSelected\\\"\\n            (change)=\\\"selectFn(!allRowsSelected);onSelectAll($event)\\\" />\\n        </ng-template>\\n        <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-isSelected=\\\"isSelected\\\" let-row=\\\"row\\\"\\n          let-rowIndex=\\\"rowIndex\\\" let-onCheckboxChangeFn=\\\"onCheckboxChangeFn\\\">\\n          <input type=\\\"checkbox\\\" [checked]=\\\"isSelected\\\" (change)=\\\"onCheckboxChangeFn($event);onSelect($event,row)\\\" />\\n        </ng-template>\\n      </ngx-datatable-column>\\n       <!-- Footer Template starts -->\\n       <ngx-datatable-footer>\\n        <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\" let-selectedCount=\\\"selectedCount\\\"\\n          let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n          <div class=\\\"page-count\\\">\\n            <span *ngIf=\\\"selectedCount\\\">\\n              {{selectedCount.toLocaleString()}} Selected | \\n            </span>\\n            Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n            (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n            {{(rowCount)}} records.\\n          </div>\\n          <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n            [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\" [size]=\\\"pageSize\\\"\\n            [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\" (change)=\\\"table.onFooterPage($event)\\\">\\n          </datatable-pager>\\n        </ng-template>\\n      </ngx-datatable-footer>\\n      <!-- Footer Template Ends -->\\n    </ngx-datatable>\\n    <!-- Table bottom grid columns -->\\n    <ng-template #tteCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{(tteSum)?(tteSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #planQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{planQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #apprQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{apprQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #unapprQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{unapprQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #apprDeleteQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{apprDeleteQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #unapprDeleteQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{unapprDeleteQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #reservedQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{reservedQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #loadedQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{loadedQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #dispatchedQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{dispatchedQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #availableQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{availableQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalAvailableQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{totalAvailableQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #truckPercentageCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{(TruckPercentageSum)?(TruckPercentageSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalAvailableTTEPercentageCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalTTEPercentageSum)?(totalTTEPercentageSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #weightCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(weightSum)?(weightSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalWeightCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalWeightSum)?(totalWeightSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalWeightUtilCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalWeightUtilSum)?(totalWeightUtilSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #volumeCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(volumeSum)?(volumeSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalVolumeCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalVolumeSum)?(totalVolumeSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalVolumeUtilCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalVolumeUtilSum)?(totalVolumeUtilSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <!-- Data table ends -->\\n\\n    <div class=\\\"text-center margin-TB-20\\\">\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"btm-action-btn mb-3\\\" (click)=\\\"multilevelModifyPlan()\\\"\\n        *ngIf=\\\"(markasDeletePlans.length > 0)\\\">Save</button>\\n        <!-- Commented as per requiremented on 12/07/2019 -->\\n      <!-- <button mat-raised-button color=\\\"primary\\\" class=\\\"mb-3\\\" (click)=\\\"multilevelDeletePlan()\\\"\\n        *ngIf=\\\"(markasDeletePlans.length > 0)\\\">Delete</button> -->\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div id=\\\"commnetsModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Comments</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        {{modalComment}}\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYW5uZXIvbW9kaWZ5LXBsYW4vbW9kaWZ5LXBsYW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { HelperServiceService } from './../../services/helper-service/helper-service.service';\nimport { Component, OnInit, ViewChild, ChangeDetectionStrategy, DoCheck } from '@angular/core';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { DateAdapter, MAT_DATE_FORMATS, MatDialog } from '@angular/material';\nimport { AppDateAdapter, APP_DATE_FORMATS } from '../../public/date.adapters';\nimport { ToastrService } from 'ngx-toastr';\nimport * as XLSX from 'xlsx';\nimport { constants } from '../../constants';\nimport { ModifyPlanDeleteConfirmationComponent } from 'src/app/public/modify-plan-delete-confirmation/modify-plan-delete-confirmation.component';\nimport * as moment from 'moment';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\ndeclare var $: any;\n@Component({\n  selector: 'app-modify-plan',\n  templateUrl: './modify-plan.component.html',\n  styleUrls: ['./modify-plan.component.scss'],\n  providers: [\n    {\n      provide: DateAdapter, useClass: AppDateAdapter\n    },\n    {\n      provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\n    }\n  ],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ModifyPlanComponent implements OnInit, DoCheck {\n  newModifyPlanData: any[];\n  isError: boolean = false;\n  datatablesBatchcodeList: any[];\n  datatableDestinationList: any[];\n  datamaterilcodelist = [];\n  isLoading: boolean = false;\n  isShow: boolean = true;\n  editing = {};\n  modifyPlanData = [];\n  editableArr = [];\n  statuses = [];\n  planData = [];\n  openPlanSourceList = [];\n  page = {\n    limit: 10,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n  pageSize: number;\n  insertUser: string;\n  materialGroup = [];\n  status: any;\n  planId: number;\n  materialCode: any;\n  mktsegment: any;\n  destination = '';\n  destinationDesc: any;\n  descriptionList = [];\n  destinationList = [];\n  index: number;\n  materilcodelist = [];\n  materialDescription = '';\n  minDate = new Date();\n  selected = [];\n  planInfoIds = [];\n  materialDescriptionList: any[];\n  filterPlanStatus = [];\n  source: string;\n  currentDate = this.helperService.getTodayDate();\n  currentDateAsString = this.helperService.getTodayDateASString();\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  mktsegmentList = [];\n  categoryList = [];\n  fromDispatchDate: string = '';\n  toDispatchDate: string = '';\n  toDate: string = '';\n  fromDate: string = '';\n  markasDeletePlans = [];\n  sourceCodeList = [];\n  planStatusList: { \"key\": string; \"value\": string; }[];\n  planStatus: any;\n  sourceList: any[];\n  sourceCode: any;\n  check_Role_DP_REP: string;\n  modalComment: any;\n  roles: any;\n  totalTruckPercentage: number = 0;\n  totalTTEPercentageSum: number = 0;\n  tteSum: number = 0;\n  planQtySum: number = 0;\n  apprQtySum: number = 0;\n  unapprQtySum: number = 0;\n  apprDeleteQtySum: number = 0;\n  unapprDeleteQtySum: number = 0;\n  reservedQtySum: number = 0;\n  loadedQtySum: number = 0;\n  dispatchedQtySum: number = 0;\n  availableQtySum: number = 0;\n  totalAvailableQtySum: number = 0;\n  TruckPercentageSum: number = 0;\n  weightSum: number = 0;\n  volumeSum: number = 0;\n  totalWeightSum: number = 0;\n  totalWeightUtilSum: number = 0;\n  totalVolumeSum: number = 0;\n  totalVolumeUtilSum: number = 0;\n  standredFTLTTE: number;\n  standardFTLWeight: number;\n  standardFTLVolumne: number = 0;\n  priorityList = [];\n  priority = [];\n  freezeLeftValue: boolean = true;\n  responsiveHideShow: boolean = true;\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService,\n    private helperService: HelperServiceService,\n    public dialog: MatDialog,\n  ) { }\n  ngDoCheck() {\n    let width = $(window).width();\n    if(width <= 1024) {\n      this.freezeLeftValue = false;\n      this.responsiveHideShow = false;\n    }\n    else {\n      this.freezeLeftValue = true;\n      this.responsiveHideShow = true;\n    }\n  }\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"dispatch-plan\");\n    this.statuses = constants.planStatus;\n    this.filterPlanStatus = constants.filterPlanStatus;\n    this.source = localStorage.getItem(\"sourceID\");\n    // localStorage.getItem(\"sourceID\") ? this.sourceCodeList.push(localStorage.getItem(\"sourceID\")) : null;\n    this.roles = constants.roles;\n    this.index = 0;\n    this.planStatusList = constants.planStatusList;\n    this.check_Role_DP_REP = this.service.checkRole();\n    if(this.isSoureDisable()){\n      this.sourceCode = localStorage.getItem(\"sourceID\");\n      (localStorage.getItem(\"sourceID\") != null && localStorage.getItem(\"sourceID\") != '') ? this.sourceCodeList.push(localStorage.getItem(\"sourceID\")) : null;\n    }\n    //for getting modify plan \n    let bodyData = {\n      'fromDispatchDate': this.currentDate,\n      'toDispatchDate': this.currentDate,\n      'statuses': this.filterPlanStatus,\n      // 'sourceLocation': this.source,\n      'sourceCodeList': this.sourceCodeList,\n    }\n    this.fromDate = this.currentDateAsString\n    this.toDate = this.fromDate;\n    this.getModifyPlan(bodyData);\n\n    //for getting category master data\n    this.getCategoryMasterData();\n    this.getMarketSegment();\n    this.getPriorityList();\n\n    if (this.service.isDPREPRole() || this.service.CheckExtWareHouse()) {\n      this.getPlansSourceList();\n    } else {\n      this.openPlanSourceList.push(localStorage.getItem(\"sourceID\"))\n    }\n  }\n\n  isSoureDisable() {\n    // source Not disable for DP_REP, L1_MGR, L2_MGR role & External warehouses, if roles not belongs to DP_REP & External wareHouse we are returning boolean value which makes  disable \n    if ((this.check_Role_DP_REP !== this.roles.planner3 && this.check_Role_DP_REP !== this.roles.L1MGR && this.check_Role_DP_REP !== this.roles.L2MGR)\n      && (!this.service.CheckExtWareHouse())) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n   // For getting all the Open Plans source List for DPREP\n   getPlansSourceList() {\n    this.service.get_service(ApiserviceService.apisList.getOpenPlansSourceLocs).subscribe(response => {\n      if (response['statusCode'] == '200') {\n        this.openPlanSourceList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Some Thing Went Wrong !!!')\n      }\n    })\n  }\n\n  //for getting modify plan \n  getModifyPlan(bodyData) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.planinfo, bodyData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'].planItems;\n        this.clearAllSum();\n        responseData.forEach(element => {\n          // for Row Level TTE count,weight util calculation standred values\n          this.standredFTLTTE = response['data'].standardFtlTteCapacity;\n          this.standardFTLWeight = response['data'].standardFtlWeight;\n          this.standardFTLVolumne = response['data'].standardFTLVolumne;\n          let gettheDate = element.dispatchDate;\n          let splittedData = gettheDate.split(\"/\");\n          let createNewDate = splittedData[1] + \"/\" + splittedData[0] + \"/\" + splittedData[2]\n          // Formatted new key for autopopulation of date for datepicker\n          element.formattedDate = new Date(createNewDate).toISOString();\n          // // For RDC: The Avail TTE and Truck count should be based on Plan Qty and not Available Qty\n          // if (this.service.checkRole() == this.roles.rdc_PLN) {\n          //   element.truckPercentage = (((element.quantity ? element.quantity : 0) * (element.tte ? element.tte : 0)) / this.standredFTLTTE);\n          //   element.availableTTE = ((element.quantity ? element.quantity : 0) * (element.tte ? element.tte : 0));\n          //   // Weight Util values calculations\n          //   element.weightUtil = ((((element.quantity ? element.quantity : 0) * (element.weight ? element.weight : 0)) / this.standardFTLWeight) * 100);\n          //   // Volume Util values calculations\n          //   element.volumeUtil = ((((element.quantity ? element.quantity : 0) * (element.volume ? element.volume : 0)) / this.standardFTLVolumne) * 100);\n          // } else {\n          //   element.truckPercentage = (((element.availableQuantity ? element.availableQuantity : 0) * (element.tte ? element.tte : 0)) / this.standredFTLTTE);\n          //   element.availableTTE = ((element.availableQuantity ? element.availableQuantity : 0) * (element.tte ? element.tte : 0));\n          //   // Weight Util values calculations\n          //   element.weightUtil = ((((element.availableQuantity ? element.availableQuantity : 0) * (element.weight ? element.weight : 0)) / this.standardFTLWeight) * 100);\n          //   // Volume Util values calculations\n          //   element.volumeUtil = ((((element.availableQuantity ? element.availableQuantity : 0) * (element.volume ? element.volume : 0)) / this.standardFTLVolumne) * 100);\n          // }\n        });\n        this.modifyPlanData = [...responseData];\n        this.page.count = response['data'].total;\n        this.page.limit = response['data'].pageLength;\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n  //for getting category master data\n  getCategoryMasterData() {\n    this.service.get_service(ApiserviceService.apisList.categoryMasterData).subscribe(response => {\n      this.categoryList = response['data'];\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    })\n  }\n  getPriorityList(){\n    this.service.get_service(ApiserviceService.apisList.getPriorityList).subscribe(response =>{\n      if(response['statusCode'] == 200){\n        this.priorityList = response['data'];\n      }else{\n        this.toastr.error(response['message'] ? response['message'] : 'Some Thing Went Wrong !!!')\n      }\n    }, err => {\n      this.toastr.error('Some Thing Went Wrong !!!')\n    })\n  }\n\n  getMarketSegment() {\n    this.service.get_service(ApiserviceService.apisList.getMarketSegment).subscribe(response => {\n      if (response['statusCode'] == '200') {\n        this.mktsegmentList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Some Thing Went Wrong !!!')\n      }\n    })\n  }\n  // onPageSizeChanged(event) {\n  //   this.page.limit = event;\n  //   this.page.pageSize = this.pageSize;\n  //   this.datatablePageData(this.page);\n  // }\n\n  isEdit(row) {\n    let dispQty = (row.dispatchedQuantity) ? (row.dispatchedQuantity) : 0;\n    let reserveQty = (row.reservedQuantity) ? (row.reservedQuantity) : 0;\n    let loadQty = (row.loaded) ? (row.loaded) : 0;\n    if ((dispQty == 0) && (reserveQty == 0) && (loadQty == 0)) {\n      return true\n    }\n    else {\n      return false\n    }\n\n  }\n  isView(row) {\n    let dispQty = (row.dispatchedQuantity) ? (row.dispatchedQuantity) : 0;\n    let reserveQty = (row.reservedQuantity) ? (row.reservedQuantity) : 0;\n    let loadQty = (row.loaded) ? (row.loaded) : 0;\n    if ((dispQty > 0) || (reserveQty > 0) || (loadQty > 0)) {\n      return true\n    } else {\n      return false\n    }\n\n  }\n\n  datatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    this.selected = [];\n    this.markasDeletePlans = [];\n    this.index = pageInfo.offset;\n    this.forDateValidation();\n    this.clearAllSum();\n    let bodyData = {\n      'fromDispatchDate': this.fromDispatchDate,\n      'toDispatchDate': this.toDispatchDate,\n      'index': pageInfo.offset,\n      'pageLength': pageInfo.pageSize,\n      'destinationCode': this.destination,\n      'marketSegment': this.mktsegment,\n      'materialCode': this.materialCode,\n      'materialDescription': this.materialDescription,\n      'materialGroup': this.materialGroup,\n      'planId': this.planId,\n      'status': this.status,\n      'statuses': this.filterPlanStatus,\n      // 'sourceLocation': this.source,\n      // 'sourceCode': this.sourceCode,\n      'planStatus': this.planStatus,\n      'insertUser': this.insertUser,\n      'priorityList':this.priority,\n      'sourceCodeList': this.sourceCodeList,\n    }\n    this.getModifyPlan(bodyData);\n  }\n\n\n  returnFormateDate(data) {\n    let formatted = new Date(data),\n      mnth = (\"0\" + (formatted.getMonth() + 1)).slice(-2),\n      day = (\"0\" + formatted.getDate()).slice(-2);\n    return [day, mnth, formatted.getFullYear()].join(\"/\");\n  }\n  onFooterPage(pageInfo){\n    console.log(pageInfo);\n    \n  }\n\n  updateValue(row, event, cell, rowIndex) {\n    let modifyIndex = this.modifyPlanData.findIndex(data => data.id == row.id)\n    if (cell == 'dispatchDate') {\n      this.modifyPlanData[modifyIndex][cell] = this.returnFormateDate(event.target.value);\n      let splittedData = this.modifyPlanData[modifyIndex][cell].split(\"/\");\n      let createNewDate = splittedData[1] + \"/\" + splittedData[0] + \"/\" + splittedData[2]\n      this.modifyPlanData[modifyIndex]['formattedDate'] = new Date(createNewDate).toISOString();\n    } else if (cell == 'deleteApprQuantity') {\n      this.modifyPlanData[modifyIndex][cell] = (event.target.value == \"\") ? 0 : event.target.value;\n    } else {\n      this.modifyPlanData[modifyIndex][cell] = (event.target !== undefined) ? (event.target.value) : event;\n      console.log(this.modifyPlanData[modifyIndex][cell]);\n\n    }\n\n    // this.editing[modifyIndex + '-' + cell] = false;\n    this.modifyPlanData = [...this.modifyPlanData];\n  }\n\n\n  // Row level Modify Plans\n  rowLevelModifyPlan(row) {\n    let arry = [];\n    if (row.deleteUnApprQuantity == '')\n      row.deleteUnApprQuantity = 0;\n\n    if (row.deleteApprQuantity == '')\n      row.deleteApprQuantity = 0;\n\n    arry.push(row);\n    this.modifyService(arry);\n  }\n\n  // Multi level modify plans\n  multilevelModifyPlan() {\n    // for(let plan of this.markasDeletePlans){\n    //   if(plan['deleteApprQuantity'] == \"\"){\n    //     plan['deleteApprQuantity'] = 0\n    //   }\n    // }\n    let data = this.markasDeletePlans;\n    this.modifyService(data);\n  }\n\n  //Modify Plans service \n  modifyService(data) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.modifyPlan, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.editing = {};\n        this.selected = [];\n        this.markasDeletePlans = [];\n        this.clearAllSum();\n        let responseArray = response['data'];\n        responseArray.forEach(element => {\n          // Find the index to update\n          let index = this.modifyPlanData.findIndex(ele => element.id == ele.id);\n          // add new column in the object \"formattedDate\" for date autopopulate for datepicker\n          let gettheDate = element.dispatchDate;\n          let splittedData = gettheDate.split(\"/\");\n          let createNewDate = splittedData[1] + \"/\" + splittedData[0] + \"/\" + splittedData[2]\n          element.formattedDate = new Date(createNewDate).toISOString();\n          // // For RDC: The Avail TTE and Truck count should be based on Plan Qty and not Available Qty\n          // if (this.service.checkRole() == this.roles.rdc_PLN) {\n          //   element.truckPercentage = (((element.quantity ? element.quantity : 0) * (element.tte ? element.tte : 0)) / this.standredFTLTTE);\n          //   element.availableTTE = ((element.quantity ? element.quantity : 0) * (element.tte ? element.tte : 0));\n          //   // Weight Util values calculations\n          //   element.weightUtil = ((((element.quantity ? element.quantity : 0) * (element.weight ? element.weight : 0)) / this.standardFTLWeight) * 100);\n          //   // Volume Util values calculations\n          //   element.volumeUtil = ((((element.quantity ? element.quantity : 0) * (element.volume ? element.volume : 0)) / this.standardFTLVolumne) * 100);\n          // } else {\n          //   element.truckPercentage = (((element.availableQuantity ? element.availableQuantity : 0) * (element.tte ? element.tte : 0)) / this.standredFTLTTE);\n          //   element.availableTTE = ((element.availableQuantity ? element.availableQuantity : 0) * (element.tte ? element.tte : 0));\n          //   // Weight Util values calculations\n          //   element.weightUtil = ((((element.availableQuantity ? element.availableQuantity : 0) * (element.weight ? element.weight : 0)) / this.standardFTLWeight) * 100);\n          //   // Volume Util values calculations\n          //   element.volumeUtil = ((((element.availableQuantity ? element.availableQuantity : 0) * (element.volume ? element.volume : 0)) / this.standardFTLVolumne) * 100);\n          // }\n          if (index > -1) {\n            this.modifyPlanData[index] = element;\n          }\n        });\n        this.modifyPlanData = [...this.modifyPlanData];\n        this.isLoading = false;\n        this.toastr.success(response['message']);\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  // Delete plan data\n  rowlevelDeletePlan(row) {\n    let arr = [];\n    arr.push(row.id);\n    this.openDelteConformationPopup(arr);\n  }\n  multilevelDeletePlan() {\n    let arr = [];\n    this.markasDeletePlans.forEach(element => {\n      if ((element.dispatchedQuantity == 0) && (element.reservedQuantity == 0) && (element.loaded == 0)) {\n        arr.push(element.id);\n      }\n    })\n    this.openDelteConformationPopup(arr);\n  }\n\n  openDelteConformationPopup(data) {\n    const dialogRef = this.dialog.open(ModifyPlanDeleteConfirmationComponent, { disableClose: true });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.isLoading = true;\n        this.deleteService(data)\n      }\n    })\n  }\n  // Delete service\n  deleteService(data) {\n    this.service.delete_service_multiParam(ApiserviceService.apisList.ModifyPlansdelete, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.isLoading = false;\n        this.selected = [];\n        this.markasDeletePlans = [];\n        this.clearAllSum();\n        data.forEach(element => {\n          let index = this.modifyPlanData.findIndex(item => item.id == element);\n          this.modifyPlanData.splice(index, 1);\n        });\n        this.modifyPlanData = [...this.modifyPlanData]\n        this.toastr.success(response['message'])\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n  // clear the data what the user entered\n  clearAll() {\n    this.destination = '';\n    this.mktsegment = [];\n    this.materialCode = \"\";\n    this.fromDate = '';\n    this.toDate = '';\n    this.materialDescription = \"\";\n    this.destinationDesc = \"\";\n    this.descriptionList = [];\n    this.materialGroup = [];\n    this.planId = null;\n    this.status = []\n    this.materilcodelist = [];\n    this.destinationList = [];\n    this.planStatus = [];\n    this.insertUser = '';\n    this.sourceCode = '';\n    this.sourceList = [];\n    this.priority = [];\n    this.sourceCodeList = [];\n\n    if(this.isSoureDisable()){\n      this.sourceCode = localStorage.getItem(\"sourceID\");\n      (localStorage.getItem(\"sourceID\") != null && localStorage.getItem(\"sourceID\") != '') ? this.sourceCodeList.push(localStorage.getItem(\"sourceID\")) : null;\n    }\n\n  }\n\n  //refersh data \n  refreshData() {\n    this.selected = [];\n    this.markasDeletePlans = [];\n    this.modifyPlanData = [];\n    this.table.offset = 0;\n    this.clearAll();\n    this.forDateValidation();\n    this.clearAllSum();\n    let bodyData = {\n      'fromDispatchDate': this.currentDate,\n      'toDispatchDate': this.currentDate,\n      'destinationCode': this.destination,\n      'index': 0,\n      'marketSegment': this.mktsegment,\n      'materialCode': this.materialCode,\n      'materialDescription': this.materialDescription,\n      'materialGroup': this.materialGroup,\n      'pageLength': this.page.limit,\n      'planId': this.planId,\n      'status': this.status,\n      'statuses': this.filterPlanStatus,\n      // 'sourceLocation': this.source,\n      'insertUser': this.insertUser,\n      // 'sourceCode': this.sourceCode\n      'sourceCodeList': this.sourceCodeList\n    }\n    this.currentDateAsString = this.helperService.getTodayDateASString();\n    this.fromDate = this.currentDateAsString;\n    this.toDate = this.fromDate;\n    this.getModifyPlan(bodyData);\n  }\n\n  // filter destination list\n  getUserSearchData(event) {\n    this.destinationDesc = '';\n    if (event.target.value.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.destinationList = [];\n      let index = 0;\n      this.isLoading = true\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + this.destination + \"&index=\" + index).subscribe(response => {\n        this.destinationList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //filter material description \n  filterMaterialDescription(event) {\n    this.materialCode = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.materialDescriptionList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?materialDesc=' + filtervalue).subscribe(response => {\n        this.materialDescriptionList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // set material code\n  setMaterialCode(value) {\n    setTimeout(() => {\n      this.materialCode = value;\n    }, 300);\n  }\n\n  // filter destination lsit for datatable\n  getdatatableDestinatinList(event) {\n    let destinationKey = event.target.value;\n    if (event.target.value.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.datatableDestinationList = [];\n      let index = 0;\n      this.isLoading = true\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + destinationKey + \"&index=\" + index).subscribe(response => {\n        this.datatableDestinationList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // filter batch code in datatable\n  datatablesBatchcode(event) {\n    let destinationKey = event.target.value;\n\n    if (event.target.value.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.datatablesBatchcodeList = [];\n      let index = 0;\n      this.isLoading = true\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?batchCode=' + destinationKey + \"&index=\" + index).subscribe(response => {\n        this.datatablesBatchcodeList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n  //filter material code by user input\n  filterMaterialCode(event, rowIndex) {\n    let filtervalue = event.target.value;\n    this.materialDescription = '';\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.materilcodelist = [];\n      this.materialDescription = '';\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?materialCode=' + filtervalue).subscribe(response => {\n        this.materilcodelist = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // material code filter api for datatables\n  filterMaterialCodeDatatables(event, rowIndex) {\n    let indexdata = rowIndex;\n    let filtervalue = event.target.value;\n    this.modifyPlanData[indexdata]['itemDescription'] = '';\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.datamaterilcodelist = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?materialCode=' + filtervalue).subscribe(response => {\n        this.datamaterilcodelist = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //set value for material description\n  setMaterialDescription(value) {\n    this.materialDescription = value;\n  }\n\n  // set values for materila description for datatable\n  setMaterialDesDatatable(value, rowIndex) {\n    setTimeout(() => {\n      this.modifyPlanData[rowIndex]['itemDescription'] = value;\n    }, 200);\n  }\n\n  // Date Validation\n  forDateValidation() {\n    if (this.fromDate != '' && this.fromDate != null) {\n      this.fromDispatchDate = moment(new Date(this.fromDate)).format(\"DD/MM/YYYY\");\n    } else {\n      this.fromDispatchDate = '';\n    }\n    if (this.toDate != '' && this.toDate != null) {\n      this.toDispatchDate = moment(new Date(this.toDate)).format(\"DD/MM/YYYY\");\n    } else {\n      this.toDispatchDate = '';\n    }\n  }\n  plannerSearch() {\n    this.selected = [];\n    this.markasDeletePlans = [];\n    this.table.offset = 0;\n    this.forDateValidation();\n    let bodyData = {\n      'fromDispatchDate': this.fromDispatchDate,\n      'toDispatchDate': this.toDispatchDate,\n      'destinationCode': this.destination,\n      'index': this.page.offset,\n      'marketSegment': this.mktsegment,\n      'materialCode': this.materialCode,\n      'materialDescription': this.materialDescription,\n      'materialGroup': this.materialGroup,\n      'pageLength': this.page.limit,\n      'planId': this.planId,\n      'status': this.status,\n      'statuses': this.filterPlanStatus,\n      // 'sourceLocation': this.source,\n      // 'sourceCode': this.sourceCode,\n      'planStatus': this.planStatus,\n      'insertUser': this.insertUser,\n      'priorityList':this.priority,\n      'sourceCodeList': this.sourceCodeList\n    }\n    if (this.fromDate != '' && this.fromDate != null) {\n      if (this.toDate != '' && this.toDate != null) {\n        this.modifyPlanData = [];\n        this.getModifyPlan(bodyData);\n      } else {\n        this.toastr.error(\"Please select To Date\", \"!Error\")\n      }\n    } else {\n      this.getModifyPlan(bodyData);\n    }\n  }\n  showFilter() {\n    this.isShow = !this.isShow\n  }\n\n  deleteApprQty(event, row, rowIndex) {\n    let rowData = row;\n    ///rowData.deletedUnApprQuantity = 0;\n    if (Number(event.target.value) <= row.availableQuantity) {\n      //proced further\n      row.isError = false;\n    } else {\n      row.isError = true;\n      this.toastr.error(\"Approval Delete Quantity sholud be less than or equal to Avaliable Quantity\")\n    }\n  }\n\n  deleteUnApprQty(event, row, rowIndex) {\n    let rowData = row;\n    //rowData.deletedUnApprQuantity = 0;\n    // if (Number(event.target.value) <= (row.unapprovedQuantity - row.deletedUnApprQuantity)) \n    if (Number(event.target.value) <= (row.unapprovedQuantity)) {\n      //proced further\n      row.isError = false;\n    } else {\n      row.isError = true;\n      this.toastr.error(\"UnApproval Delete Quantity sholud be less than or equal to Un Approved Quantity\")\n    }\n  }\n\n  editPlanQty(event, row, rowIndex) {\n    let rowData = row;\n    //rowData.deletedUnApprQuantity = 0;\n    if (Number(event.target.value) >= (row.approvedQuantity)) {\n      //proced further\n      row.isError = false;\n    } else {\n      row.isError = true;\n      this.toastr.error(\" Quantity sholud be more than or equal to Approved Quantity\")\n    }\n  }\n\n  onSelect(event, data) {\n    if (event.target.checked) {\n      if (data.availableQuantity > 0) {\n        data.deleteApprQuantity = data.availableQuantity\n      }\n      this.markasDeletePlans.push(data);\n    } else {\n      data.deleteApprQuantity = 0;\n      let index = this.markasDeletePlans.indexOf(data);\n      this.markasDeletePlans.splice(index, 1);\n    }\n    console.log(this.markasDeletePlans, \"markasDeletePlans\");\n    this.tteSum = this.markasDeletePlans.reduce((sum, { tte }) => sum + tte, 0);\n    this.planQtySum = this.markasDeletePlans.reduce((sum, { quantity }) => sum + quantity, 0);\n    this.apprQtySum = this.markasDeletePlans.reduce((sum, { approvedQuantity }) => sum + approvedQuantity, 0);\n    this.unapprQtySum = this.markasDeletePlans.reduce((sum, { unapprovedQuantity }) => sum + unapprovedQuantity, 0);\n    this.apprDeleteQtySum = this.markasDeletePlans.reduce((sum, { deletedApprQuantity }) => sum + deletedApprQuantity, 0);\n    this.unapprDeleteQtySum = this.markasDeletePlans.reduce((sum, { deletedUnApprQuantity }) => sum + deletedUnApprQuantity, 0);\n    this.reservedQtySum = this.markasDeletePlans.reduce((sum, { reservedQuantity }) => sum + reservedQuantity, 0);\n    this.loadedQtySum = this.markasDeletePlans.reduce((sum, { loaded }) => sum + loaded, 0);\n    this.dispatchedQtySum = this.markasDeletePlans.reduce((sum, { dispatchedQuantity }) => sum + dispatchedQuantity, 0);\n    this.availableQtySum = this.markasDeletePlans.reduce((sum, { availableQuantity }) => sum + availableQuantity, 0);\n    this.totalAvailableQtySum = this.markasDeletePlans.reduce((sum, { totalAvailableQuantity }) => sum + totalAvailableQuantity, 0);\n    this.totalTTEPercentageSum = this.markasDeletePlans.reduce((sum, { availbleTTE }) => sum + availbleTTE, 0);\n    this.TruckPercentageSum = this.markasDeletePlans.reduce((sum, { truckCount }) => sum + truckCount, 0);\n    this.weightSum = this.markasDeletePlans.reduce((sum, { weight }) => sum + weight, 0);\n    this.totalWeightSum = this.markasDeletePlans.reduce((sum, { totalWeight }) => sum + totalWeight, 0);\n    this.totalWeightUtilSum = this.markasDeletePlans.reduce((sum, { weightUtil }) => sum + weightUtil, 0);\n    this.volumeSum = this.markasDeletePlans.reduce((sum, { volume }) => sum + volume, 0);\n    this.totalVolumeSum = this.markasDeletePlans.reduce((sum, { totalVolume }) => sum + totalVolume, 0);\n    this.totalVolumeUtilSum = this.markasDeletePlans.reduce((sum, { volumeUtil }) => sum + volumeUtil, 0);\n  }\n\n  onSelectAll(event) {\n    this.markasDeletePlans = [];\n    this.modifyPlanData.forEach(data => {\n      this.onSelect(event, data);\n    });\n  }\n\n  markasDelete( ) {\n    // this.markasDeletePlans\n  }\n  // Clearing all the sum values after success response\n  clearAllSum(){\n    this.tteSum = 0;\n    this.planQtySum = 0;\n    this.apprQtySum = 0;\n    this.unapprQtySum = 0;\n    this.apprDeleteQtySum = 0;\n    this.unapprDeleteQtySum = 0;\n    this.reservedQtySum = 0;\n    this.loadedQtySum = 0;\n    this.dispatchedQtySum = 0;\n    this.availableQtySum = 0;\n    this.totalAvailableQtySum = 0;\n    this.totalTTEPercentageSum = 0;\n    this.TruckPercentageSum = 0;\n    this.weightSum = 0;\n    this.totalWeightSum = 0;\n    this.totalWeightUtilSum = 0;\n    this.volumeSum = 0;\n    this.totalVolumeSum = 0;\n    this.totalVolumeUtilSum = 0;\n  }\n\n  //export excel data\n  export(): void {\n    if (this.modifyPlanData.length > 0) {\n      this.forDateValidation();\n      let data = {\n        'fromDispatchDate': this.fromDispatchDate,\n        'toDispatchDate': this.toDispatchDate,\n        'destinationCode': this.destination,\n        // 'index': this.index,\n        'marketSegment': this.mktsegment,\n        'materialCode': this.materialCode,\n        'materialDescription': this.materialDescription,\n        'materialGroup': this.materialGroup,\n        'pageLength': this.page.count,\n        'planId': this.planId,\n        'status': this.status,\n        'statuses': this.filterPlanStatus,\n        // 'sourceLocation': this.source,\n        'sourceCodeList': this.sourceCodeList,\n        'planStatus': this.planStatus,\n        'insertUser': this.insertUser,\n        'priorityList':this.priority,\n      }\n      this.isLoading = true;\n      this.newModifyPlanData = [];\n      this.service.post_service(ApiserviceService.apisList.planinfo, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.newModifyPlanData = response['data'].planItems;\n          let excelRawData = this.newModifyPlanData;\n          let newExcelData = [];\n          for (let i = 0; i < excelRawData.length; i++) {\n            // // For RDC: The Avail TTE and Truck count should be based on Plan Qty and not Available Qty\n            // // For FGS : The Avail TTE and Truck count should be based on Available Qty\n            // let availbleTTE; let truckCount;\n            // if (this.service.checkRole() == this.roles.rdc_PLN) {\n            //   availbleTTE = ((excelRawData[i].quantity ? excelRawData[i].quantity : 0) * (excelRawData[i].tte ? excelRawData[i].tte : 0));\n            //   truckCount = (((excelRawData[i].quantity ? excelRawData[i].quantity : 0) * (excelRawData[i].tte ? excelRawData[i].tte : 0)) / this.standredFTLTTE);\n            //   // Weight Util values calculations\n            //   excelRawData[i].weightUtil = ((((excelRawData[i].quantity ? excelRawData[i].quantity : 0) * (excelRawData[i].weight ? excelRawData[i].weight : 0)) / this.standardFTLWeight) * 100);\n            //   // Volume Util values calculations\n            //   excelRawData[i].volumeUtil = ((((excelRawData[i].quantity ? excelRawData[i].quantity : 0) * (excelRawData[i].volume ? excelRawData[i].volume : 0)) / this.standardFTLVolumne) * 100);\n            // } else {\n            //   availbleTTE = ((excelRawData[i].availableQuantity ? excelRawData[i].availableQuantity : 0) * (excelRawData[i].tte ? excelRawData[i].tte : 0));\n            //   truckCount = (((excelRawData[i].availableQuantity ? excelRawData[i].availableQuantity : 0) * (excelRawData[i].tte ? excelRawData[i].tte : 0)) / this.standredFTLTTE);\n            //   // Weight Util values calculations\n            //   excelRawData[i].weightUtil = ((((excelRawData[i].availableQuantity ? excelRawData[i].availableQuantity : 0) * (excelRawData[i].weight ? excelRawData[i].weight : 0)) / this.standardFTLWeight) * 100);\n            //   // Volume Util values calculations\n            //   excelRawData[i].volumeUtil = ((((excelRawData[i].availableQuantity ? excelRawData[i].availableQuantity : 0) * (excelRawData[i].volume ? excelRawData[i].volume : 0)) / this.standardFTLVolumne) * 100);\n            // }\n            let data = {\n              \"PlanId\": excelRawData[i].planId,\n              \"Dispatch Date\": excelRawData[i].dispatchDate,\n              \"Source\": excelRawData[i].sourceLocation,\n              \"Destination\": excelRawData[i].destinationLocation,\n              \"Material Code\": excelRawData[i].itemId,\n              \"Material Description\": excelRawData[i].itemDescription,\n              \"Dest Description\": excelRawData[i].destinationDescription,\n              \"Category\": excelRawData[i].category,\n              // \"Insert User\": excelRawData[i].insertUser,\n              \"TTE\": +excelRawData[i].tte,\n              \"Batch code\": excelRawData[i].batchCode,\n              \"Priority\": excelRawData[i].priority,\n              \"MKT segment\": excelRawData[i].marketSegment,\n              \"Plan Quantity\": +excelRawData[i].quantity,\n              \"Approved Quantity\": +excelRawData[i].approvedQuantity,\n              \"Un Approved Quantity\": +excelRawData[i].unapprovedQuantity,\n              \"Approved Deleted\": +excelRawData[i].deletedApprQuantity,\n              \"UnApproved Deleted\": +excelRawData[i].deletedUnApprQuantity,\n              \"Reserved\": +excelRawData[i].reservedQuantity,\n              \"Loaded\": +excelRawData[i].loaded,\n              \"Dispatched Quantity\": +excelRawData[i].dispatchedQuantity,\n              \"Available Quantity\": +excelRawData[i].availableQuantity,\n              \"Total Available Quantity\": +excelRawData[i].totalAvailableQuantity,\n              \"Quantity to be Delete Approval\": +excelRawData[i].deleteApprQuantity,\n              \"Quantity to be Delete UnApproval\": +excelRawData[i].deleteUnApprQuantity,\n              \"Avail TTE\":excelRawData[i].availbleTTE ? +excelRawData[i].availbleTTE.toFixed(2) : 0,\n              \"Truck Count\": excelRawData[i].truckCount ? +excelRawData[i].truckCount.toFixed(2) : 0,\n              \"Weight (Kg)\": excelRawData[i].weight ? +excelRawData[i].weight.toFixed(2) : 0,\n              \"Available Weight (Kg)\": excelRawData[i].totalWeight ? +excelRawData[i].totalWeight.toFixed(2) : 0,\n              \"Weight Util (%)\": excelRawData[i].weightUtil ? +excelRawData[i].weightUtil.toFixed(2) : 0,\n              \"Volume (CUMTR)\": excelRawData[i].volume ? +excelRawData[i].volume.toFixed(2) : 0,\n              \"Available Volume (CUMTR)\": excelRawData[i].totalVolume ? +excelRawData[i].totalVolume.toFixed(2) : 0,\n              \"Volume Util (%)\": excelRawData[i].volumeUtil ? +excelRawData[i].volumeUtil.toFixed(2) : 0,\n              \"Plan Status\": excelRawData[i].status,\n              \"Insert User\": excelRawData[i].insertUser,\n              \"Update User\": excelRawData[i].updateUser,\n              \"Insert Date\": this.service.customDateTimeFormat(excelRawData[i].insertDate),\n              \"Update Date\": this.service.customDateTimeFormat(excelRawData[i].updateDate),\n              \"Plan Age (Days)\": excelRawData[i].planAge,\n              \"Comments\": excelRawData[i].comments,\n              \"status\": excelRawData[i].appStatus\n            }\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'modifyplanData.xlsx')\n          this.isLoading = false\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      });\n    } else {\n      this.toastr.error(\"No records found to export\", \"Error!\");\n    }\n  }\n\n  //set value destination\n  setDestination(value) {\n    //  this.destinationDesc = value;\n    this.destination = value;\n  }\n\n  //set value to destination description\n  setDestDescription(value) {\n    this.destinationDesc = value;\n  }\n\n  getUserDestinationList(event) {\n    this.destination = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.getDestinationDescriptionDataList + event.target.value).subscribe(response => {\n        if (response['data']) {\n          this.descriptionList = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n  addEvent(type, event) {\n    if (event.target.value) {\n      let checkToDate:any = this.toDate;\n      console.log(\"Check--->1\", checkToDate);\n      if(this.toDate === this.currentDateAsString){\n        // on page load we are defaluting the  to date with string. Comparing string with date is not possible\n        // If toDate is equal to currentDate then chagetingthe checkDate to new Date() otherwise defaulting with toDate\n        checkToDate = new Date();\n        console.log(\"Check--->2\", checkToDate);\n      }\n       /* Checking if selected from date greater than to date.\n      Clearing the toDate field when from date greater than to date */\n      if(this.toDate && (this.fromDate > checkToDate)){\n        this.toDate = '';\n      }\n    }\n  }\n  emptySumm() {\n    return null\n  }\n\n  // Filter source location\n  getfilterSource(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.sourceList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        console.log(\"respio\", response)\n        this.sourceList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n  // show Comments\n  showIntegrationMessage(row) {\n    this.modalComment = row.comments;\n    $(\"#commnetsModal\").modal('show');\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { customMaterialModule } from '../../angular-material';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { ModifyPlanComponent } from './modify-plan.component';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ModifyPlanDeleteConfirmationComponent } from 'src/app/public/modify-plan-delete-confirmation/modify-plan-delete-confirmation.component';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\n\nconst routes: Routes = [\n  { path: '', component: ModifyPlanComponent},\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    customMaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n    LoaderModule,\n    NgxDatatableModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    ModifyPlanComponent,\n    ModifyPlanDeleteConfirmationComponent\n  ],\n  providers:\n    [\n    ],\n    entryComponents:[\n      ModifyPlanComponent,\n      ModifyPlanDeleteConfirmationComponent\n    ]\n})\nexport class ModifyPlanModule { }\n","module.exports = \"<h2 mat-dialog-title>Are you sure,do you want to delete ?</h2>\\n<mat-dialog-content class=\\\"mat-typography\\\">\\n\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"center\\\">\\n  <!-- <button mat-button-raised mat-dialog-close>Cancel</button> -->\\n  <button mat-raised-button  color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Yes</button> &nbsp;\\n  <!-- <button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Install</button> -->\\n  <button mat-stroked-button color=\\\"primary\\\" [mat-dialog-close]=\\\"false\\\" cdkFocusInitial>No</button>\\n</mat-dialog-actions>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3B1YmxpYy9tb2RpZnktcGxhbi1kZWxldGUtY29uZmlybWF0aW9uL21vZGlmeS1wbGFuLWRlbGV0ZS1jb25maXJtYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-modify-plan-delete-confirmation',\n  templateUrl: './modify-plan-delete-confirmation.component.html',\n  styleUrls: ['./modify-plan-delete-confirmation.component.scss']\n})\nexport class ModifyPlanDeleteConfirmationComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<ModifyPlanDeleteConfirmationComponent>,\n  ) { }\n\n  ngOnInit() {\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n"],"sourceRoot":""}