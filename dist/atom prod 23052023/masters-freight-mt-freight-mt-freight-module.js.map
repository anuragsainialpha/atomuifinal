{"version":3,"sources":["webpack:///./src/app/masters/freight/mt-freight/mt-freight.component.html","webpack:///./src/app/masters/freight/mt-freight/mt-freight.component.scss","webpack:///./src/app/masters/freight/mt-freight/mt-freight.component.ts","webpack:///./src/app/masters/freight/mt-freight/mt-freight.module.ts"],"names":[],"mappings":"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","file":"masters-freight-mt-freight-mt-freight-module.js","sourcesContent":["module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"mt-item-header\\\">\\n    <b> Freight &gt; MT Freight</b>\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <!-- <button class=\\\"theme-small-button\\\" (click)=\\\"upload()\\\" matTooltip=\\\"Upload excel\\\">\\n        <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i>\\n      </button> -->\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n\\n\\n  <div class=\\\"mt-item-fields\\\" *ngIf=\\\"isShow\\\">\\n      <div class=\\\"col-md-12 row\\\">\\n        <div class=\\\"col-md-12 padding-right-40\\\">\\n          <div class=\\\"row\\\">\\n\\n              <div class=\\\"col-md-1\\\">\\n                  <mat-form-field>\\n                    <input matInput placeholder=\\\"Servprov\\\" [(ngModel)]=\\\"servprov\\\" name=\\\"servprov\\\">\\n                  </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                  <mat-form-field>\\n                    <input matInput placeholder=\\\"Source Code\\\" [(ngModel)]=\\\"sourceLoc\\\" name=\\\"sourceLoc\\\">\\n                  </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                  <mat-form-field>\\n                    <input matInput placeholder=\\\"Dest Code\\\" [(ngModel)]=\\\"destLoc\\\" name=\\\"destLoc\\\">\\n                  </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                  <mat-form-field>\\n                    <input matInput placeholder=\\\"TruckType\\\" [(ngModel)]=\\\"truckType\\\" name=\\\"truckType\\\">\\n                  </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                  <mat-form-field>\\n                    <input matInput placeholder=\\\"Variant\\\" [(ngModel)]=\\\"condition1\\\" name=\\\"condition1\\\">\\n                  </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                  <mat-form-field>\\n                    <mat-select name=\\\"status\\\" [(value)]=\\\"status\\\" placeholder=\\\"Status\\\">\\n                      <mat-option *ngFor=\\\"let stat of statusList\\\" [value]=\\\"stat.val\\\">\\n                        {{stat.val}}\\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                  <mat-form-field>\\n                    <input matInput placeholder=\\\"%\\\" [(ngModel)]=\\\"percentile\\\" name=\\\"percentile\\\">\\n                  </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                      <mat-form-field>\\n                        <input matInput [matDatepicker]=\\\"createIndentDate\\\" [(ngModel)]=\\\"indentDate\\\"\\n                          name=\\\"indentDate\\\" placeholder=\\\"Eff Date\\\" (ngModelChange)=\\\"formateDate($event)\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"createIndentDate\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #createIndentDate disabled=\\\"false\\\"></mat-datepicker>\\n                      </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"Sap Code\\\" aria-label=\\\"State\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"transporterSapCode\\\" name=\\\"iransporterSapCode\\\">\\n                    </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                  <mat-form-field>\\n                    <input matInput placeholder=\\\"Src Desc\\\" [(ngModel)]=\\\"sourceDesc\\\" name=\\\"sourceDesc\\\">\\n                  </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                  <mat-form-field>\\n                    <input matInput placeholder=\\\"Dest Desc\\\" [(ngModel)]=\\\"destDesc\\\" name=\\\"destDesc\\\">\\n                  </mat-form-field>\\n              </div>\\n\\n          </div>\\n          <!-- (ngModelChange)=\\\"formateDateFromInsert($event)\\\"  -->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-1 pr-0\\\">\\n              <div class=\\\"form-group\\\">\\n                <mat-form-field>\\n                  <input matInput disabled [matDatepicker]=\\\"formPicker\\\" placeholder=\\\"From Insert Date\\\" [(ngModel)]=\\\"fromInsertDate\\\"\\n                    name=\\\"fromInsertDate\\\"   (dateChange)=\\\"addEvent('fromInsertDate', $event)\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"formPicker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #formPicker disabled=\\\"false\\\"></mat-datepicker>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n            <!-- (ngModelChange)=\\\"formateDateToInsert($event)\\\" -->\\n            <div class=\\\"col-md-1 pr-0\\\">\\n              <div class=\\\"form-group\\\">\\n                <mat-form-field>\\n                  <input matInput disabled [matDatepicker]=\\\"toPicker\\\" [min]=\\\"fromInsertDate\\\" placeholder=\\\"To Insert Date\\\"\\n                    [(ngModel)]=\\\"toInsertDate\\\" name=\\\"toInsertDate\\\" >\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"toPicker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #toPicker [disabled]=\\\"!fromInsertDate\\\"></mat-datepicker>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n            <!-- <div class=\\\"col-md-1 pr-0\\\">\\n              <div class=\\\"form-group\\\">\\n                <mat-form-field>\\n                  <input matInput disabled [matDatepicker]=\\\"expiryPicker\\\" placeholder=\\\"Expiry Date\\\" [(ngModel)]=\\\"expiryDate\\\"\\n                    name=\\\"expiryDate\\\"   (dateChange)=\\\"addEvent('expiryDate', $event)\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"expiryPicker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #expiryPicker disabled=\\\"false\\\"></mat-datepicker>\\n                </mat-form-field>\\n              </div>\\n            </div> -->\\n            <div class=\\\"col-md-1 \\\">\\n              <div class=\\\"form-group\\\">\\n                <mat-form-field>\\n                  <mat-select placeholder=\\\"Expiry Date\\\" [(ngModel)]=\\\"filterExpiryDate\\\" name=\\\"filterExpiryDate\\\" >\\n                    <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                    <mat-option *ngFor=\\\"let item of expiryDateFilterList\\\" [value]=\\\"item.key\\\" >\\n                      {{item.value}}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-2 pr-0\\\" *ngIf = \\\"showExpiryDate()\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6 pr-0\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput disabled [matDatepicker]=\\\"fromExpiryPicker\\\" placeholder=\\\"From Expiry Date\\\" [(ngModel)]=\\\"fromExpiryDate\\\"\\n                        name=\\\"fromExpiryDate\\\"   (dateChange)=\\\"addEventExpDate('fromExpiryDate', $event)\\\">\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"fromExpiryPicker\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker #fromExpiryPicker disabled=\\\"false\\\"></mat-datepicker>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-6 pr-0\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput disabled [matDatepicker]=\\\"toExpiryPicker\\\" [min]=\\\"fromExpiryDate\\\" placeholder=\\\"To Expiry Date\\\" [(ngModel)]=\\\"toExpiryDate\\\"\\n                        name=\\\"toExpiryDate\\\"   >\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"toExpiryPicker\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker #toExpiryPicker [disabled]=\\\"!fromExpiryDate\\\"></mat-datepicker>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n      </div>\\n      <div class=\\\"pull-right\\\">\\n        <div class=\\\"search-fileds\\\">\\n          <button class=\\\"theme-small-button\\\" (click)=\\\"doSearchFilter()\\\" matTooltip=\\\"Search\\\">\\n            <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <button class=\\\"theme-delete-button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear All\\\">\\n            <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n<!-- <div *ngIf=\\\"displayBtn\\\">\\n&nbsp;<button [disabled]=\\\"isDisable\\\" class=\\\"makebig btn btn-sm light-red-color\\\" (click)=\\\"approveStatusSubmit(buttonLable)\\\">\\n    {{buttonLable}}\\n  </button>\\n</div>  -->\\n\\n<div *ngIf=\\\"isL1Manager && displayBtn\\\">\\n    &nbsp;<button [disabled]=\\\"isDisable\\\" *ngIf=\\\"displayBtn\\\" class=\\\"makebig btn btn-sm light-red-color\\\" (click)=\\\"approveStatusSubmit(buttonLable)\\\">\\n        {{buttonLable}}\\n      </button>\\n    </div>\\n\\n<div *ngIf=\\\"isL2Manager && displayBtn\\\">\\n  &nbsp;<button [disabled]=\\\"isDisable\\\" *ngIf=\\\"displayBtn\\\" class=\\\"makebig btn btn-sm light-red-color\\\" (click)=\\\"approveStatusSubmit(buttonLable)\\\">\\n      {{buttonLable}}\\n    </button>\\n  </div>\\n\\n\\n\\n  <div class=\\\"mt-freight-table\\\">\\n      <ngx-datatable class='material ngx-table-custom-scroll  ngx-table-tr-custom-scroll'  [externalPaging]=\\\"true\\\"\\n      #table [rows]='mtFreightList' [scrollbarH]=\\\"true\\\" [headerHeight]=\\\"20\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" \\n      (page)=\\\"datatablePageData($event)\\\" [limit]=\\\"page.limit\\\" [count]=\\\"page.count\\\"  [offset]=\\\"page.offset\\\"\\n      [selected]=\\\"selected\\\" [selectionType]=\\\"'checkbox'\\\" [selectAllRowsOnPage]=\\\"false\\\">\\n        \\n      \\n      \\n      <!-- name=\\\"Select All\\\" prop=\\\"SelectAll\\\" -->\\n      <!-- <ngx-datatable-column [frozenLeft]=\\\"true\\\" [width]=\\\"30\\\" [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"false\\\" [resizeable]=\\\"false\\\">\\n          <ng-template ngx-datatable-header-template let-value=\\\"value\\\" let-allRowsSelected=\\\"allRowsSelected\\\" let-selectFn=\\\"selectFn\\\">\\n            <input type=\\\"checkbox\\\" [class.circle]=\\\"fewChecked\\\"  (change)=\\\"selectAllRows($event)\\\" [checked]=\\\"isCheckedAll\\\"/>\\n          </ng-template>\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-value=\\\"value\\\" let-isSelected=\\\"isSelected\\\" let-onCheckboxChangeFn=\\\"onCheckboxChangeFn\\\">\\n            \\n            <input type=\\\"checkbox\\\" [class.circle]=\\\"fewChecked\\\" (change)=\\\"modifyFreightItem(row,$event)\\\" [checked]=\\\"isCheckedAll\\\"/>\\n          </ng-template>\\n      </ngx-datatable-column> -->\\n\\n      <ngx-datatable-column [frozenLeft]=\\\"true\\\" [width]=\\\"30\\\" [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"false\\\"\\n        [resizeable]=\\\"false\\\">\\n        <ng-template ngx-datatable-header-template let-value=\\\"value\\\" let-allRowsSelected=\\\"allRowsSelected\\\"\\n          let-selectFn=\\\"selectFn\\\" let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\">\\n          <input type=\\\"checkbox\\\" [checked]=\\\"allRowsSelected\\\"\\n            (change)=\\\"selectFn(!allRowsSelected);onSelectAll($event)\\\" />\\n        </ng-template>\\n        <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-isSelected=\\\"isSelected\\\" let-row=\\\"row\\\"\\n          let-rowIndex=\\\"rowIndex\\\" let-onCheckboxChangeFn=\\\"onCheckboxChangeFn\\\">\\n          <input type=\\\"checkbox\\\" [checked]=\\\"isSelected\\\" (change)=\\\"onCheckboxChangeFn($event);onSelect($event,row)\\\" />\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n\\n\\n      <!-- FREEZED CLOUMNS -->\\n\\n       \\n\\n        <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Servprov\\\" [width]=\\\"110\\\" [resizeable]=\\\"false\\\" prop=\\\"servprov\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.servprov ? row.servprov : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n        <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Source Code\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" prop=\\\"sourceLoc\\\" [sortable]=\\\"true\\\" class=\\\"text-right\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.sourceLoc ? row.sourceLoc : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n        <ngx-datatable-column [frozenLeft]=\\\"true\\\"  name=\\\"Dest Code\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" prop=\\\"destLoc\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.destLoc ? row.destLoc : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n        <ngx-datatable-column [frozenLeft]=\\\"true\\\"  name=\\\"Truck Type\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" prop=\\\"truckType\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.truckType ? row.truckType : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n        <ngx-datatable-column [frozenLeft]=\\\"true\\\"  name=\\\"Variant 1\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"condition1\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.variant1 ? row.variant1 : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n\\n       <!-- MOVABLE CLOUMNS -->\\n\\n       <ngx-datatable-column name=\\\"Freight\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" prop=\\\"baseFreight\\\" [sortable]=\\\"true\\\" class=\\\"text-right\\\"  [cellClass]=\\\"'text-right'\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.baseFreight ? row.baseFreight : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Curr\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\" prop=\\\"baseFreightUom\\\" [sortable]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.baseFreightUom ? row.baseFreightUom : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Basis\\\" [width]=\\\"110\\\" [resizeable]=\\\"false\\\" prop=\\\"basis\\\" [sortable]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.basis ? row.basis : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Status\\\" [width]='120' [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"appStatus\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          <!-- <button class=\\\"btn btn-sm lightgreen-button\\\" (click)=\\\"modifyItem(row)\\\" [ngClass]=\\\"(row.status=='Level1 Approved' || row.status=='Level2 Approved'||row.status=='L1 Approved' || row.status=='L2 Approved')?'lightgreen-button':'light-red-color'\\\"> -->\\n            {{row.status?row.status:'Unapproved'}}\\n          <!-- </button> -->\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Prev Rate\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" prop=\\\"previousRate\\\" [sortable]=\\\"true\\\" [cellClass]=\\\"'text-right'\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.previousRate ? row.previousRate : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Diff \\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" prop=\\\"diff\\\" [sortable]=\\\"true\\\" class=\\\"text-right\\\" [cellClass]=\\\"'text-right'\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.diff ? row.diff : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"%\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" prop=\\\"percentile\\\" [sortable]=\\\"true\\\" class=\\\"text-right\\\" [cellClass]=\\\"'text-right'\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.percentile ? row.percentile : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Eff Date\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" prop=\\\"effectiveDate\\\" [sortable]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.effectiveDate ? trimDate(row.effectiveDate) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <!-- <ngx-datatable-column name=\\\"Exp Date\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" prop=\\\"expiryDate\\\" [sortable]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n       {{row.expiryDate ? trimDate(row.expiryDate) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column> -->\\n      <!-- Dispatch plan column -->\\n      <ngx-datatable-column [frozenLeft]=\\\"false\\\" name=\\\"Exp Date\\\" [width]=\\\"110\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"expiryDate\\\">\\n        <!-- <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <ng-container *ngIf=\\\"(row.expiryDate == null || row.expiryDate == '')\\\" >\\n            \\n            <mat-form-field>\\n              <input matInput [matDatepicker]=\\\"expiryDatePicker\\\" [min] = \\\"formatEffectiveDate(row.effectiveDate)\\\" [(ngModel)]=\\\"row.selectedExpiryDate\\\" autofocus name =\\\"selectedExpiryDate\\\"\\n              (dateChange)=\\\"updateExpiryDateAtRow(row, rowIndex)\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"expiryDatePicker\\\" ></mat-datepicker-toggle>\\n              <mat-datepicker #expiryDatePicker></mat-datepicker>\\n            </mat-form-field>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"row.expiryDate\\\">\\n            {{row.expiryDate ? trimDate(row.expiryDate) : ''}}\\n          </ng-container>\\n        </ng-template> -->\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <ng-container>\\n            <div >\\n              <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\"\\n                (click)=\\\"editing[rowIndex + '-dispatchDate'] = true\\\" *ngIf=\\\"!editing[rowIndex + '-dispatchDate']\\\">\\n                <span class=\\\"edit-label\\\">{{row.expiryDate ? trimDate(row.expiryDate) : ''}}\\n                </span>\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n              </div>\\n              <mat-form-field *ngIf=\\\"editing[rowIndex+ '-dispatchDate']\\\">\\n                <input matInput [matDatepicker]=\\\"rowIndexPicker\\\" [value]=\\\"row.selectedExpiryDate\\\" autofocus\\n                  (dateChange)=\\\"updateExpiryDateAtRow(row, $event, rowIndex)\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"rowIndexPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #rowIndexPicker></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </ng-container>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <!-- <ngx-datatable-column name=\\\"TT\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\" prop=\\\"ttDays\\\" [sortable]=\\\"true\\\" [cellClass]=\\\"'text-right'\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ttDays ? row.ttDays : ''}}\\n        </ng-template>\\n      </ngx-datatable-column> -->\\n      <ngx-datatable-column name=\\\"TT Days\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"ttDays\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <ng-container>\\n            <div >\\n              <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-ttDays'] = true\\\"\\n                *ngIf=\\\"!editing[rowIndex + '-ttDays']\\\">\\n                <span class=\\\"edit-label\\\">{{row.ttDays ? row.ttDays : ''}}\\n                </span>\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n              </div>\\n              <ng-container *ngIf=\\\"editing[rowIndex+ '-ttDays']\\\">\\n                <input class=\\\"table-input\\\" autofocus (blur)=\\\"updateValue(row,$event, 'ttDays', rowIndex)\\\"\\n                  [value]=\\\"row.ttDays\\\" (keypress)=\\\"service.numberOnly($event)\\\" (keyup)=\\\"showSaveButton($event, row)\\\">\\n              </ng-container>\\n            </div>\\n          </ng-container>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <!-- <ngx-datatable-column name=\\\"Distance\\\" [width]=\\\"65\\\" [resizeable]=\\\"false\\\" prop=\\\"distance\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.distance ? row.distance : ''}}\\n          </ng-template>\\n        </ngx-datatable-column> -->\\n        <ngx-datatable-column name=\\\"Distance\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"distance\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n            <ng-container>\\n              <div >\\n                <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-distance'] = true\\\"\\n                  *ngIf=\\\"!editing[rowIndex + '-distance']\\\">\\n                  <span class=\\\"edit-label\\\">{{row.distance ? row.distance : ''}}\\n                  </span>\\n                  <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                </div>\\n                <ng-container *ngIf=\\\"editing[rowIndex+ '-distance']\\\">\\n                  <input class=\\\"table-input\\\" autofocus (blur)=\\\"updateValue(row,$event, 'distance', rowIndex)\\\"\\n                    [value]=\\\"row.distance\\\" (keypress)=\\\"service.numberOnly($event)\\\" (keyup)=\\\"showSaveButton($event, row)\\\">\\n                </ng-container>\\n              </div>\\n            </ng-container>\\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Variant 2\\\" [width]=\\\"75\\\" [resizeable]=\\\"false\\\" prop=\\\"condition2\\\" [sortable]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.variant2 ? row.variant2 : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n\\n      \\n      <ngx-datatable-column name=\\\"Rate Type\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"rateType\\\" [sortable]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.rateType ? row.rateType : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Loading\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"loading\\\" [cellClass]=\\\"'text-right'\\\" [sortable]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.loading ? row.loading : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Un Loading\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" prop=\\\"unloading\\\" [cellClass]=\\\"'text-right'\\\" [sortable]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.unloading ? row.unloading : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n\\n\\n      <ngx-datatable-column name=\\\"Sap Code\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" prop=\\\"transporterSapCode\\\" [sortable]=\\\"true\\\" [cellClass]=\\\"'text-right'\\\">\\n        <!-- <input type=\\\"checkbox\\\" [class.circle]=\\\"fewChecked\\\" (change)=\\\"modifyItem(row,$event)\\\" [checked]=\\\"isCheckedAll\\\"/>&nbsp; \\n        <br> -->\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.transporterSapCode ? row.transporterSapCode : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Source Desc\\\" [width]=\\\"170\\\" [resizeable]=\\\"false\\\" prop=\\\"sourceDesc\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.sourceDesc ? row.sourceDesc : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Dest Desc\\\" [width]=\\\"180\\\" [resizeable]=\\\"false\\\" prop=\\\"destDesc\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.destDesc ? row.destDesc : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n        <ngx-datatable-column name=\\\"Min Value\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"minValue\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.minValue ? row.minValue : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Min Val Uom\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" prop=\\\"minValueUom\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.minValueUom ? row.minValueUom : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n        <ngx-datatable-column name=\\\"Mode\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" prop=\\\"transportMode\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.transportMode ? row.transportMode :''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        \\n        <ngx-datatable-column name=\\\"Src Type\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" prop=\\\"sourceType\\\" [sortable]=\\\"true\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row.sourceType ? row.sourceType : ''}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n          \\n        <ngx-datatable-column name=\\\"Others1\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" prop=\\\"Others1\\\" [cellClass]=\\\"'text-right'\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.others1 ? row.others1 : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n\\n        <ngx-datatable-column name=\\\"Tot Expense\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" prop=\\\"totExpense\\\" [sortable]=\\\"true\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row.totExpense ? row.totExpense : ''}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Pay Transporter\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"payTransporter\\\" [sortable]=\\\"true\\\">\\n              <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n                {{row.payTransporter ? row.payTransporter : ''}}\\n              </ng-template>\\n            </ngx-datatable-column>\\n\\n        <ngx-datatable-column name=\\\"Others1 Code\\t\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"others1Code\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.others1Code\\t? row.others1Code : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Others2\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" prop=\\\"others2\\\" [cellClass]=\\\"'text-right'\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.others2 ? row.others2 : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Others2 Code\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"others2 Code\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.others2Code ? row.others2Code : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Others3\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" prop=\\\"others3\\\" [cellClass]=\\\"'text-right'\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.others3 ? row.others3 : '' }}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Others3 Code\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"others3Code\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.others3Code ? row.others3Code : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" prop=\\\"insertUser\\\" [cellClass]=\\\"'text-right'\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.insertUser ? row.insertUser : '' }}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Insert Date\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"insertDate\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.insertDate ? trimDate(row.insertDate) : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Approval L1 Date\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"l1ApprovedDate\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.approval1Date ? trimDate(row.approval1Date) : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Approval L2 Date\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"l2ApprovedDate\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.approval2Date ? trimDate(row.approval2Date) : ''}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Remarks\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"remarks\\\" [sortable]=\\\"false\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            <div class=\\\"edit-field\\\" [title]=\\\"row.remarks\\\"\\n            [ngClass]=\\\"{'cursor-pointer':row.remarks?.length>9}\\\"\\n            (click)=\\\"showIntegrationMessage(row)\\\" *ngIf=\\\"(row.remarks)\\\">\\n            {{(row.remarks?.length>9)?(row.remarks | slice:0:9)+'..':(row.remarks)}}\\n          </div>\\n            <!-- {{row.remarks}} -->\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <!-- Actions -->\\n      <ngx-datatable-column name=\\\"Action\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" *ngIf = 'isActionVisible()'>\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n            <button *ngIf= \\\"row.showSaveButton\\\" class=\\\"theme-small-button btn\\\" matTooltip=\\\"Modify Freight\\\" (click)=\\\"rowLevelModifyFreight(row)\\\">\\n            <i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n         \\n          <span *ngIf=\\\"(isShowDeleteFreight(row))\\\">\\n            <button class=\\\"theme-delete-button btn\\\" matTooltip=\\\"Delete plan\\\" (click)=\\\"confirmDeleteAction(row)\\\">\\n              <i class=\\\"fa fa-trash-o fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n          </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n         <!-- Footer Template starts -->\\n         <ngx-datatable-footer>\\n          <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n            let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n            <div class=\\\"page-count\\\">\\n              <span *ngIf=\\\"selectedCount\\\">\\n                {{selectedCount.toLocaleString()}} Selected |\\n              </span>\\n              Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n              (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n              {{(rowCount)}} records.\\n            </div>\\n            <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n              [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\" [size]=\\\"pageSize\\\"\\n              [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\" (change)=\\\"table.onFooterPage($event)\\\">\\n            </datatable-pager>\\n          </ng-template>\\n        </ngx-datatable-footer>\\n        <!-- Footer Template Ends -->\\n\\n      </ngx-datatable>\\n  </div>\\n</div>\\n\\n<!-- Confirm Delete modal -->\\n<div class=\\\"modal\\\" id=\\\"confirmDelete\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <form name=\\\"form\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title text-primary\\\">Are you sure you want to delete</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"error\\\" class=\\\"btm-action-btn\\\"\\n            (click)=\\\"rowlevelDeleteFreight(selectedRow)\\\">Delete</button>\\n          <button type=\\\"button\\\" mat-raised-button class=\\\"mat-default\\\" color=\\\"default\\\"\\n            data-dismiss=\\\"modal\\\">Cancel</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n<!-- <ngx-datatable-column name=\\\"Base Freight Uom\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" prop=\\\"baseFreightUom\\\" [sortable]=\\\"true\\\">\\n  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n    {{row.baseFreightUom}}\\n  </ng-template>\\n</ngx-datatable-column>\\n\\n<ngx-datatable-column name=\\\"Approval1 User\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" prop=\\\"approval1User\\\" [sortable]=\\\"true\\\">\\n  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n    {{row.approval1User}}\\n  </ng-template>\\n</ngx-datatable-column>\\n<ngx-datatable-column name=\\\"Approval1 Date\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" prop=\\\"Approval1Date\\\" [sortable]=\\\"true\\\">\\n  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n    {{row.Approval1Date}}\\n  </ng-template>\\n</ngx-datatable-column>\\n<ngx-datatable-column name=\\\"Approval2 User\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" prop=\\\"Approval2User\\\" [sortable]=\\\"true\\\">\\n  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n    {{row.Approval2User}}\\n  </ng-template>\\n</ngx-datatable-column>\\n\\n<ngx-datatable-column name=\\\"Approval2 Date\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" prop=\\\"Approval2Date\\\" [sortable]=\\\"true\\\">\\n  <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n    {{row.Approval2Date}}\\n  </ng-template>\\n</ngx-datatable-column> -->\\n\\n\\n\\n\\n <!--  -->\\n\\n        <!-- <ngx-datatable-column name=\\\"Status\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"Status\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.Status}}\\n          </ng-template>\\n        </ngx-datatable-column> -->\\n       \\n        <!-- <ngx-datatable-column name=\\\"Status\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n            <button class=\\\"theme-small-button btn\\\" matTooltip=\\\"Modify Item\\\" (click)=\\\"modifyItem(row)\\\" [disabled]=\\\"(row.isError)\\\">\\n              <i class=\\\"fa fa-refresh fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n          </ng-template>\\n        </ngx-datatable-column> -->\\n\\n\\n <!-- <ngx-datatable-column name=\\\"Dest Desc\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"destDesc\\\" [sortable]=\\\"true\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-tte'] = true\\\" *ngIf=\\\"!editing[rowIndex + '-tte']\\\">\\n              <span class=\\\"edit-label\\\">{{row.destDesc}}\\n              </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"editing[rowIndex+ '-tte']\\\">\\n              <input matInput (blur)=\\\"updateValue(row, $event, 'tte', rowIndex)\\\" [value]=\\\"row.tte\\\" autofocus>\\n            </mat-form-field>\\n          </ng-template>\\n        </ngx-datatable-column> -->\\n\\n        <!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"integrationMsgModal\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\" >Remarks</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p >{{remarks}}</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <!-- <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"saveComments()\\\">Save</button> -->\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hc3RlcnMvZnJlaWdodC9tdC1mcmVpZ2h0L210LWZyZWlnaHQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiserviceService } from 'src/app/services/api/apiservice.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as XLSX from 'xlsx';\nimport { NgForm } from '@angular/forms';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport * as moment from 'moment';\nimport { constants } from 'src/app/constants';\nimport { HelperServiceService } from 'src/app/services/helper-service/helper-service.service';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-mt-freight',\n  templateUrl: './mt-freight.component.html',\n  styleUrls: ['./mt-freight.component.scss']\n})\nexport class MtFreightComponent implements OnInit {\n\n  isLoading: boolean = false;\n  isShow: boolean = true;\n\n\n  //filter elements \n  transporterSapCode: any = \"\";\n  servprov: any = \"\";\n  sourceLoc: any = \"\";\n  sourceDesc: any = \"\";\n  destLoc: any = \"\";\n  destDesc: any = \"\";\n  truckType: any = \"\";\n  condition1: any = \"\";\n  effectiveDate: any = '';\n  indentDate = '';\n  formattedDate: string;\n  expiryDate: any = \"\";\n  ttDays: any = \"\";\n  baseFreight: any = \"\";\n  status: any = \"Level2 Approved\";\n  statusList = [{ val: \"Unapproved\" }, { val: \"Level1 Approved\" }, { val: \"Level2 Approved\" }]\n\n  rateType: any = \"\";\n  loading: any = \"\";\n  unloading: any = \"\";\n  others1: any = \"\";\n  others1Code: any = \"\";\n  others2: any = \"\";\n  others2Code: any = \"\";\n  others3: any = \"\";\n  others3Code: any = \"\";\n\n  distance: any = \"\";\n  totExpense: any = \"\";\n  payTransporter: any = \"\";\n  sourceType: any = \"\";\n  selected = [];\n  fromInsertDate: string = '';\n  toInsertDate: string = '';\n  fromInsert: string = '';\n  toInsert: string = '';\n\n\n  page = {\n    limit: 200,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n\n  mtFreightList: any[];\n  mtFreightCheckedList = [];\n  editing = {};\n  buttonLable = \"\";\n  isCheckedAll: boolean = false;\n  allRowsSelected: boolean = false;\n  currentPageIndex: number = 0;\n\n  totalRecords: number;\n  totalErrorRecords: number;\n  gotResponse: boolean = false;\n  responseData = '';\n  minRecordIndex: number = 0;\n  maxRecordIndex: number = 0;\n  ErrorData: any;\n  disableButton: string;\n  isDisable: boolean = true;\n  displayBtn: boolean = false;\n  isL1Manager: boolean = false;\n  isL2Manager: boolean = false;\n\n  showToAndFromExpDate: boolean = false;\n  fromExpiryDate:any = null;\n  toExpiryDate:any = null;\n  filterExpiryDate:any = null;\n  currentDateAsString = this.helperService.getTodayDateASString();\n\n\n  expiryDateFilterList: { \"key\": string; \"value\": string; }[];\n\n\n  userRole: string = '';\n  index: number;\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  selectedExpiryDate: any;\n  selectedRow: any;\n  remarks: any;\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService,\n    private helperService: HelperServiceService,\n  ) { }\n\n  ngOnInit() {\n    this.expiryDateFilterList = constants.freightExpiryDateFilterList;\n    localStorage.setItem(\"userMenu\", \"freight-master\");\n    this.userRole = localStorage.getItem('role');\n    if (this.userRole === \"L1_MGR\") {\n      this.isL1Manager = true;\n      this.status = \"Unapproved\";\n      localStorage.setItem(\"userMenu\", \"fgs-freight\");\n    }\n\n    if (this.userRole === \"L2_MGR\") {\n      this.isL2Manager = true;\n      this.status = \"Level1 Approved\";\n      localStorage.setItem(\"userMenu\", \"fgs-freight\");\n    }\n\n    this.index = this.page.offset;\n\n    console.log(this.userRole)\n    // this.doSearchFilter(); \n    // L1MGR L2MGR  L2_MGR L1_MGR  status\n  }\n\n  setDefaultStatus() {\n    if (this.userRole === \"L1_MGR\") {\n      this.isL1Manager = true;\n      this.status = \"Unapproved\";\n    }\n\n    if (this.userRole === \"L2_MGR\") {\n      this.isL2Manager = true;\n      this.status = \"Level1 Approved\";\n    }\n  }\n\n  // Datatable footer\n  onFooterPage(pageInfo) {\n    console.log(pageInfo);\n\n  }\n\n\n  //show the filter\n  showFilter() {\n    this.isShow = !this.isShow\n  }\n\n\n  minDate = new Date();\n  // formattedDate: string;\n  //formatting the date from datepicker \n\n  formateDate(data) {\n    console.log(data)\n    if (data != null && data) {\n      let formatted = new Date(data),\n        mnth = (\"0\" + (formatted.getMonth() + 1)).slice(-2),\n        day = (\"0\" + formatted.getDate()).slice(-2);\n      this.formattedDate = [day, this.getMonth(mnth), formatted.getFullYear()].join(\"-\");\n      this.effectiveDate = this.formattedDate;\n      console.log(this.effectiveDate + \"  formattedDate effectiveDate\")\n      return this.formateDate;\n    } else {\n      this.effectiveDate = \"\";\n    }\n  }\n\n  formateDateFromInsert(data) {\n    console.log(data)\n    if (data != null && data) {\n      let formatted = new Date(data),\n        mnth = (\"0\" + (formatted.getMonth() + 1)).slice(-2),\n        day = (\"0\" + formatted.getDate()).slice(-2);\n      this.formattedDate = [day, this.getMonth(mnth), formatted.getFullYear()].join(\"-\");\n      this.fromInsertDate = this.formattedDate;\n      console.log(this.fromInsertDate + \"  formattedDate effectiveDate\")\n      return this.formateDate;\n    } else {\n      this.fromInsertDate = \"\";\n    }\n  }\n\n  formateDateToInsert(data) {\n    console.log(data)\n    if (data != null && data) {\n      let formatted = new Date(data),\n        mnth = (\"0\" + (formatted.getMonth() + 1)).slice(-2),\n        day = (\"0\" + formatted.getDate()).slice(-2);\n      this.formattedDate = [day, this.getMonth(mnth), formatted.getFullYear()].join(\"-\");\n      this.toInsertDate = this.formattedDate;\n      console.log(this.toInsertDate + \"  formattedDate effectiveDate\")\n      return this.formateDate;\n    } else {\n      this.toInsertDate = \"\";\n    }\n  }\n\n\n  trimDate(date) {\n    if (date === \"\" || date === undefined)\n      return \"\";\n    else\n      var array = date.substring(0, 10).split(\"-\");\n    return array[2] + \"-\" + this.getMonth(array[1]) + \"-\" + array[0];\n  }\n\n  getMonth(number) {\n    return this.month_names[number]\n  }\n  month_names = {\n    \"01\": \"Jan\",\n    \"02\": \"Feb\",\n    \"03\": \"Mar\", \"04\": \"Apr\", \"05\": \"May\", \"06\": \"Jun\", \"07\": \"Jul\", \"08\": \"Aug\", \"09\": \"Sep\", \"10\": \"Oct\", \"11\": \"Nov\", 12: \"Dec\"\n  };\n\n\n  trimEmpty(val) {\n\n    if (val === \"\" || val === undefined)\n      return \"\";\n    else {\n      console.log(typeof val)\n      console.log(val + \"----\" + val.length);\n      // return val.trim();\n    }\n\n  }\n\n  // Pagination\n  datatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    this.selected = [];\n    this.index = pageInfo.offset;\n    let data = {\n      transporterSapCode: this.transporterSapCode,\n      servprov: this.servprov,\n      sourceLoc: this.sourceLoc,\n      sourceDesc: this.sourceDesc,\n      destLoc: this.destLoc,\n      destDesc: this.destDesc,\n      truckType: this.truckType,\n      condition1: this.condition1,\n      effectiveDate: this.effectiveDate,\n      expiryDate: this.expiryDate ? moment(new Date(this.expiryDate)).format(\"DD-MM-YYYY\") : null,\n      ttDays: this.ttDays,\n      baseFreight: this.baseFreight,\n      status: this.status,\n      index: this.index,\n      pageLength: this.page.limit,\n      // toInsertDate:this.toInsertDate,\n      // fromInsertDate : this.fromInsertDate,\n      toInsertDate: this.toInsertDate ? moment(new Date(this.toInsertDate)).format(\"DD-MM-YYYY\") : null,\n      fromInsertDate: this.fromInsertDate ? moment(new Date(this.fromInsertDate)).format(\"DD-MM-YYYY\") : null,\n      expiryDateFilterType:this.filterExpiryDate,\n      fromExpiryDate : this.fromExpiryDate ? moment(new Date(this.fromExpiryDate)).format(\"DD-MM-YYYY\") : null,\n      toExpiryDate : this.toExpiryDate ? moment(new Date(this.toExpiryDate)).format(\"DD-MM-YYYY\") : null,\n    }\n\n    //isL1Manager isL1Manager\n    this.displayBtn = true;\n\n\n    if (this.isL1Manager == true) {\n      if (this.status && this.status != null && this.status != '') {\n        if (this.status === \"Unapproved\") {\n          this.buttonLable = \"L1 Approve\"\n          this.displayBtn = true;\n        }\n        else if (this.status === \"Level1 Approved\") {\n          this.buttonLable = \"L2 Approve\"\n          this.displayBtn = false;\n        }\n        else if (this.status === \"Level2 Approved\") {\n          this.isDisable = false;\n          this.displayBtn = false;\n        }\n      } else {\n        this.displayBtn = false;\n      }\n\n    }\n\n    if (this.isL2Manager == true) {\n      if (this.status && this.status != null && this.status != '') {\n        if (this.status === \"Unapproved\") {\n          this.displayBtn = false;\n        }\n        else if (this.status === \"Level1 Approved\") {\n          this.buttonLable = \"L2 Approve\"\n          this.displayBtn = true;\n        }\n\n        else if (this.status === \"Level2 Approved\") {\n          // this.buttonLable=\"L2 Approved\"\n          // this.disableButton=\"disabled\";\n          // this.isDisable=true;\n          this.displayBtn = false;\n        }\n      } else {\n        this.displayBtn = false;\n      }\n    }\n    this.searchFilter(data);\n  }\n\n\n\n\n\n  // condition1: any = \"\";\n\n  effDate: any = \"\";\n  exppDate: any = \"\";\n\n  // export to excel file\n  export() {\n    this.isLoading = true;\n    // this.page.limit = this.page.count;\n\n    let data = {\n      transporterSapCode: this.transporterSapCode,\n      servprov: this.servprov,\n      sourceLoc: this.sourceLoc,\n      sourceDesc: this.sourceDesc,\n      destLoc: this.destLoc,\n      destDesc: this.destDesc,\n      truckType: this.truckType,\n      condition1: this.condition1,\n      effectiveDate: this.effectiveDate,\n      expiryDate: this.expiryDate ? moment(new Date(this.expiryDate)).format(\"DD-MM-YYYY\") : null,\n      ttDays: this.ttDays,\n      baseFreight: this.baseFreight,\n      status: this.status,\n      // pageLength: this.page.count < this.service.maxPageLengthForExcel ? this.page.count : this.service.maxPageLengthForExcel,\n      pageLength: this.page.count,\n      // toInsertDate:this.toInsertDate,\n      // fromInsertDate : this.fromInsertDate,\n      toInsertDate: this.toInsertDate ? moment(new Date(this.toInsertDate)).format(\"DD-MM-YYYY\") : null,\n      fromInsertDate: this.fromInsertDate ? moment(new Date(this.fromInsertDate)).format(\"DD-MM-YYYY\") : null,\n      expiryDateFilterType:this.filterExpiryDate,\n      fromExpiryDate : this.fromExpiryDate ? moment(new Date(this.fromExpiryDate)).format(\"DD-MM-YYYY\") : null,\n      toExpiryDate : this.toExpiryDate ? moment(new Date(this.toExpiryDate)).format(\"DD-MM-YYYY\") : null,\n    }\n    this.service.post_service(ApiserviceService.apisList.getFreights, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let mtItemData = response['data'].freights;\n        console.log(\"mtItemData:  \" + mtItemData);\n        let excelRawData = mtItemData;\n        let newExcelData = [];\n        for (let i = 0; i < excelRawData.length; i++) {\n\n          //this.effDate = excelRawData[i].effectiveDate;  \n          //this.effDate = this.formateDate(this.effDate);  \n          //this.exppDate = excelRawData[i].expiryDate;\n          //this.exppDate = this.formateDate(this.exppDate);\n          console.log(\"**************eff Date: \" + this.effDate + \"  \" + this.exppDate);\n\n          // private String laneCode;\n\n          //\n          let data = {\n\n            \"Servprov\": excelRawData[i].servprov,\n            \"Source Loc\": excelRawData[i].sourceLoc,\n            \"Dest Loc\": excelRawData[i].destLoc,\n            \"Truck Type\": excelRawData[i].truckType,\n            \"variant 1\": excelRawData[i].variant1,\n            \"Freight\": excelRawData[i].baseFreight,\n            \"Curr\": excelRawData[i].baseFreightUom,\n            \"Basis\": excelRawData[i].basis,\n            \"Status\": excelRawData[i].status,\n            \"Prev Rate\": excelRawData[i].previousRate,\n            \"Diff\": excelRawData[i].diff,\n            \"Percentage (%)\": excelRawData[i].percentile,\n            \"Eff Date\": excelRawData[i].effectiveDate ? this.trimDate(excelRawData[i].effectiveDate) : null,\n            \"Exp Date\": excelRawData[i].expiryDate ? this.trimDate(excelRawData[i].expiryDate) : null,\n            \"TT Days\": excelRawData[i].ttDays,\n            \"Distance\": excelRawData[i].distance,\n            \"variant 2\": excelRawData[i].variant2,\n            \"Rate Type\": excelRawData[i].rateType,\n            \"Loading\": excelRawData[i].loading,\n            \"UnLoading\": excelRawData[i].unloading,\n            \"Sap Code\": excelRawData[i].transporterSapCode,\n            \"Source Desc\": excelRawData[i].sourceDesc,\n            \"Dest Desc\": excelRawData[i].destDesc,\n            \"Min Value\": excelRawData[i].minValue,\n            \"Min Value Uom\": excelRawData[i].minValueUom,\n            \"Mode\": excelRawData[i].transportMode,\n            \"Src Type\": excelRawData[i].sourceType,\n            \"Others1\": excelRawData[i].others1,\n            \"Tot Expense\": excelRawData[i].totExpense,\n            \"Pay Transporter\": excelRawData[i].payTransporter,\n            \"Others1 Code\": excelRawData[i].others1Code,\n            \"Others2\": excelRawData[i].others2,\n            \"Others2 Code\": excelRawData[i].others2Code,\n            \"Others3\": excelRawData[i].others3,\n            \"Others3 Code\": excelRawData[i].others3Code,\n            \"Insert User\": excelRawData[i].insertUser,\n            \"Insert Date\": excelRawData[i].insertDate ? this.trimDate(excelRawData[i].insertDate) : null,\n            \"Approval L1 Date\": excelRawData[i].approval1Date ? this.trimDate(excelRawData[i].approval1Date) : null,\n            \"Approval L2 Date\": excelRawData[i].approval2Date ? this.trimDate(excelRawData[i].approval2Date) : null,\n            \"Remarks\" : excelRawData[i].remarks\n            // \"Lane Code\": excelRawData[i].laneCode,\n            // \"Approval1 User\": excelRawData[i].approval1User,\n            // \"Approval2 User\": excelRawData[i].approval2User,\n            // \"Update User\": excelRawData[i].updateUser,\n            // \"Update Date\": excelRawData[i].updateDate,\n            // \"Rate Record Id\": excelRawData[i].rateRecordId,\n\n          }\n          console.log(\"PUSH:  \" + data);\n          newExcelData.push(data)\n        }\n        const workBook = XLSX.utils.book_new(); // create a new blank book\n        const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n        XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n        XLSX.writeFile(workBook, 'Mt-Freight.xlsx');\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n  // Refresh data\n  refreshData() {\n    this.isLoading = true;\n    this.clearAll();\n    this.index = 0;\n    this.page.offset = 0;\n    this.table.offset = 0;\n    this.setDefaultStatus();\n    this.selected = [];\n    let data = {\n      transporterSapCode: this.transporterSapCode,\n      servprov: this.servprov,\n      sourceLoc: this.sourceLoc,\n      sourceDesc: this.sourceDesc,\n      destLoc: this.destLoc,\n      destDesc: this.destDesc,\n      truckType: this.truckType,\n      condition1: this.condition1,\n      effectiveDate: this.effectiveDate,\n      expiryDate: this.expiryDate,\n      ttDays: this.ttDays,\n      baseFreight: this.baseFreight,\n      status: this.status,\n      index: this.index,\n      pageLength: this.page.limit,\n    }\n\n    //isL1Manager isL1Manager\n    this.displayBtn = true;\n\n\n    if (this.isL1Manager == true) {\n      if (this.status && this.status != null && this.status != '') {\n        if (this.status === \"Unapproved\") {\n          this.buttonLable = \"L1 Approve\"\n          this.displayBtn = true;\n        }\n        else if (this.status === \"Level1 Approved\") {\n          this.buttonLable = \"L2 Approve\"\n          this.displayBtn = false;\n        }\n        else if (this.status === \"Level2 Approved\") {\n          this.isDisable = false;\n          this.displayBtn = false;\n        }\n      } else {\n        this.displayBtn = false;\n      }\n    }\n\n    if (this.isL2Manager == true) {\n      if (this.status && this.status != null && this.status != '') {\n\n        if (this.status === \"Unapproved\") {\n          this.displayBtn = false;\n        }\n        else if (this.status === \"Level1 Approved\") {\n          this.buttonLable = \"L2 Approve\"\n          this.displayBtn = true;\n        }\n\n        else if (this.status === \"Level2 Approved\") {\n          // this.buttonLable=\"L2 Approved\"\n          // this.disableButton=\"disabled\";\n          // this.isDisable=true;\n          this.displayBtn = false;\n        }\n      } else {\n        this.displayBtn = false;\n      }\n    }\n    this.searchFilter(data);\n    // let data = {\n    //   transporterSapCode: this.transporterSapCode,\n    //   servprov: this.servprov,\n    //   sourceLoc: this.sourceLoc,\n    //   sourceDesc: this.sourceDesc,\n    //   destLoc: this.destLoc,\n    //   destDesc: this.destDesc,\n    //   truckType: this.truckType,\n    //   condition1: this.condition1,\n    //   effectiveDate: this.effectiveDate,\n    //   expiryDate: this.expiryDate,\n    //   ttDays: this.ttDays,\n    //   baseFreight: this.baseFreight,\n    //   status: this.status,\n    //   index : this.index\n    // }\n    // this.service.post_service(ApiserviceService.apisList.getFreights, data).subscribe(response => {\n    //   if (response['statusCode'] == 200) {\n    //     this.mtFreightList = [];\n    //     let responseData = response['data'].items;\n    //     this.mtFreightList = responseData;\n    //     this.mtFreightList = [...this.mtFreightList];\n    //     this.page.count = response['data'].total;\n    //     // this.page.limit = response['data'].pageLength;\n    //     this.isLoading = false;\n    //   } else {\n    //     this.isLoading = false;\n    //     this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n    //   }\n    // }, (err) => {\n    //   this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    //   this.isLoading = false;\n    // })\n\n  }\n\n\n\n\n  doSearchFilter() {\n    this.displayBtn = false;\n    this.isCheckedAll = false;\n    this.isDisable = false;\n    this.buttonLable = \"\";\n    this.selected = [];\n    this.table.offset = 0;\n    this.page.offset = 0;\n    this.index = 0;\n    //this.page.offset=0;\n    console.log(\" PAGE DETAILS***********\" + JSON.stringify(this.page));\n    console.log(\" PAGE DETAILS page.offset***********\" + JSON.stringify(this.page.offset));\n    // console.log(\"status:  \"+this.status);\n    let data = {\n      transporterSapCode: this.transporterSapCode,\n      servprov: this.servprov,\n      sourceLoc: this.sourceLoc,\n      sourceDesc: this.sourceDesc,\n      destLoc: this.destLoc,\n      destDesc: this.destDesc,\n      truckType: this.truckType,\n      condition1: this.condition1,\n      effectiveDate: this.effectiveDate,\n      expiryDate: this.expiryDate ? moment(new Date(this.expiryDate)).format(\"DD-MM-YYYY\") : null,\n      ttDays: this.ttDays,\n      baseFreight: this.baseFreight,\n      status: this.status,\n      index: this.index,\n      pageLength: this.page.limit,\n      // toInsertDate:this.toInsertDate,\n      // fromInsertDate : this.fromInsertDate,\n      toInsertDate: this.toInsertDate ? moment(new Date(this.toInsertDate)).format(\"DD-MM-YYYY\") : null,\n      fromInsertDate: this.fromInsertDate ? moment(new Date(this.fromInsertDate)).format(\"DD-MM-YYYY\") : null,\n      expiryDateFilterType:this.filterExpiryDate,\n      fromExpiryDate : this.fromExpiryDate ? moment(new Date(this.fromExpiryDate)).format(\"DD-MM-YYYY\") : null,\n      toExpiryDate : this.toExpiryDate ? moment(new Date(this.toExpiryDate)).format(\"DD-MM-YYYY\") : null,\n    }\n\n    //isL1Manager isL1Manager\n    this.displayBtn = true;\n\n\n    if (this.isL1Manager == true) {\n      if (this.status && this.status != null) {\n        if (this.status === \"Unapproved\") {\n          this.buttonLable = \"L1 Approve\"\n          this.displayBtn = true;\n        }\n        else if (this.status === \"Level1 Approved\") {\n          this.buttonLable = \"L2 Approve\"\n          this.displayBtn = false;\n        }\n        else if (this.status === \"Level2 Approved\") {\n          this.isDisable = false;\n          this.displayBtn = false;\n        }\n      } else {\n        this.displayBtn = false;\n      }\n    }\n\n    if (this.isL2Manager == true) {\n      if (this.status && this.status != null) {\n        if (this.status === \"Unapproved\") {\n          this.displayBtn = false;\n        }\n        else if (this.status === \"Level1 Approved\") {\n          this.buttonLable = \"L2 Approve\"\n          this.displayBtn = true;\n        }\n\n        else if (this.status === \"Level2 Approved\") {\n          // this.buttonLable=\"L2 Approved\"\n          // this.disableButton=\"disabled\";\n          // this.isDisable=true;\n          this.displayBtn = false;\n        }\n      } else {\n        this.displayBtn = false;\n      }\n    }\n    let insertFilter : boolean = false\n    let expiryFilter : boolean = false\n    if (this.fromInsertDate != '' && this.fromInsertDate != null) {\n      if (this.toInsertDate != '' && this.toInsertDate != null) {\n        insertFilter = true;\n      } else {\n        this.toastr.error(\"Please select to Date\");\n        insertFilter = false;\n      }\n    } else {\n      insertFilter = true;\n    }\n\n    if (this.fromExpiryDate != '' && this.fromExpiryDate != null) {\n      if (this.toExpiryDate != '' && this.toExpiryDate != null) {\n        expiryFilter = true;\n      } else {\n        this.toastr.error(\"Please select to Date\");\n        expiryFilter = false;\n      }\n    } else {\n      expiryFilter = true;\n    }\n\n    if(insertFilter && expiryFilter){\n      this.searchFilter(data)\n    }\n\n  }\n\n  searchFilter(data) {\n    this.isLoading = true;\n    this.mtFreightList = [];\n    console.log(\"SUMBMITTING FILTER DATA:  \\n \" + JSON.stringify(data));\n    console.log(\" PAGE DETAILS***********\" + JSON.stringify(this.page));\n    this.service.post_service(ApiserviceService.apisList.getFreights, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        // console.log(\"Error\", err);\n        this.mtFreightList = response['data'].freights;\n        let responseArray = [...response['data'].freights];\n        this.page.count = response['data'].total;\n        // Formating the  expiry date\n        responseArray.forEach(element => {\n          // Find the index to update\n          let index = this.mtFreightList.findIndex(ele => element.id == ele.id);\n          // add new column in the object \"selectedExpiryDate\" for date autopopulate for datepicker\n          let gettheDate = element.expiryDate;\n          if (gettheDate != null && gettheDate != '') {\n            // let splittedData = gettheDate.split(\"/\");\n            // let createNewDate = splittedData[1] + \"/\" + splittedData[0] + \"/\" + splittedData[2];\n            let dateFormat = new Date(gettheDate);\n            element.selectedExpiryDate = dateFormat.toISOString();\n            if (index > -1) {\n              this.mtFreightList[index] = element;\n            }\n          }\n        });\n        this.mtFreightList = [...this.mtFreightList];\n        //  console.log(\"FRIEGHTS LIST: \"+this.mtFreightList);\n        console.log(\"FRIEGHTS LIST: \" + JSON.stringify(this.mtFreightList));\n        this.isLoading = false;\n      } else {\n        this.toastr.error(\"Didnot get response..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n\n\n  // clear data\n  clearAll() {\n    this.transporterSapCode = '';\n    this.servprov = \"\";\n    this.sourceLoc = \"\";\n    this.sourceDesc = '';\n    this.destLoc = '';\n    this.destDesc = '';\n    this.truckType = '';\n    this.condition1 = '';\n    this.effectiveDate = '';\n    this.expiryDate = '';\n    this.ttDays = '';\n    this.baseFreight = '';\n    this.status = '';\n    this.toInsertDate = '';\n    this.fromInsertDate = '';\n    this.toInsert = '';\n    this.fromInsert = '';\n    this.indentDate = '';\n    this.filterExpiryDate = null;\n    this.fromExpiryDate = null;\n    this.toExpiryDate = null;\n    this.showToAndFromExpDate = false;\n    /* if (this.userRole === \"L1_MGR\") {\n      this.status = \"Unapproved\";\n    }else if (this.userRole === \"L2_MGR\") {\n      this.status = \"Level1 Approved\";\n    }else{\n      this.status = \"Level2 Approved\";\n    } */\n  }\n\n  showExpiryDate(){\n    if(this.filterExpiryDate && this.filterExpiryDate == 'BETWEEN'){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n\n\n\n\n\n  updateValue(row, event, cell, rowIndex) {\n    console.log('inline editing rowIndex', rowIndex);\n    let mtItemIndex = this.mtFreightList.findIndex(data => data.id == row.id)\n    console.log(cell);\n    this.mtFreightList[mtItemIndex][cell] = event.target.value;\n\n    this.mtFreightList = [...this.mtFreightList];\n    console.log('UPDATED!', this.mtFreightList);\n  }\n\n  setPage(pageInfo) {\n    this.allRowsSelected = false;\n    this.isCheckedAll = false;\n    this.currentPageIndex = pageInfo.offset;\n    console.log(\"***\" + JSON.stringify(pageInfo));\n  }\n\n  // selectAllRows(event){\n  //   if(event.target.checked) {\n  //     this.isCheckedAll=true;\n  //     console.log(\"...Current Page Number \"+this.currentPageIndex);\n  //   } else{\n  //     this.isCheckedAll=false;\n  //    // console.log(\"...un checked \" +this.isCheckedAll);\n  //   }\n  // }\n\n  // //USER ROW SELECTION SUBMITION\n  // modifyFreightItem(row, event) {\n  //   console.log(\"EVENT ROW: \"+JSON.stringify(row));\n  //   console.log(\"---------------\" +this.mtFreightCheckedList);\n  //   if(event.target.checked) {\n  //     if(this.selectionSubmitFlag){\n  //       this.mtFreightCheckedList=[];\n  //       this.selectionSubmitFlag=false;\n  //     }\n  //     console.log(\"...checked \"+row.id);\n  //      if(this.mtFreightCheckedList.length>0){\n  //        for(var i=0 ; i < this.mtFreightCheckedList.length; i++) {\n  //          if(this.mtFreightCheckedList[i].id!=row.id){\n  //            this.mtFreightCheckedList.push(row);\n  //         }\n  //        }\n  //      }\n  //      else{\n  //       this.mtFreightCheckedList.push(row);\n  //      }\n  //   } else{\n  //     console.log(\"...un checked \" +row.id);\n  //     if(this.mtFreightCheckedList.length>0){\n  //       for(var i=0 ; i < this.mtFreightCheckedList.length; i++) {\n  //         if(this.mtFreightCheckedList[i].id===row.id){\n  //           this.mtFreightCheckedList.splice(i,1);\n  //       }\n  //       }\n  //     }\n  //   }\n  //   console.log(\"---------------\" +this.mtFreightCheckedList.length);\n  //   //this.callAPI(this.mtFreightCheckedList);\n  // }\n\n  onSelect(event, data) {\n    if (event.target.checked) {\n      // if the checkbox checked we need update plan Qty based on the status\n      // if the status  APPROVAL PENDING  we need populate Plan Qty\n      // if the sattus  APPROVAL_PART we need update only UnAppr QTY\n\n      this.mtFreightCheckedList.push(data);\n    } else {\n      let index = this.mtFreightCheckedList.indexOf(data);\n      this.mtFreightCheckedList.splice(index, 1);\n    }\n    console.log(\"select\", this.mtFreightCheckedList);\n\n  }\n  onSelectAll(event) {\n    this.mtFreightCheckedList = [];\n    this.mtFreightList.forEach(data => {\n      this.onSelect(event, data);\n    });\n    console.log(\"select All\", this.mtFreightCheckedList);\n\n  }\n\n\n\n\n  selectionSubmitFlag: boolean = false;\n  // MULTI SUBMITION\n  approveStatusSubmit(submitSelectionLabel) {\n    this.isLoading = true;\n\n    this.minRecordIndex = 0;\n    this.maxRecordIndex = 0;\n    console.log(\"***** SUBMITTING SELECTED RECORDS  \" + submitSelectionLabel);\n\n    //SELECT ALL OPTION\n    if (this.isCheckedAll) {\n      this.mtFreightCheckedList = [];\n      if (this.currentPageIndex === 0) {\n        this.minRecordIndex = 0;\n        this.maxRecordIndex = this.page.limit;\n      } else {\n        this.minRecordIndex = this.currentPageIndex * this.page.limit;\n        this.maxRecordIndex = this.minRecordIndex + this.page.limit;\n      }\n      this.mtFreightCheckedList = this.mtFreightList.slice(this.minRecordIndex, this.maxRecordIndex);\n      this.callAPI(this.mtFreightCheckedList, submitSelectionLabel);\n\n    }\n\n    // CUSTOM SELECTED ROWS LIST\n    else {\n      this.callAPI(this.mtFreightCheckedList, submitSelectionLabel);\n    }\n    this.selectionSubmitFlag = true;\n  }\n\n\n\n\n  callAPI(freightsList, submitSelectionLabel) {\n    console.log(\"call api function selected records: \" + freightsList.length)\n\n    for (var i = 0; i < freightsList.length; i++) {\n      // delete freightsList[i].test.id;\n      if (submitSelectionLabel === \"L1 Approve\")\n        freightsList[i].status = \"Level1 Approved\";\n      if (submitSelectionLabel === \"L2 Approve\")\n        freightsList[i].status = \"Level2 Approved\";\n      if (submitSelectionLabel === \"L2 Approved\")\n        this.disableButton = \"disabled\"\n      //console.log(\"UPDATED JSON \"+JSON.stringify(freightsList[i]))\n      // if(submitSelectionLabel===\"L2 Approved \")\n      // this.mtFreightCheckedList[i].status=\"L1 Approved\";\n    }\n\n    let freightData = {\n      freights: freightsList\n    }\n    console.log(\"SUBMITTING freightData\", JSON.stringify(freightData));\n    this.service.post_service(ApiserviceService.apisList.updateFreight, freightData).subscribe(response => {\n\n      // this.planData = JSON.stringify(this.responseData);\n      console.log(\"RESPONSE CODE\", response['statusCode']);\n      if (response['statusCode'] == 200) {\n        this.responseData = response['data'];\n        console.log(\"resposne\", this.responseData);\n        this.toastr.success(response['message']);\n        this.totalRecords = this.responseData['totalRecords'];\n        this.refreshData();\n        console.log(\"totalRecords \" + this.totalRecords);\n        this.gotResponse = true;\n        if (this.ErrorData != undefined && this.ErrorData.length > 0) {\n          this.totalErrorRecords = this.ErrorData.length;\n          console.log(\"ErrorData \" + this.ErrorData.length);\n        }\n        // this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        //this.openDialog(response['data'])\n        this.ErrorData = response['data'];\n      }\n\n      this.mtFreightCheckedList = [];\n    },\n      (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(\"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n  }\n\n  isShowDeleteFreight(row) {\n    if ((this.userRole === \"L1_MGR\") || (this.userRole === \"L2_MGR\") || (this.userRole === \"ADMIN\")) {\n      // Once L2 is approved the freight and some one modified the fretaight details then status will be Unapproved \n      // but the record cannot be deleted becoz the record is already stored in OTM/SAP\n      // So once the record is approved by L2 it cannot be deleted but it can be modified\n      if (row.status !== 'Level2 Approved' && (row.approval2User === null || row.approval2User === '')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  addEvent(type, event) {\n    if (event.target.value) {\n      /* Checking if selected from date greater than to date.\n     Clearing the toDate field when from date greater than to date */\n      if (this.toInsertDate && (this.fromInsertDate > this.toInsertDate)) {\n        this.toInsertDate = '';\n      }\n    }\n  }\n\n  addEventExpDate(type, event) {\n      console.log(event.value)\n      console.log(\"------>To Date\", this.toExpiryDate);\n      let checkToDate: any = this.toExpiryDate;\n      console.log(\"Check--->1\", checkToDate);\n      if (this.toExpiryDate == this.currentDateAsString) {\n        // on page load we are defaluting the  to date with string. Comparing string with date is not possible\n        // If toDate is equal to currentDate then chagetingthe checkDate to new Date() otherwise defaulting with toDate\n        checkToDate = new Date();\n        console.log(\"Check--->2\", checkToDate);\n  \n      }\n      /* Checking if selected from date greater than to date.\n      Clearing the toDate field when from date greater than to date */\n      if (event.target.value) {\n        if (this.toExpiryDate && (this.fromExpiryDate > checkToDate)) {\n          this.toExpiryDate = '';\n        }\n      }\n      // this.toDate = '';\n  }\n\n  expiryFilterType(key){\n    if(key && key == 'BETWEEN'){\n      this.showToAndFromExpDate = true;\n    }else{\n      this.showToAndFromExpDate = false;\n    }\n  }\n\n  rowlevelDeleteFreight(row) {\n    if (row.status === \"Level2 Approved\") {\n      this.toastr.error(\"You cannot delete the record as it is already approved by L2_MGR!\", \"Error!\");\n    }\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.deleteFreight + '?rowId=' + row.id).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        var deletedRow = response['data'];\n        let index = this.mtFreightList.findIndex(item => item.id == deletedRow);\n        this.mtFreightList.splice(index, 1);\n        this.mtFreightList = [...this.mtFreightList]\n        this.toastr.success(response['message'] ? response['message'] : 'Something went wrong!');\n        this.isLoading = false;\n        $(\"#confirmDelete\").modal('hide');\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Something went wrong!', \"Error!\");\n        $(\"#confirmDelete\").modal('hide');\n        this.isLoading = false;\n      }\n    }, err => {\n      this.toastr.error('Something went wrong!', \"Error!\");\n      this.isLoading = false;\n      $(\"#confirmDelete\").modal('hide');\n    });\n\n  }\n  isActionVisible() {\n    if ((this.userRole === \"L1_MGR\") || (this.userRole === \"L2_MGR\") || (this.userRole === \"ADMIN\")) {\n      return true;\n    }\n    return false;\n  }\n\n  rowLevelModifyFreight(row) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.updateFreightDetails, row).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let updateRow = response['data'];\n        let index = this.mtFreightList.findIndex(item => item.id === updateRow.id);\n        if (index > -1) {\n          updateRow.selectedExpiryDate = updateRow.expiryDate ? new Date(updateRow.expiryDate).toISOString() : null;\n          this.mtFreightList[index] = updateRow;\n          this.editing = {};\n        }\n        this.mtFreightList = [...this.mtFreightList];\n        this.toastr.success(response['message'] ? response['message'] : 'Row updated successfully');\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Something went wrong...', 'Error!');\n        this.isLoading = false;\n      }\n    }, err => {\n      this.toastr.error(err['message'] ? err['message'] : 'Something went wrong...', 'Error!');\n      this.isLoading = false;\n    })\n  }\n  returnFormateDate(data) {\n    let formatted = new Date(data),\n      mnth = (\"0\" + (formatted.getMonth() + 1)).slice(-2),\n      day = (\"0\" + formatted.getDate()).slice(-2);\n    return [day, mnth, formatted.getFullYear()].join(\"/\");\n  }\n\n  updateExpiryDateAtRow(row, event, rowIndex) {\n    let s = { ...row };\n    if (event.target.value) {\n      console.log(event.target.value);\n      let index = this.mtFreightList.findIndex(item => item.id === s.id);\n      this.mtFreightList[index]['expiryDateString'] = this.returnFormateDate(event.target.value);\n      let splittedData = this.mtFreightList[index]['expiryDateString'].split(\"/\");\n      let createNewDate = splittedData[1] + \"/\" + splittedData[0] + \"/\" + splittedData[2]\n      this.mtFreightList[index]['selectedExpiryDate'] = new Date(createNewDate).toISOString();\n\n      // this.mtFreightList[index].expiryDateString = s.selectedExpiryDate ? moment(new Date(s.selectedExpiryDate)).format(\"DD/MM/YYYY\") : null;\n      this.mtFreightList[index].isUpdateExpiryDate = true;\n      this.mtFreightList[index].showSaveButton = true;\n    }\n    this.mtFreightList = [...this.mtFreightList];\n    console.log(\"row\", row);\n    console.log(\"list\", this.mtFreightList);\n\n\n  }\n\n  showSaveButton(event, row) {\n    if (event.target.value) {\n      row.showSaveButton = true;\n    }\n  }\n\n  formatEffectiveDate(effective) {\n    let gettheDate = this.trimDate(effective);\n    let splittedData = gettheDate.split(\"-\");\n    let createNewDate = splittedData[1] + \"/\" + splittedData[0] + \"/\" + splittedData[2]\n    // Formatted new key for autopopulation of date for datepicker\n    return new Date(createNewDate).toISOString();\n  }\n\n  confirmDeleteAction(row) {\n    this.selectedRow = { ...row };\n    $(\"#confirmDelete\").modal('show');\n  }\n\n  showIntegrationMessage(rowdata) {\n    this.remarks = rowdata.remarks;\n    $('#integrationMsgModal').modal('show');\n  }\n\n}\n\n\n\n\n\n//console.log(\"--------------- total list size \" +  this.mtFreightList.length);\n// console.log(\"---------------INITIAL LENGTH= \" +this.mtFreightCheckedList.length);\n// console.log(\"--------------- this.currentPageIndex \" + this.currentPageIndex);\n//         console.log(\"***** this.isCheckedAll IF this.minRecordIndex \"+this.minRecordIndex)\n//         console.log(\"***** this.isCheckedAll IF this.maxRecordIndex \"+this.maxRecordIndex)\n\n//else\n// console.log(\"***** this.currentPageIndex \"+this.currentPageIndex)\n//console.log(\"***** this.isCheckedAll else this.minRecordIndex \"+this.minRecordIndex)\n //       console.log(\"***** this.isCheckedAll else this.maxRecordIndex \"+this.maxRecordIndex)\n // console.log(\"---------------\" +this.mtFreightCheckedList.length);","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MtFreightComponent } from './mt-freight.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoaderModule } from '../../../public/loader/loader-shared.module';\nimport { customMaterialModule } from '../../../angular-material';\nimport { FormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nconst routes: Routes = [\n  { path: '', component: MtFreightComponent},\n];\n\n// const routes: Routes = [\n//   { path: '', component: CreateFreightComponent,canActivate:[PlannerAuthGuardService]},\n// ];\n\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    LoaderModule,\n    customMaterialModule,\n    FormsModule,\n    NgxDatatableModule\n  ],\n  declarations: [\n    MtFreightComponent\n  ],\n  entryComponents:[\n    // FileUploadErrorsDialogComponent,\n    MtFreightComponent\n   ],\n  //  providers:\n  //    [\n  //      PlannerAuthGuardService\n  //    ],\n})\nexport class MTFreightModule { }\n"],"sourceRoot":""}