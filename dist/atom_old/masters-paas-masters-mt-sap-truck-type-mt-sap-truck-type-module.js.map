{"version":3,"sources":["webpack:///./src/app/masters/paas-masters/mt-sap-truck-type/mt-sap-truck-type.component.html","webpack:///./src/app/masters/paas-masters/mt-sap-truck-type/mt-sap-truck-type.component.scss","webpack:///./src/app/masters/paas-masters/mt-sap-truck-type/mt-sap-truck-type.component.ts","webpack:///./src/app/masters/paas-masters/mt-sap-truck-type/mt-sap-truck-type.module.ts"],"names":[],"mappings":"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","file":"masters-paas-masters-mt-sap-truck-type-mt-sap-truck-type-module.js","sourcesContent":["module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"mt-item-header\\\">\\n    <b> PaaS Masters &gt; SAP Truck Type</b>\\n    <span class=\\\"pull-right refresh-span\\\">\\n        <button class=\\\"theme-small-button\\\" (click)=\\\"displayAddForm()\\\" matTooltip=\\\"Add New\\\">\\n            <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n      <!-- <button class=\\\"theme-small-button\\\" [routerLink]=\\\"['/admin/paas-masters/upload-mt-sap-truck-type']\\\" matTooltip=\\\"Upload excel\\\">\\n        <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i>\\n      </button> -->\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n\\n\\n\\n\\n<div class=\\\"mt-item-fields\\\" *ngIf=\\\"isShow\\\">\\n  <div class=\\\"col-md-12 row\\\">\\n    <div class=\\\"col-md-12 padding-right-40\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 pd-0\\\">\\n          <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field>\\n                        <input matInput placeholder=\\\"SAP Truck Type\\\" [(ngModel)]=\\\"sapTruckType\\\" name=\\\"sapTruckType\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field>\\n                        <input matInput placeholder=\\\"SAP Truck Type Desc\\\" [(ngModel)]=\\\"sapTruckTypeDesc\\\" name=\\\"sapTruckTypeDesc\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"PaaS Truck Type\\\" [(ngModel)]=\\\"opsTruckType\\\" name=\\\"opsTruckType\\\">\\n                        </mat-form-field>\\n                  </div>\\n          </div>\\n        </div>\\n        <!-- <div class='col-md-6 pd-0'>\\n          <div class=\\\"row mg-0\\\">\\n              <div class=\\\"col-md-4\\\">\\n                      <mat-form-field>\\n                          <input matInput placeholder=\\\"PaaS Variant1\\\" [(ngModel)]=\\\"opsVariant1\\\" name=\\\"opsVariant1\\\">\\n                      </mat-form-field>\\n                </div>\\n          </div>\\n        </div> -->\\n      </div>\\n    </div>\\n    <div class=\\\"pull-right\\\">\\n      <div class=\\\"search-fileds\\\">\\n        <button class=\\\"theme-small-button\\\" (click)=\\\"doSubmitSearch()\\\" matTooltip=\\\"Search\\\">\\n          <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n        <button class=\\\"theme-delete-button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear All\\\">\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n<div class=\\\"mt-item-table\\\">\\n<div>\\n<!-- <ngx-datatable class='material ngx-table-custom-scroll  ngx-table-tr-custom-scroll' #table [rows]='responseItemsList' [scrollbarH]=\\\"true\\\" \\n[externalPaging]=\\\"true\\\" (page)=\\\"datatablePageData($event)\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"page.limit\\\" [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\">\\n  -->\\n<ngx-datatable class='material ngx-table-custom-scroll  ngx-table-tr-custom-scroll' #table [columnMode]=\\\"'force'\\\"\\n[rows]='responseItemsList' [externalPaging]=\\\"true\\\" (page)=\\\"datatablePageData($event)\\\" [scrollbarH]=\\\"false\\\"\\n[headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"page.limit\\\" [count]=\\\"page.count\\\"\\n[offset]=\\\"page.offset\\\">\\n\\n\\n<ngx-datatable-column name=\\\"SAP Truck Type\\\" [width]=\\\"140\\\" [resizeable]=\\\"false\\\" prop=\\\"sapTruckType\\\" [sortable]=\\\"true\\\">\\n    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n      {{row.sapTruckType}}\\n    </ng-template>\\n  </ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"SAP Truck Type Desc\\\" [width]=\\\"230\\\" [resizeable]=\\\"false\\\" prop=\\\"sapTruckTypeDesc\\\" [sortable]=\\\"true\\\">\\n    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n      {{row.sapTruckTypeDesc}}\\n    </ng-template>\\n  </ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"PaaS Truck Type\\\" [width]=\\\"190\\\" [resizeable]=\\\"false\\\" prop=\\\"opsTruckType\\\" [sortable]=\\\"true\\\">\\n    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n      {{row.opsTruckType}}\\n    </ng-template>\\n  </ngx-datatable-column>\\n  <ngx-datatable-column name=\\\"PaaS Variant1\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"opsVariant1\\\" [sortable]=\\\"true\\\">\\n    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n      {{row.opsVariant1}}\\n    </ng-template>\\n  </ngx-datatable-column>\\n\\n  <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" prop=\\\"insertUser\\\" [sortable]=\\\"true\\\">\\n    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n      {{row.insertUser}}\\n    </ng-template>\\n  </ngx-datatable-column>\\n\\n  <ngx-datatable-column name=\\\"Insert Date\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" prop=\\\"insertDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{trimDate(row.insertDate)}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Update User\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" prop=\\\"updateUser\\\" [sortable]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.updateUser}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      \\n  <ngx-datatable-column name=\\\"Update Date\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" prop=\\\"updateDate\\\" [sortable]=\\\"true\\\">\\n    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n      {{trimDate(row.updateDate)}}\\n    </ng-template>\\n  </ngx-datatable-column>\\n\\n\\n  <ngx-datatable-column name=\\\"Action\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n    <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n      <button class=\\\"theme-small-button btn\\\" matTooltip=\\\"Modify\\\" (click)=\\\"showUpdateModel(row)\\\" [disabled]=\\\"(row.isError)\\\">\\n        <i class=\\\"fa fa-edit fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </ng-template>\\n  </ngx-datatable-column>\\n     <!-- Footer Template starts -->\\n     <ngx-datatable-footer>\\n      <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n        let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n        <div class=\\\"page-count\\\">\\n          <span *ngIf=\\\"selectedCount\\\">\\n            {{selectedCount.toLocaleString()}} Selected |\\n          </span>\\n          Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n          (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n          {{(rowCount)}} records.\\n        </div>\\n        <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n          [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\" [size]=\\\"pageSize\\\"\\n          [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\" (change)=\\\"table.onFooterPage($event)\\\">\\n        </datatable-pager>\\n      </ng-template>\\n    </ngx-datatable-footer>\\n    <!-- Footer Template Ends -->\\n</ngx-datatable>\\n</div>\\n</div>\\n</div>\\n\\n\\n\\n\\n\\n\\n<br><br>\\n<div class=\\\"mt-item-fields\\\" *ngIf=\\\"displayForm\\\">\\n<div class=\\\"col-md-12 padding-right-40\\\">\\n<mat-card>\\n<form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"(f.form.valid && saveForm(f))\\\">\\n  <h4 class=\\\"mt-item-header text-center text-primary\\\">\\n    <b> Add New SAP Truck Type</b></h4>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 pd-0\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-1\\\">\\n        </div>\\n        <div class=\\\"col-md-5\\\">\\n          <div class=\\\"form-group\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"SAP Truck Type\\\" [(ngModel)]=\\\"sapTruckTypef\\\" name=\\\"sapTruckTypef\\\" required #qty=\\\"ngModel\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                <p *ngIf=\\\"qty.errors.required\\\">SAP Truck Type is <strong>required</strong></p>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-5\\\">\\n          <div class=\\\"form-group\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"SAP Truck Type Desc\\\" [(ngModel)]=\\\"sapTruckTypeDescf\\\" name=\\\"sapTruckTypeDescf\\\" required #qty=\\\"ngModel\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"> \\n              <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                <p *ngIf=\\\"qty.errors.required\\\">SAP Truck Type Desc is <strong>required</strong></p>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='col-md-6 pd-0'>\\n      <div class=\\\"row mg-0\\\">\\n        <div class=\\\"col-md-5\\\">\\n          <div class=\\\"form-group\\\">\\n            <mat-form-field>\\n              <!-- <input matInput placeholder=\\\"PaaS Truck Type\\\" [(ngModel)]=\\\"opsTruckTypef\\\" name=\\\"opsTruckTypef\\\" required #qty=\\\"ngModel\\\">\\n              <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                <p *ngIf=\\\"qty.errors.required\\\">PaaS Truck Type is <strong>required</strong></p>\\n              </mat-error> -->\\n\\n              <mat-select placeholder=\\\"PaaS Truck Type\\\" [(ngModel)]=\\\"opsTruckTypef\\\" name=\\\"opsTruckTypef\\\" #qty=\\\"ngModel\\\" required>\\n                  <mat-option *ngFor=\\\"let loc of paasTruckTypeList\\\" [value]=\\\"loc\\\">\\n                    {{loc}}\\n                  </mat-option>\\n                </mat-select>\\n              <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                  <p *ngIf=\\\"qty.errors.required\\\">PaaS Truck Type is <strong>required</strong></p>\\n                </mat-error>\\n\\n            </mat-form-field>\\n          </div>\\n        </div>\\n\\n\\n        <!-- <div class=\\\"col-md-5\\\">\\n          <div class=\\\"form-group\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"PaaS Variant 1\\\" [(ngModel)]=\\\"opsVariant1f\\\" name=\\\"opsVariant1f\\\" #qty=\\\"ngModel\\\" required>\\n                  <mat-option *ngFor=\\\"let loc of variantsList\\\" [value]=\\\"loc\\\">\\n                    {{loc}}\\n                  </mat-option>\\n                </mat-select>\\n              <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                  <p *ngIf=\\\"qty.errors.required\\\">PaaS Variant 1 is <strong>required</strong></p>\\n                </mat-error>\\n            </mat-form-field>\\n          </div>\\n        </div> -->\\n\\n\\n        <div class=\\\"col-md-2\\\">\\n          <div class=\\\"form-group\\\">\\n            <button mat-raised-button color=\\\"primary\\\" class=\\\"btm-action-btn\\\">Save</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n</mat-card>\\n</div>\\n</div>\\n\\n\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n<div class=\\\"modal-dialog\\\">\\n<div class=\\\"modal-content\\\">\\n<form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"(f.form.valid && updateMtSapTruckType(f))\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title text-primary\\\">Update SAP Truck Type</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\">\\n        <mat-form-field appearance=\\\"standard\\\" class=\\\"example-full-width\\\">\\n        \\n          <mat-select placeholder=\\\"PaaS Truck Type\\\" [(ngModel)]=\\\"opsTruckTypeu\\\" name=\\\"opsTruckTypeu\\\" #qty=\\\"ngModel\\\" required>\\n            <mat-option *ngFor=\\\"let loc of paasTruckTypeList\\\" [value]=\\\"loc\\\">\\n              {{loc}}\\n            </mat-option>\\n          </mat-select>\\n        <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n            <p *ngIf=\\\"qty.errors.required\\\">PaaS Truck Type is <strong>required</strong></p>\\n          </mat-error>\\n\\n     \\n        <!-- <input matInput placeholder=\\\"PaaS Truck Type\\\" aria-label=\\\"State\\\" [(ngModel)]=\\\"opsTruckTypeu\\\" name=\\\"opsTruckTypeu\\\"\\n          required autocomplete=\\\"off\\\">\\n        <mat-error *ngIf=\\\"(f.submitted && opsTruckTypeu.invalid)\\\">\\n          <p *ngIf=\\\"opsTruckTypeu.errors.required\\\">PaaS Truck Type is <strong>required</strong>\\n          </p>\\n        </mat-error> -->\\n        <p class=\\\"mtop6\\\">PaaS Truck Type</p>\\n      </mat-form-field>\\n    </div>\\n    <!-- <div class=\\\"form-group\\\">\\n      <mat-form-field appearance=\\\"standard\\\" class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"PaaS Variant 1\\\" aria-label=\\\"State\\\" [(ngModel)]=\\\"opsVariant1u\\\" name=\\\"opsVariant1u\\\"\\n          autocomplete=\\\"off\\\">\\n        <mat-error *ngIf=\\\"(f.submitted && opsVariant1u.invalid)\\\">\\n          <p *ngIf=\\\"opsVariant1u.errors.required\\\">PaaS Variant 1 is <strong>required</strong>\\n          </p>\\n        </mat-error>\\n        <p class=\\\"mtop6\\\">PaaS Variant 1</p>\\n      </mat-form-field>\\n    </div> -->\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btm-action-btn\\\">Update</button>\\n    <button type=\\\"button\\\" mat-raised-button class=\\\"mat-default\\\" color=\\\"default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n  </div>\\n</form>\\n</div>\\n</div>\\n</div>\\n<br><br>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hc3RlcnMvcGFhcy1tYXN0ZXJzL210LXNhcC10cnVjay10eXBlL210LXNhcC10cnVjay10eXBlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiserviceService } from 'src/app/services/api/apiservice.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as XLSX from 'xlsx';\nimport { NgForm } from '@angular/forms';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\ndeclare var $: any;\n\n\n\n@Component({\n  selector: 'app-mt-sap-truck-type',\n  templateUrl: './mt-sap-truck-type.component.html',\n  styleUrls: ['./mt-sap-truck-type.component.scss']\n})\nexport class MtSapTruckTypeComponent implements OnInit {\n\n  isLoading: boolean = false;\n  isShow: boolean = true;\n\n  salesSku: any = \"\";\n  itemId: any = \"\";\n  compQty: any = \"\";\n  itemSeq: any = \"\";\n  oeCode: any = \"\";\n  insertUser: any = \"\";\n  insertDate: any = \"\";\n  updateUser: any = \"\";\n  updateDate: any = \"\";\n\n  itemClassification: any = \"\";\n  itemDescription: any = \"\";\n  itemType: any = \"\";\n  itemGroup: any = \"\";\n  itemCategory: any = \"\";\n  tte: any = \"\";\n  loadFactor: any = \"\";\n  formattedDate: string;\n  effectiveDate: any = \"\";\n\n  materialGroupId: any = \"\";\n  description1: any = \"\";\n  description2: any = \"\";\n  scmGroup: any = \"\";\n\n  sapTruckType: any = \"\";\n  sapTruckTypeDesc: any = \"\";\n  opsTruckType: any = \"\";\n  opsVariant1: any = \"\";\n  sttId: any = \"\";\n\n  sapTruckTypef: any = \"\";\n  sapTruckTypeDescf: any = \"\";\n  opsTruckTypef: any = \"\";\n  opsVariant1f: any = \"\";\n  sttIdf: any = \"\";\n\n  sapTruckTypeu: any = \"\";\n  sapTruckTypeDescu: any = \"\";\n  opsTruckTypeu: any = \"\";\n  opsVariant1u: any = \"\";\n  sttIdu: any = \"\";\n\n  displayForm: boolean = false;\n  resultDataList: any[];\n  responseItemsList: any[];\n\n  editing = {};\n\n  page = {\n    limit: 100,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n\n\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"paas-master\");\n    this.getPaasTruckTypeList();\n    this.getVariantsList();\n  }\n\n  showFilter() {\n    this.isShow = !this.isShow\n  }\n  // Datatable footer info\n  onFooterPage(pageInfo) {\n    console.log(pageInfo);\n\n  }\n\n  paasTruckTypeList: any[] = [];\n  variantsList: any[] = [];\n\n  getPaasTruckTypeList() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getPaasTruckTypeList).subscribe(response => {\n      //console.log(\"response array string: \"+JSON.stringify(response));\n      this.paasTruckTypeList = response['data'];\n      this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  getVariantsList() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getVariantsList).subscribe(response => {\n      console.log(\"response array string: \" + JSON.stringify(response));\n      this.variantsList = response['data'];\n      this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n\n  upload() { }\n  displayAddForm() {\n    if (this.displayForm)\n      this.displayForm = false;\n    else\n      this.displayForm = true;\n  }\n\n\n  insertStatus: string = \"\";\n\n  //\"mgId\":this.mgIdf\n  saveForm(form: NgForm) {\n    this.isLoading = true;\n    let data = {\n      \"itemsList\": [\n        {\n          sapTruckType: this.sapTruckTypef,\n          sapTruckTypeDesc: this.sapTruckTypeDescf,\n          opsTruckType: this.opsTruckTypef,\n          // opsVariant1:this.opsVariant1f,\n          // sttId:this.sttIdf,\n        }\n      ]\n    }\n    console.log(\"submit data:  \" + JSON.stringify(data));\n    this.service.post_service(ApiserviceService.apisList.addOrUploadMtSapTruckType, data).subscribe(response => {\n      //console.log(\"response array string: \"+JSON.stringify(response));\n      this.insertStatus = response['data'].message;\n      if (this.insertStatus === \"Sucess\") {\n        this.toastr.success(response['message']);\n      }\n      else if (this.insertStatus === \"Failed\") {\n        this.toastr.error(\"Please check!\", \"Could not insert record..\");\n      }\n      this.isLoading = false;\n      form.resetForm();\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n  doSubmitSearch() {\n    let data = {\n      sapTruckType: this.sapTruckType,\n      sapTruckTypeDesc: this.sapTruckTypeDesc,\n      opsTruckType: this.opsTruckType,\n      opsVariant1: this.opsVariant1,\n    }\n    console.log(\"submit data:  \" + JSON.stringify(data));\n    this.doSearch(data)\n  }\n\n  doSearch(data) {\n    console.log(\"submit data:  \" + JSON.stringify(data));\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.getMtSapTruckType, data).subscribe(response => {\n      this.page.count = response['data'].total;\n      this.page.limit = response['data'].pageLength;\n      this.responseItemsList = response['data'].itemsList;\n      console.log(\"response length: \" + this.responseItemsList.length);\n      // console.log(\"response array string: \"+JSON.stringify(this.responseItemsList));\n      this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  //server side pagination\n  datatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    let bodyData = {\n      index: pageInfo.offset,\n      sapTruckType: this.sapTruckType,\n      sapTruckTypeDesc: this.sapTruckTypeDesc,\n      opsTruckType: this.opsTruckType,\n      opsVariant1: this.opsVariant1,\n    }\n    this.doSearch(bodyData);\n  }\n\n  showUpdateModel(row) {\n    this.sapTruckTypeu = row.sapTruckType;\n    this.sapTruckTypeDescu = row.sapTruckTypeDesc;\n    this.opsTruckTypeu = row.opsTruckType;\n    this.opsVariant1u = row.opsVariant1;\n    this.sttIdu = row.sttId;\n    console.log(\"***** sttIdu\" + this.sttIdu);\n    $(\"#myModal\").modal('show');\n  }\n\n\n  updateMtSapTruckType(form: NgForm) {\n\n    this.isLoading = true;\n    let data = {\n      \"itemsList\": [\n        {\n          \"sapTruckType\": this.sapTruckTypeu,\n          \"sapTruckTypeDesc\": this.sapTruckTypeDescu,\n          \"opsTruckType\": this.opsTruckTypeu,\n          \"opsVariant1\": this.opsVariant1u,\n          \"sttId\": this.sttIdu,\n        }\n      ]\n    }\n\n    console.log(\"updateMtSapTruckType submit data:  \" + JSON.stringify(data));\n    this.service.post_service(ApiserviceService.apisList.updateMtSapTruckType, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.isLoading = false;\n        this.doSubmitSearch();\n        this.toastr.success(response['message']);\n\n        $(\"#myModal\").modal('hide');\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n  insDate: any = \"\";\n  insDatep: any = \"\";\n  updDate: any = \"\";\n  updDatep: any = \"\";\n\n\n  // export to excel file\n  export(): void {\n    this.isLoading = true;\n    if (this.responseItemsList === undefined) {\n      this.isLoading = false;\n    }\n    if (this.responseItemsList.length > 0) {\n      let data = {\n        sapTruckType: this.sapTruckType,\n        sapTruckTypeDesc: this.sapTruckTypeDesc,\n        opsTruckType: this.opsTruckType,\n        opsVariant1: this.opsVariant1,\n        // pageLength : this.page.count < this.service.maxPageLengthForExcel ? this.page.count : this.service.maxPageLengthForExcel,\n        pageLength: this.page.count     \n      }\n      this.service.post_service(ApiserviceService.apisList.getMtSapTruckType, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          let excelRawData = [...response['data'].itemsList];\n          let newExcelData = [];\n          for (let i = 0; i < excelRawData.length; i++) {\n\n            this.insDate = this.formatDate(excelRawData[i].insertDate);\n            this.insDatep = this.effectiveDate;\n            this.updDate = this.formatDate(excelRawData[i].updateDate);\n            this.updDatep = this.effectiveDate;\n\n            let data = {\n              \"SAP Truck Type\": excelRawData[i].sapTruckType,\n              \"SAP Truck Type Description\": excelRawData[i].sapTruckTypeDesc,\n              \"PaaS Truck Type\": excelRawData[i].opsTruckType,\n              \"PasS Variant 1\": excelRawData[i].opsVariant1,\n              \"Insert User   \": excelRawData[i].insertUser,\n              \"Insert Date   \": this.insDatep,\n              \"Update User   \": excelRawData[i].updateUser,\n              \"Update Date   \": this.updDatep,\n            }\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'MtSapTruckType.xlsx');\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : 'Something went wrong...', 'Error!');\n          this.isLoading = false;\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n\n    } else {\n      this.toastr.error('No Records To Generate Excel...', 'Error!');\n      this.isLoading = false;\n    }\n  }\n\n  // clear data\n  clearAll() {\n    this.sapTruckType = \"\";\n    this.sapTruckTypeDesc = \"\";\n    this.opsTruckType = \"\";\n    this.opsVariant1 = \"\";\n  }\n\n\n  refreshData() {\n    this.table.offset = 0;\n    this.page.offset = 0;\n    this.doSubmitSearch();\n  }\n\n\n  formatDate(data) {\n    if (data != null && data) {\n      let formatted = new Date(data),\n        mnth = (\"0\" + (formatted.getMonth() + 1)).slice(-2),\n        day = (\"0\" + formatted.getDate()).slice(-2);\n      this.formattedDate = [day, this.getMonth(mnth), formatted.getFullYear()].join(\"-\");\n      this.effectiveDate = this.formattedDate;\n      return this.formatDate;\n    } else {\n      this.effectiveDate = \"\";\n    }\n  }\n  month_names = {\n    \"01\": \"Jan\",\n    \"02\": \"Feb\",\n    \"03\": \"Mar\", \"04\": \"Apr\", \"05\": \"May\", \"06\": \"Jun\", \"07\": \"Jul\", \"08\": \"Aug\", \"09\": \"Sep\", \"10\": \"Oct\", \"11\": \"Nov\", 12: \"Dec\"\n  };\n\n\n  trimDate(date) {\n    if (date === \"\" || date === undefined)\n      return \"\";\n    else\n      var array = date.substring(0, 10).split(\"-\");\n    return array[2] + \"-\" + this.getMonth(array[1]) + \"-\" + array[0];\n  }\n\n  trimEmpty(val) {\n    if (val === \"\" || val === undefined)\n      return \"\";\n    else {\n      console.log(typeof val)\n      console.log(val + \"----\" + val.length);\n      // return val.trim();\n    }\n  }\n\n  getMonth(number) {\n    return this.month_names[number]\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MtSapTruckTypeComponent } from './mt-sap-truck-type.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoaderModule } from '../../../public/loader/loader-shared.module';\nimport { customMaterialModule } from '../../../angular-material';\nimport { FormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\n\nconst routes: Routes = [\n  { path: '', component: MtSapTruckTypeComponent }\n];\n\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    LoaderModule,\n    CommonModule,\n    customMaterialModule,\n    FormsModule,\n    NgxDatatableModule\n  ],\n  declarations: [MtSapTruckTypeComponent]\n})\nexport class MtSapTruckTypeModule { }\n"],"sourceRoot":""}