{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/gate-security/truck-inventory-receiving/truck-inventory-receiving.component.html","webpack:///./src/app/gate-security/truck-inventory-receiving/truck-inventory-receiving.component.scss","webpack:///./src/app/gate-security/truck-inventory-receiving/truck-inventory-receiving.component.ts","webpack:///./src/app/gate-security/truck-inventory-receiving/truck-inventory-receiving.module.ts"],"names":[],"mappings":"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","file":"gate-security-truck-inventory-receiving-truck-inventory-receiving-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\">\\n</app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    <b>Truck status > Truck Inventory > Receiving</b>\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"Filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"manualplan-fields\\\" *ngIf=\\\"isShow\\\">\\n      <form (submit)=\\\"rdcFilterSearch()\\\">\\n    <div class=\\\"col-md-12 row\\\">\\n      <div class=\\\"col-md-12 padding-right-40\\\">\\n        <div class=\\\"row \\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-2 pr-0 pl-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput aria-label=\\\"Source\\\" placeholder=\\\"Source\\\"\\n                      (keyup)=\\\"getfilterDestination($event,'source', !isIntransitTruck)\\\" autocomplete=\\\"off\\\"\\n                      [matAutocomplete]=\\\"sourceAutocomplete\\\" [(ngModel)]=\\\"source\\\" name=\\\"source\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                    <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n                        <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput aria-label=\\\"Destination\\\" placeholder=\\\"Destination\\\" (keyup)=\\\"getfilterDestination($event,'destination')\\\" autocomplete=\\\"off\\\"\\n                      [matAutocomplete]=\\\"destinationAutocomplete\\\" [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\">\\n                    <mat-autocomplete #destinationAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\">\\n                        <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div> -->\\n\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Destination\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n                      [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                       (keyup)=\\\"getfilterDestination($event,'destination', isIntransitTruck)\\\">\\n                    <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\"\\n                        (click)=\\\"setDestDescription(list.description)\\\"\\n                        (onSelectionChange)=\\\"setDestDescription(list.description)\\\">\\n                        <span>{{list.value}}</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"destinationDesc\\\"\\n                      [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destinationDesc\\\"\\n                      (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                    <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                        (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                        <span>({{list.description}})</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-md-4 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <mat-select placeholder=\\\"Truck/Container Type\\\" [(ngModel)]=\\\"truckType\\\" name=\\\"truckType\\\" multiple>\\n                      <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                      <mat-option *ngFor=\\\"let truck of truckList\\\" [value]=\\\"truck.value\\\"> {{truck.value}} </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n\\n\\n\\n\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <input matInput aria-label=\\\"Country of Destination\\\" placeholder=\\\"Country of Destination\\\"\\n                    (keyup)=\\\"countryOfDestinationFilter($event,'destCountrySearch')\\\" autocomplete=\\\"off\\\"\\n                    [matAutocomplete]=\\\"dischargeAutocomplete\\\" [(ngModel)]=\\\"destCountryName\\\" name=\\\"destCountryName\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                  <mat-autocomplete #dischargeAutocomplete=\\\"matAutocomplete\\\">\\n                    <mat-option *ngFor=\\\"let country of countryList\\\" [value]=\\\"country.description\\\">\\n                      <span matTooltip={{country.description}}>{{country.value}} - ({{country.description}})</span>\\n                    </mat-option>\\n                  </mat-autocomplete>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <input matInput [(ngModel)]=\\\"trckNumber\\\" name=\\\"truck number\\\" autocomplete=\\\"off\\\"\\n                    placeholder=\\\"Truck Number\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput aria-label=\\\"transporter\\\" placeholder=\\\"Transporter\\\"\\n                      (keyup)=\\\"getfilterTransporter($event)\\\" autocomplete=\\\"off\\\"\\n                      [matAutocomplete]=\\\"transporterAutocomplete\\\" [(ngModel)]=\\\"transporter\\\" name=\\\"transporter\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                    <mat-autocomplete #transporterAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of transporterList\\\" [value]=\\\"list.value\\\">\\n                        <span>{{list.value}}</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <mat-form-field>\\n                  <input matInput [(ngModel)]=\\\"shipmentId\\\" name=\\\"shipment\\\" autocomplete=\\\"off\\\" placeholder=\\\"Shipment Id\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                </mat-form-field>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-3 pl-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [(ngModel)]=\\\"indentId\\\" name=\\\"indentid\\\" placeholder=\\\"Indent Id\\\" autocomplete=\\\"off\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [min]=\\\"minDate\\\" placeholder=\\\"Gate In From Date\\\" disabled\\n                      [matDatepicker]=\\\"gateInFromDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateInFromDate\\\"\\n                      (dateChange)=\\\"addEvent('gateInDate', $event)\\\" name=\\\"gateInToDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"gateInFromDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #gateInFromDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <input matInput [min]=\\\"gateInFromDate\\\" placeholder=\\\"Gate In To Date\\\" disabled\\n                    [matDatepicker]=\\\"gateInToDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateInToDate\\\"\\n                    name=\\\"gateInToDate\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"gateInToDatePicker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #gateInToDatePicker [disabled]=\\\"!gateInFromDate\\\"></mat-datepicker>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [min]=\\\"minDate\\\" placeholder=\\\"Rep From Date\\\" disabled\\n                      [matDatepicker]=\\\"reportFromDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"reportFromDate\\\"\\n                      (dateChange)=\\\"addEvent('repFromDate', $event)\\\" name=\\\"reportfromDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"reportFromDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #reportFromDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n\\n\\n              <!-- <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [min]=\\\"minDate\\\" placeholder=\\\"Gate Out From Date\\\" disabled [matDatepicker]=\\\"gateOutFromDatePicker\\\"\\n                      autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateOutFromDate\\\" (dateChange)=\\\"addEvent('gateOutDate', $event)\\\"\\n                      name=\\\"gateoutFromDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"gateOutFromDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #gateOutFromDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <input matInput [min]=\\\"gateOutFromDate\\\" placeholder=\\\"Gate Out To Date\\\" disabled [matDatepicker]=\\\"gateOutToDatePicker\\\"\\n                    autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateOutToDate\\\" name=\\\"gateoutToDate\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"gateOutToDatePicker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #gateOutToDatePicker [disabled]=\\\"!gateOutFromDate\\\"></mat-datepicker>\\n                </mat-form-field>\\n              </div> -->\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [min]=\\\"reportFromDate\\\" placeholder=\\\"Rep To Date\\\" disabled\\n                      [matDatepicker]=\\\"reportToDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"reportToDate\\\"\\n                      name=\\\"reportToDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"reportToDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #reportToDatePicker [disabled]=\\\"!reportFromDate\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <mat-form-field>\\n                  <mat-select placeholder=\\\"Bay Status\\\" [(ngModel)]=\\\"bayStatus\\\" name=\\\"bayStatus\\\" multiple>\\n                    <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                    <mat-option *ngFor=\\\"let item of baystatusList\\\" [value]=\\\"item\\\"> {{item}} </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <mat-select placeholder=\\\"Select Status\\\" name=\\\"status\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"statusType\\\" multiple>\\n                    <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                    <mat-option *ngFor=\\\"let status of reportTruckStatusList\\\" [value]=\\\"status.value\\\">\\n                      {{status.key}}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"pull-right\\\">\\n        <div class=\\\"search-fileds\\\">\\n          <button class=\\\"theme-small-button\\\" type=\\\"submit\\\" matTooltip=\\\"Search\\\">\\n            <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <button class=\\\"theme-delete-button\\\" type=\\\"button\\\" (click)=\\\"clearData()\\\" matTooltip=\\\"Clear All\\\">\\n            <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n      </form>\\n  </div>\\n\\n\\n\\n  <!-- Datatable for RDC Operations Role -->\\n  <ngx-datatable #table class='material  ngx-table-custom-scroll ngx-table-tr-custom-scroll' [rows]='rdcPlannerInventoryData'\\n    [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"rdcPlannerPage.limit\\\"\\n    [scrollbarH]=\\\"true\\\" [selected]=\\\"selected\\\" [selectionType]=\\\"'single'\\\" (select)='onSelect($event)'\\n    [count]=\\\"rdcPlannerPage.count\\\" [offset]=\\\"rdcPlannerPage.offset\\\" [externalPaging]=\\\"true\\\"\\n    (page)=\\\"rdcGatesecurityDatetablePageData($event)\\\">\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Truck Number\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"truckNumber\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.truckNumber | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Source\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.source}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Dest\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"destination\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destination}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"ShipmentId\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"shipmentId\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.shipmentId | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Dest Description\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"destDis\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destDis}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Container\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"containerNum\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.containerNum | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Truck Type\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"truckType\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.truckType | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Transporter\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"transporter\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.transporter | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Country of Destination\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"destCountryName\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destCountryName}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Indent Id\\\" [width]=\\\"170\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"indentId\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.indentId}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Driver Name\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"driverName\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.driverName}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Driver Number\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"driverContact\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.driverContact}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Report Date\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"reportedDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.reportedDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Gate In\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"gateInDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <span>{{row.gateInDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Unloading Start\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"loadslipUSDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <!--  DR_REP role user only view data can't edit data -->\\n        <!-- DP_REP ROLE -->\\n        <ng-container *ngIf=\\\"(isDPREPRole());else otherUsersUNST\\\">\\n          <span>{{row.loadslipUSDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span>\\n        </ng-container>\\n        <ng-template #otherUsersUNST>\\n          <!--  for other user other than DP_REP -->\\n          <ng-container *ngIf=\\\"(row.loadslipUSDate == null)\\\">\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"eventTrigger(row,'UNLOADING')\\\" class=\\\"table-btn\\\"\\n              [disabled]=\\\"!(row.gateInDate)\\\">Unloading Start</button>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"(row.loadslipUSDate != null)\\\">\\n            <span>{{row.loadslipUSDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span>\\n          </ng-container>\\n        </ng-template>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Unloading End\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"loadslipUEDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <!--  DR_REP role user only view data can't edit data -->\\n        <!-- DP_REP ROLE -->\\n        <ng-container *ngIf=\\\"(isDPREPRole());else otherUsersUNED\\\">\\n          <span>{{row.loadslipUEDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span>\\n        </ng-container>\\n        <ng-template #otherUsersUNED>\\n          <!--  for other user other than DP_REP -->\\n          <ng-container *ngIf=\\\"(row.loadslipUEDate == null)\\\">\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"eventTrigger(row,'DELIVERED')\\\" class=\\\"table-btn\\\"\\n              [disabled]=\\\"!(row.gateInDate)\\\">Unloading End</button>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"(row.loadslipUEDate != null)\\\">\\n            <span>{{row.loadslipUEDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span>\\n          </ng-container>\\n        </ng-template>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Gate Out\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"gateOutDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <span>{{row.gateOutDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm' }}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Release\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"bayStatus\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <!--  DR_REP role user only view data can't edit data -->\\n        <!-- DP_REP ROLE -->\\n        <ng-container *ngIf=\\\"(isDPREPRole());else otherUsersRELEASE\\\">\\n          <span>{{row.bayStatus}}</span>\\n        </ng-container>\\n        <!--  for other user other than DP_REP -->\\n        <ng-template #otherUsersRELEASE>\\n          <ng-container *ngIf=\\\"(row.bayStatus != 'RELEASE')\\\">\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"eventTrigger(row,'RELEASED')\\\"\\n              class=\\\"table-btn\\\">Release</button>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"(row.bayStatus == 'RELEASE')\\\">\\n            <span>RELEASED</span>\\n          </ng-container>\\n        </ng-template>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Rejection\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"rejectionStatus\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.rejectionStatus}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Rejection Desc\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"rejectionDesc\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.rejectionDesc}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Bay\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"bayAssigned\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <!--  DR_REP role user only view data can't edit data -->\\n        <!-- DP_REP ROLE -->\\n        <ng-container *ngIf=\\\"(isDPREPRole());else otherUsersBAY\\\">\\n          <span>{{row.bayAssigned}}</span>\\n        </ng-container>\\n        <ng-template #otherUsersBAY>\\n          <!--  for other user other than DP_REP -->\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\"\\n            (click)=\\\"editingRDCpln[rowIndex + '-bayAssigned'] = true\\\"\\n            *ngIf=\\\"!editingRDCpln[rowIndex + '-bayAssigned']\\\">\\n            <span class=\\\"edit-label\\\">{{row.bayAssigned?row.bayAssigned:'None'}}</span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <ng-container *ngIf=\\\"editingRDCpln[rowIndex+ '-bayAssigned']\\\">\\n            <!-- <mat-form-field>\\n              <mat-select (selectionChange)=\\\"updateRDCplanValue($event, 'bayAssigned', rowIndex,row)\\\">\\n                <mat-option value=\\\"\\\">None</mat-option>\\n                <mat-option *ngFor=\\\"let data of plantBayList\\\" [value]=\\\"data\\\">\\n                  {{data}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field> -->\\n            <select (change)=\\\"updateRDCplanValue($event, 'bayAssigned', rowIndex,row)\\\"\\n              *ngIf=\\\"editingRDCpln[rowIndex+ '-bayAssigned']\\\">\\n              <option value=\\\"\\\">None</option>\\n              <option *ngFor=\\\"let data of plantBayList\\\" [value]=\\\"data\\\">{{data}}</option>\\n            </select>\\n          </ng-container>\\n        </ng-template>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Bay Status\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"callStatus\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-row=\\\"row\\\">\\n        <!--  DR_REP role user only view data can't edit data -->\\n        <!-- DP_REP ROLE -->\\n        <ng-container *ngIf=\\\"(isDPREPRole());else otherUsersBAYSTATUS\\\">\\n          <span [ngClass]=\\\"{'btn btn-sm lightgreen-button':row.bayStatus == 'CALL'}\\\">{{row.bayStatus == 'CALL' ?\\n            'Called':row.bayStatus}}</span>\\n        </ng-container>\\n        <ng-template #otherUsersBAYSTATUS>\\n          <!--  for other user other than DP_REP -->\\n          <div class=\\\"text-center\\\">\\n            <ng-container *ngIf=\\\"row.bayStatus == '' || row.bayStatus == null\\\">\\n              <button mat-raised-button color=\\\"primary\\\" class=\\\"table-btn\\\" (click)=\\\"callGateSecurity(row)\\\">Call</button>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"row.bayStatus != ''\\\">\\n              <span [ngClass]=\\\"{'btn btn-sm lightgreen-button':row.bayStatus == 'CALL'}\\\">{{row.bayStatus == 'CALL'\\n                ?'Called':row.bayStatus}}</span>\\n            </ng-container>\\n          </div>\\n        </ng-template>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Truck Status\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"status\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.status}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"In weight (Kg)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"inWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        {{row.inWeight?row.inWeight:'--'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Out Weight (Kg)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"outWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        {{row.outWeight?row.outWeight:'--'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Net Weight (Kg)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"netWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.netWeight}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SAP invoice weight(Kg)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"sapInvWeight\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvWeight}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Weight Diff (Kg)\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"diffInvWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <span [ngClass]=\\\"(row.weightDiffStatus)?'text-danger':''\\\">{{row.diffInvWeight}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SAP invoice value(INR)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvValue}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Eway bill No\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"ewayBillNo\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.ewayBillNo}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Loadslip Comments\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"loadslipComments\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <!-- <button class=\\\"theme-small-button\\\" matTooltip=\\\"loadslipComments\\\" (click)=\\\"viewComments(row.loadslipComments,'loadslip')\\\"\\n          *ngIf=\\\"(row.loadslipComments)\\\">\\n          <i class=\\\"fa fa-commenting-o\\\" aria-hidden=\\\"true\\\"></i>\\n        </button> -->\\n        <div class=\\\"edit-field\\\" [title]=\\\"row.loadslipComments\\\"\\n          [ngClass]=\\\"{'cursor-pointer':row.loadslipComments?.length>8}\\\"\\n          (click)=\\\"viewComments(row.loadslipComments,'loadslip')\\\" *ngIf=\\\"(row.loadslipComments)\\\">\\n          <span class=\\\"edit-label\\\">{{ (row.loadslipComments?.length>9)? (row.loadslipComments |\\n            slice:0:9)+'..':(row.loadslipComments)}}\\n          </span>\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Gate Comments\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"comments\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <!--  DR_REP role user only view data can't edit data -->\\n        <!-- DP_REP ROLE -->\\n        <ng-container *ngIf=\\\"(isDPREPRole());else otherUsersCOMMENTS\\\">\\n          <!-- <button class=\\\"theme-small-button\\\" matTooltip=\\\"Comments\\\" (click)=\\\"viewComments(row.comments,'comments')\\\"\\n            *ngIf=\\\"(row.comments)\\\">\\n            <i class=\\\"fa fa-commenting-o\\\" aria-hidden=\\\"true\\\"></i>\\n          </button> -->\\n          <div class=\\\"edit-field\\\" [title]=\\\"row.comments\\\" [ngClass]=\\\"{'cursor-pointer':row.comments?.length>9}\\\"\\n            (click)=\\\"viewComments(row.comments,'comments')\\\" *ngIf=\\\"(row.comments)\\\">\\n            <span class=\\\"edit-label\\\">{{ (row.comments?.length>9)? (row.comments | slice:0:9)+'..':(row.comments)}}\\n            </span>\\n          </div>\\n        </ng-container>\\n        <ng-template #otherUsersCOMMENTS>\\n          <!--  for other user other than DP_REP -->\\n          <div class=\\\"edit-field\\\" [title]=\\\"row.comments\\\">\\n            <span class=\\\"edit-label\\\">{{ (row.comments?.length>6)? (row.comments | slice:0:6)+'..':(row.comments)}}\\n            </span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"showComments(row.comments,row.gateControlCode)\\\"></i>\\n          </div>\\n        </ng-template>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"insertUser\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.insertUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Update User\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"updateUser\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.updateUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Loadslips\\\" [width]=\\\"220\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"report\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <ng-container>\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!row.shipmentId\\\"\\n            (click)=\\\"viewLoadslip(row.shipmentId,'loadslipView')\\\" class=\\\"table-btn mr-10\\\">View\\n            Loadslips\\n          </button>\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!row.shipmentId\\\"\\n            (click)=\\\"viewLoadslip(row.shipmentId,'invoiceView')\\\" class=\\\"table-btn\\\">LoadSlip\\n            Invoice\\n          </button>\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <!-- <ngx-datatable-column name=\\\"Action\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"netWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"table-btn\\\" (click)=\\\"rejectTruck(row)\\\" [disabled]=\\\"(row.rejectionStatus) == 'REJECTED'\\\">\\n          Reject Truck\\n        </button>\\n      </ng-template>\\n    </ngx-datatable-column> -->\\n    <!-- Footer Template starts -->\\n    <ngx-datatable-footer>\\n      <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n        let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n        <div class=\\\"page-count\\\">\\n          <span *ngIf=\\\"selectedCount\\\">\\n            {{selectedCount.toLocaleString()}} Selected |\\n          </span>\\n          Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n          (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n          {{(rowCount)}} records.\\n        </div>\\n        <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n          [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\"\\n          [size]=\\\"pageSize\\\" [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n          (change)=\\\"table.onFooterPage($event)\\\">\\n        </datatable-pager>\\n      </ng-template>\\n    </ngx-datatable-footer>\\n    <!-- Footer Template Ends -->\\n  </ngx-datatable>\\n</div>\\n\\n\\n<!-- View Loadslips  for coorsponding shipment -->\\n<div class=\\\"modal\\\" id=\\\"loadslipsModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Loadslip List</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <ul>\\n          <li *ngFor=\\\"let item of loadslipList;let i=index\\\">\\n            <span>\\n              {{i+1}})\\n              <span class=\\\"link\\\" style=\\\"margin-left: 10px;margin-right: 50px\\\"\\n                (click)=\\\"viewLoadslipnavigation(item)\\\">{{item.loadlipId}}\\n              </span>\\n              <span>\\n                {{item.type}}\\n              </span>\\n            </span>\\n          </li>\\n        </ul>\\n      </div>\\n\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <form name=\\\"form\\\" #f=\\\"ngForm\\\">\\n        <!-- Modal Header -->\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Truck Inventory Comments</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <!-- Modal body -->\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <mat-form-field appearance=\\\"standard\\\" class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Loadslip Comments\\\" aria-label=\\\"State\\\" [(ngModel)]=\\\"truckComments\\\"\\n                name=\\\"Comments\\\" #comments=\\\"ngModel\\\" autocomplete=\\\"off\\\">\\n              <!-- <mat-error *ngIf=\\\"(f.submitted && comments.invalid)\\\">\\n                <p *ngIf=\\\"comments.errors.required\\\">Comment is\\n                  <strong>required</strong>\\n                </p>\\n              </mat-error> -->\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <!-- Modal footer -->\\n        <div class=\\\"modal-footer\\\">\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" >Close</button> -->\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"save(f)\\\">Save</button>\\n          <button type=\\\"button\\\" mat-raised-button class=\\\"mat-default\\\" color=\\\"default\\\"\\n            data-dismiss=\\\"modal\\\">Close</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<!-- View Loadslips  for coorsponding shipment -->\\n<div class=\\\"modal\\\" id=\\\"commentModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">{{commentHeader}}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <p>{{commentMsg}}</p>\\n      </div>\\n      <!-- Modal footer -->\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdGUtc2VjdXJpdHkvdHJ1Y2staW52ZW50b3J5LXJlY2VpdmluZy90cnVjay1pbnZlbnRvcnktcmVjZWl2aW5nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { NgForm } from '@angular/forms';\nimport { HelperServiceService } from './../../services/helper-service/helper-service.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { constants } from 'src/app/constants';\nimport * as XLSX from 'xlsx'\nimport { Router } from '@angular/router';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/public/date.adapters';\nimport * as moment from 'moment';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\ndeclare var $: any;\n@Component({\n  selector: 'app-truck-inventory-receiving',\n  templateUrl: './truck-inventory-receiving.component.html',\n  styleUrls: ['./truck-inventory-receiving.component.scss'],\n  providers: [\n    {\n      provide: DateAdapter, useClass: AppDateAdapter\n    },\n    {\n      provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\n    }\n  ]\n})\nexport class TruckInventoryReceivingComponent implements OnInit {\n  fgsReportedTrucksIndents: any;\n  gateSeuReportedTrucksIndents = [];\n  isLoading: boolean = false;\n  editing = {};\n  editingFgs = {};\n  commentHeader: string;\n  commentMsg: string;\n  gateSecurityIndents = [];\n  editingRDCpln = {};\n  rdcPlannerPage = {\n    limit: 10,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 100\n  }\n  userRoles: any;\n  plantBayList: any;\n  isShow: boolean = true;\n  destinationList: any[];\n  transporterList: any[];\n  indentId: any;\n  transporter: any;\n  loadSlipType: string;\n  truckType=[];\n  destination: any;\n  destinationDesc: any;\n  descriptionList = [];\n  typeOfTruckReport = {};\n  reportTruckStatusList = [];\n  statusType=[];\n  trckNumber: any;\n  rdcPlannerInventoryData = [];\n  source: any;\n  sourceList: any;\n  rdcTruckInventoryData: any[];\n  reportLocation: string;\n  truckList = [];\n  loadslipList = [];\n  gateInFromDate: string;\n  gateInToDate: string;\n  gateOutFromDate: string;\n  gateOutToDate: string;\n  reportFromDate: string;\n  reportToDate: string;\n  shipmentId: string;\n  truckComments: string;\n  rowloadslipId: string;\n  baystatusList = [];\n  bayStatus=[];\n  destCountryName: string;\n  countryList: any[];\n  selected = [];\n  isIntransitTruck:boolean = true;\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService,\n    private router: Router,\n    private helperService: HelperServiceService\n  ) {\n    this.userRoles = constants.roles;\n    this.typeOfTruckReport = constants.truckReportTypes;\n    this.reportLocation = localStorage.getItem('sourceID');\n    this.baystatusList = constants.bayStatusList;\n\n    this.reportTruckStatusList = constants.rdcTruckReportStatus;\n\n\n  }\n\n\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"fgs-truck-status\");\n    // for getting truck type master\n    this.getTruckTypeMasterData();\n    this.selected = [];\n    let data = {\n      // status: rdcReportTruckStatus.reported + \",\" + rdcReportTruckStatus.gateIn + \",\"+ rdcReportTruckStatus.unloading_end + \",\" + rdcReportTruckStatus.unloading_start\n      'type': this.typeOfTruckReport['inventory'],\n      'activity': \"D\",\n      \"reportLocation\": this.reportLocation\n    };\n    this.truckInventoryReceivingAPI(data);\n    if ((this.service.checkRole() == this.userRoles.rdc_PLN) || (this.service.checkRole() == this.userRoles.fgsOperations1)) {\n      this.service.get_service(ApiserviceService.apisList.getPlanByInfo).subscribe(response => {\n        console.log(response);\n        this.plantBayList = response['data'];\n      })\n    }\n  }\n\n  // Checking if the logged in role is DP_REP or L1_MGR or L2_MGR\n  isDPREPRole(){\n    let currentRole = this.service.checkRole();\n    if(currentRole == this.userRoles.planner3 || currentRole == this.userRoles.L1MGR || currentRole == this.userRoles.L2MGR ){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  onFooterPage(pageInfo){\n    console.log(pageInfo);\n    \n  }\n\n  truckInventoryReceivingAPI(data) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.getTruckData, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        this.selected = [];\n        this.rdcPlannerInventoryData = response['data'].truckReportsData;\n        this.rdcPlannerInventoryData = [...this.rdcPlannerInventoryData];\n        this.rdcPlannerPage.limit = response['data'].pageLength;\n        this.rdcPlannerPage.count = response['data'].total;\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong\", \"!Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n  // for getting truck type master\n  getTruckTypeMasterData() {\n    this.service.get_service(ApiserviceService.apisList.truckTypeMasterData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.truckList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    });\n  }\n  //clear data\n  clearData() {\n    this.destination = '';\n    this.indentId = \"\";\n    this.statusType = [];\n    this.transporter = \"\";\n    this.trckNumber = \"\";\n    this.truckType = [];\n    this.destinationDesc = \"\";\n    this.descriptionList = [];\n    this.destinationList = [];\n    this.transporterList = [];\n    this.source = '';\n    this.gateInFromDate = '';\n    this.gateInToDate = '';\n    this.gateOutFromDate = '';\n    this.gateOutToDate = '';\n    this.reportFromDate = '';\n    this.reportToDate = '';\n    this.shipmentId = '';\n    this.bayStatus = [];\n    this.destCountryName = '';\n    this.countryList = [];\n  }\n\n\n  //refersh data \n  refreshData() {\n    this.table.offset=0;\n    this.clearData();\n    this.source = '';\n    this.selected = [];\n    // refresh data API for RDC Operationd & gateSecurity \n    this.reportTruckStatusList = constants.rdcTruckReportStatus\n    let data = {\n      // status: rdcReportTruckStatus.reported + \",\" + rdcReportTruckStatus.gateIn + \",\"+ rdcReportTruckStatus.unloading_end + \",\" + rdcReportTruckStatus.unloading_start\n      'type': this.typeOfTruckReport['inventory'],\n      'activity': \"D\",\n      \"reportLocation\": this.reportLocation\n    };\n    this.truckInventoryReceivingAPI(data)\n\n  }\n\n  //RDC filter search\n  rdcFilterSearch() {\n    if (this.helperService.getDateValidations(this.gateInFromDate, this.gateInToDate, this.gateOutFromDate, this.gateOutToDate, this.reportFromDate, this.reportToDate)) {\n      this.table.offset=0;\n      let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n      let data = {\n        destination: this.destination,\n        indentID: this.indentId,\n        status: this.statusType.toString(),\n        transporter: this.transporter,\n        truckNumber: this.trckNumber,\n        truckType: this.truckType,\n        type: this.typeOfTruckReport[\"inventory\"],\n        source: this.source,\n        activity: \"D\",\n        reportLocation: this.reportLocation,\n        shipmentID: this.shipmentId,\n        bayStatus: this.bayStatus,\n        // Gate In Dates\n        fromGateInDate: this.gateInFromDate\n          ? moment(this.gateInFromDate).format(\"DD/MM/YYYY\")\n          : \"\",\n        toGateInDate: this.gateInToDate\n          ? moment(this.gateInToDate).format(\"DD/MM/YYYY\")\n          : \"\",\n        // Gate Out Dates\n        fromGateOutDate: this.gateOutFromDate\n          ? moment(this.gateOutFromDate).format(\"DD/MM/YYYY\")\n          : \"\",\n        toGateOutDate: this.gateOutToDate\n          ? moment(this.gateOutToDate).format(\"DD/MM/YYYY\")\n          : \"\",\n        // Report Dates\n        fromReportDate: this.reportFromDate\n          ? moment(this.reportFromDate).format(\"DD/MM/YYYY\")\n          : \"\",\n        toReportDate: this.reportToDate\n          ? moment(this.reportToDate).format(\"DD/MM/YYYY\")\n          : \"\",\n        \"destCountry\": obj ? (obj.value) : ''\n      };\n      this.truckInventoryReceivingAPI(data)\n    }\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n  }\n\n  rdcGatesecurityDatetablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    // this.isLoading = true;\n    console.log(\"page info\", pageInfo);\n    let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n    let datatabledata = {\n      \"index\": pageInfo.offset,\n      \"pageLength\": pageInfo.pageSize,\n      \"destination\": this.destination,\n      \"indentID\": this.indentId,\n      \"status\": this.statusType.toString(),\n      \"transporter\": this.transporter,\n      \"truckNumber\": this.trckNumber,\n      \"truckType\": this.truckType,\n      \"reportLocation\": this.reportLocation,\n      \"bayStatus\": this.bayStatus,\n      \"shipmentID\": this.shipmentId,\n      // Gate In Dates\n      \"fromGateInDate\": this.gateInFromDate ? (moment(this.gateInFromDate).format('DD/MM/YYYY')) : '',\n      \"toGateInDate\": this.gateInToDate ? (moment(this.gateInToDate).format('DD/MM/YYYY')) : '',\n      // Gate Out Dates\n      \"fromGateOutDate\": this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n      \"toGateOutDate\": this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n      // Report Dates\n      \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n      \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : '',\n      \"destCountry\": obj ? (obj.value) : ''\n    }\n    this.truckInventoryReceivingAPI(datatabledata)\n  }\n\n\n  updateRDCplanValue(event, cell, rowIndex, row) {\n    console.log('inline editing rowIndex', rowIndex)\n    // this.editing[rowIndex + '-' + cell] = false;\n    this.rdcPlannerInventoryData[rowIndex][cell] = event.target.value;\n    this.rdcPlannerInventoryData = [...this.rdcPlannerInventoryData];\n    console.log('UPDATED!', this.rdcPlannerInventoryData[rowIndex][cell]);\n    this.bayAssign(row);\n  }\n  showFilter() {\n    this.isShow = !this.isShow;\n  }\n\n  viewComments(comments, type) {\n    if (type == 'loadslip') {\n      this.commentHeader = 'Loadslip Comments'\n    }\n    else {\n      this.commentHeader = 'Comments'\n    }\n    this.commentMsg = comments;\n    $('#commentModal').modal('show');\n  }\n  showComments(comment, id) {\n    this.truckComments = comment;\n    this.rowloadslipId = id;\n    $(\"#myModal\").modal('show');\n  }\n\n  save(form: NgForm) {\n    if (form.valid) {\n      this.isLoading = true;\n      let data = {\n        \"comments\": this.truckComments,\n        \"gateControlCode\": this.rowloadslipId\n      }\n      this.service.post_service(ApiserviceService.apisList.saveTruckComments, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.isLoading = false;\n          let index = this.rdcPlannerInventoryData.findIndex(item => item.gateControlCode == this.rowloadslipId);\n          this.rdcPlannerInventoryData[index].comments = this.truckComments;\n          this.rdcPlannerInventoryData = [...this.rdcPlannerInventoryData]\n          this.toastr.success(response['message']);\n          $(\"#myModal\").modal('hide');\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n  // fgs call method \n  callGateSecurity(row) {\n    if (row.bayAssigned == undefined) {\n      row.bayAssigned = '';\n    }\n    this.isLoading = true;\n    let data = {\n      gateControlCode: row.gateControlCode,\n      status: \"CALL_TRUCK\",\n      indentId: row.indentId,\n      bayAssigned: row.bayAssigned,\n      destDis: row.destDis,\n      destCountryName: row.destCountryName\n    }\n    this.service.post_service(ApiserviceService.apisList.getIndentReportInfo, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        let index = this.rdcPlannerInventoryData.indexOf(row);\n        let repsoneData = response['data']\n        this.rdcPlannerInventoryData[index] = repsoneData;\n        this.rdcPlannerInventoryData = [... this.rdcPlannerInventoryData];\n        this.selected = [];\n        this.selected = [...this.selected, repsoneData];\n        this.editing = {};\n        this.isLoading = false;\n        this.toastr.success(response['message'] ? response['message'] : \"Success\")\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong\", \"!Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  // Bay Assign by gate security\n  bayAssign(row) {\n    if (row.bayAssigned == undefined) {\n      row.bayAssigned = '';\n    }\n    this.isLoading = true;\n    let data = {\n      gateControlCode: row.gateControlCode,\n      status: \"BAY_ASSIGNED\",\n      indentId: row.indentId,\n      bayAssigned: row.bayAssigned,\n      destDis: row.destDis,\n      destCountryName: row.destCountryName\n    }\n    this.service.post_service(ApiserviceService.apisList.getIndentReportInfo, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        let index = this.rdcPlannerInventoryData.indexOf(row);\n        let responseData = response['data'];\n        this.rdcPlannerInventoryData[index] = responseData;\n        this.rdcPlannerInventoryData = [... this.rdcPlannerInventoryData];\n        this.editing = {};\n        this.selected = [];\n        this.selected = [...this.selected, responseData];\n        this.isLoading = false;\n        this.toastr.success(response['message'] ? response['message'] : \"Success\")\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong\", \"!Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n\n  }\n\n\n  //get filter destination result\n  getfilterDestination(event, typeofevent, isIntransitTruck) {\n    this.destinationDesc = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.destinationList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue +'&isIntransitTruck='+isIntransitTruck).subscribe(response => {\n        if (typeofevent === 'destination') {\n          this.destinationList = response['data'].searchResult;\n        } else {\n          this.sourceList = response['data'].searchResult;\n        }\n\n        console.log(\"this.destinationList\", this.destinationList)\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // filter Transporter details\n  getfilterTransporter(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.transporterList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?transporter=' + filtervalue).subscribe(response => {\n        this.transporterList = response['data'].searchResult;\n        console.log(\"this.transporterList\", this.transporterList)\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n  inweightUpdate(row) {\n    this.isLoading = true;\n    let data = {\n      gateControlCode: row.gateControlCode,\n      indentId: row.indentId,\n      status: row.status,\n      inWeight: Number(row.inWeight),\n      destDis: row.destDis,\n      destCountryName: row.destCountryName\n    }\n    this.service.post_service(ApiserviceService.apisList.updateTruckWeight, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        let index = this.rdcTruckInventoryData.indexOf(row);\n        this.rdcTruckInventoryData[index] = response['data'];\n        this.rdcTruckInventoryData = [... this.rdcTruckInventoryData];\n        this.editing = {};\n        this.isLoading = false;\n        this.toastr.success(response['message'] ? response['message'] : \"Success\");\n\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n  // out weight update \n  outWeightUpdate(row) {\n    this.isLoading = true;\n    let data = {\n      gateControlCode: row.gateControlCode,\n      indentId: row.indentId,\n      status: row.status,\n      outWeight: Number(row.outWeight),\n      destDis: row.destDis,\n      destCountryName: row.destCountryName\n    }\n    this.service.post_service(ApiserviceService.apisList.updateTruckWeight, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        let index = this.rdcTruckInventoryData.indexOf(row);\n        this.rdcTruckInventoryData[index] = response['data'];\n        this.rdcTruckInventoryData = [... this.rdcTruckInventoryData];\n        this.editing = {};\n        this.isLoading = false;\n        this.toastr.success(response['message'] ? response['message'] : \"Success\");\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  //get filter destination result\n  countryOfDestinationFilter(event, type) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?' + type + '=' + filtervalue).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.countryList = [];\n          this.countryList = response['data'].searchResult;\n          this.isLoading = false;\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        }\n\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n\n  }\n\n\n\n  //export excel data\n  export(): void {\n    if (this.rdcPlannerInventoryData.length > 0) {\n      this.isLoading = true;\n      let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n      let data = {\n        'destination': this.destination,\n        'indentID': this.indentId,\n        'status': this.statusType.toString(),\n        'transporter': this.transporter,\n        'truckNumber': this.trckNumber,\n        'truckType': this.truckType,\n        'type': this.typeOfTruckReport['inventory'],\n        'pageLength': this.rdcPlannerPage.count,\n        'source': this.source,\n        'activity': \"D\",\n        \"reportLocation\": this.reportLocation,\n        \"shipmentID\": this.shipmentId,\n        // Gate In Dates\n        \"fromGateInDate\": this.gateInFromDate ? (moment(this.gateInFromDate).format('DD/MM/YYYY')) : '',\n        \"toGateInDate\": this.gateInToDate ? (moment(this.gateInToDate).format('DD/MM/YYYY')) : '',\n        // Gate Out Dates\n        \"fromGateOutDate\": this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n        \"toGateOutDate\": this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n        // Report Dates\n        \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n        \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : '',\n        \"bayStatus\": this.bayStatus,\n        \"destCountry\": obj ? (obj.value) : ''\n      }\n\n      // RDC Operations & GateSecurity\n      this.service.post_service(ApiserviceService.apisList.getTruckData, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          let newViewPlanData = response['data'].truckReportsData;\n          console.log(\"newViewPlanData\", newViewPlanData);\n          let excelRawData = newViewPlanData;\n          let newExcelData = [];\n          for (let i = 0; i < excelRawData.length; i++) {\n            let data = {\n              \"Truck Number\": excelRawData[i].truckNumber,\n              \"Source\": excelRawData[i].source,\n              \"Destination\": excelRawData[i].destination,\n              \"Shipment Id\": excelRawData[i].shipmentId,\n              \"Dest Description\": excelRawData[i].destDis,\n              \"Container\": excelRawData[i].containerNum,\n              \"Truck Type\": excelRawData[i].truckType,\n              \"Transporter\": excelRawData[i].transporter,\n              \"Country of Destination\": excelRawData[i].destCountryName,\n              \"Indent Id\": excelRawData[i].indentId,\n              \"Driver Name\": excelRawData[i].driverName,\n              \"Driver Number\": excelRawData[i].driverContact,\n              \"Report Date\": this.service.customDateTimeFormat(excelRawData[i].reportedDate),\n              \"Gate In\": this.service.customDateTimeFormat(excelRawData[i].gateInDate),\n              \"Unloading Start\": this.service.customDateTimeFormat(excelRawData[i].loadslipUSDate),\n              \"Unloading End\": this.service.customDateTimeFormat(excelRawData[i].loadslipUEDate),\n              \"Gate Out\": this.service.customDateTimeFormat(excelRawData[i].gateOutDate),\n              \"Release\": (excelRawData[i].bayStatus == 'RELEASE') ? 'RELEASED' : '',\n              \"Rejection\": excelRawData[i].rejectionStatus,\n              \"Rejection Desc\": excelRawData[i].rejectionDesc,\n              \"Bay Assigned\": excelRawData[i].bayAssigned,\n              \"Bay status\": excelRawData[i].bayStatus,\n              \"Truck Status\": excelRawData[i].status,\n              \"In weight (Kg)\": excelRawData[i].inWeight,\n              \"Out weight (Kg)\": excelRawData[i].outWeight,\n              \"Net weight (Kg)\": excelRawData[i].netWeight,\n              \"SAP invoice weight (Kg)\": excelRawData[i].sapInvWeight,\n              \"Weight Diff (Kg)\": excelRawData.diffInvWeight,\n              \"SAP invoice value (INR)\": excelRawData[i].sapInvValue,\n              \"Eway bill No\": excelRawData[i].ewayBillNo,\n              \"Loadslip Comments\": excelRawData[i].loadslipComments,\n              \"Gate Comments\": excelRawData[i].comments,\n              \"Insert User\": excelRawData[i].insertUser,\n              \"Update User\": excelRawData[i].updateUser,\n            }\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'truckInventoryReceiving.xlsx');\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.toastr.error(\"No records found to export\", \"Error!\");\n    }\n\n  }\n\n  //set value destination\n  setDestination(value) {\n    //  this.destinationDesc = value;\n    this.destination = value;\n  }\n\n  //set value to destination description\n  setDestDescription(value) {\n    this.destinationDesc = value;\n  }\n\n  getUserDestinationList(event) {\n    this.destination = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.getDestinationDescriptionDataList + event.target.value).subscribe(response => {\n        if (response['data']) {\n          this.descriptionList = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n  //for RDC events \n\n  //event Trigger\n  eventTrigger(row, typeofevent) {\n    this.isLoading = true;\n\n    let post_URL;\n    let data;\n    if ((typeofevent == 'GATED_IN') || (typeofevent == 'INTRANSIT')) {\n      if (row.intransitTruck) {\n        // call intransit-truck-report;\n        data = {\n          truckNumber: row.truckNumber,\n          status: typeofevent,\n          gateControlCode: row.gateControlCode,\n          destDis: row.destDis,\n          destCountryName: row.destCountryName\n        }\n        post_URL = ApiserviceService.apisList.reportIntransitTruck;\n      } else {\n        // indent-report\n        data = {\n          gateControlCode: row.gateControlCode,\n          status: typeofevent,\n          indentId: row.indentId,\n          outWeight: Number(row.outWeight),\n          destDis: row.destDis,\n          destCountryName: row.destCountryName\n        }\n        post_URL = ApiserviceService.apisList.getIndentReportInfo;\n      }\n    } else {\n      data = {\n        truckNumber: row.truckNumber,\n        status: typeofevent,\n        gateControlCode: row.gateControlCode,\n        destDis: row.destDis,\n        destCountryName: row.destCountryName\n      };\n      post_URL = ApiserviceService.apisList.reportIntransitTruck;\n    }\n\n    this.service.post_service(post_URL, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        if ((typeofevent == 'UNLOADING') || (typeofevent == 'DELIVERED') || (typeofevent == 'RELEASED')) {\n          let replacebleIndex = this.rdcPlannerInventoryData.findIndex(rawData => rawData.truckNumber == data.truckNumber);\n          this.rdcPlannerInventoryData[replacebleIndex] = responseData;\n          this.rdcPlannerInventoryData = [...this.rdcPlannerInventoryData]\n        } else {\n          let replacebleIndex = this.rdcTruckInventoryData.findIndex(rawData => rawData.truckNumber == data.truckNumber);\n          this.rdcTruckInventoryData[replacebleIndex] = responseData;\n          this.rdcTruckInventoryData = [...this.rdcTruckInventoryData]\n        }\n        this.selected = [];\n        this.selected = [...this.selected, responseData];\n        this.isLoading = false;\n        this.toastr.success(response['message']);\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n\n\n  // Reject Truck \n  rejectTruck(item) {\n    this.isLoading = true;\n    let data = {\n      gateControlCode: item.gateControlCode,\n      status: \"REJECT\",\n      indentId: item.indentId,\n      truckNumber: item.truckNumber,\n      destDis: item.destDis,\n      destCountryName: item.destCountryName\n    }\n    this.service.post_service(ApiserviceService.apisList.getIndentReportInfo, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let replacebleIndex = this.rdcPlannerInventoryData.findIndex(rawData => rawData.gateControlCode == data.gateControlCode);\n        this.rdcPlannerInventoryData[replacebleIndex] = response['data'];\n        this.rdcPlannerInventoryData = [...this.rdcPlannerInventoryData];\n        this.isLoading = false;\n        this.toastr.success(response['message']);\n      }\n      else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n  // view loadslips for cooresponding shipment Id\n  viewLoadslip(shipmentNumber, view) {\n    this.isLoading = true;\n    this.loadSlipType = view;\n    this.service.get_service(ApiserviceService.apisList.openLoadslipDetails + \"?shipmentId=\" + shipmentNumber).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        if (response[\"data\"]) {\n          this.loadslipList = response[\"data\"];\n          if (this.loadslipList.length == 1) {\n            this.viewLoadslipnavigation(this.loadslipList[0]);\n          } else if (this.loadslipList.length > 1) {\n            $(\"#loadslipsModal\").modal(\"show\");\n          }\n        }\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  addEvent(type, event) {\n    console.log(event.target.value);\n    if (event.target.value) {\n      switch (type) {\n        /* Checking if selected from date greater than to date.\n     Clearing the toDate field when from date greater than to date */\n       case \"gateInDate\":\n           if(this.gateInToDate && (this.gateInFromDate > this.gateInToDate)){\n             this.gateInToDate = '';\n           }\n         // this.gateInToDate = '';\n         break;\n       case \"gateOutDate\":\n           if(this.gateOutToDate && (this.gateOutFromDate > this.gateOutToDate)){\n             this.gateOutToDate = '';\n           }\n         // this.gateOutToDate = '';\n         break;\n       case \"repFromDate\":\n           if(this.reportToDate && (this.reportFromDate > this.reportToDate)){\n             this.reportToDate = '';\n           }\n         // this.reportToDate = '';\n         break;\n       default:\n         break;\n     }\n    }\n  }\n\n  // Navigate to loadslip view\n  viewLoadslipnavigation(item) {\n    $(\"#loadslipsModal\").modal('hide');\n    let loadSlipId = item['loadlipId'];\n    let type = item.type;\n    if (this.loadSlipType == 'loadslipView') {\n      if (type == 'FGS_EXP') {\n        this.router.navigateByUrl('/load-slip-view-for-export/' + loadSlipId);\n      } else if (type == 'JIT_OEM') {\n        this.router.navigateByUrl('/load-slip-view-for-jit/' + loadSlipId);\n      } else {\n        this.router.navigateByUrl('/load-slip-view/' + loadSlipId);\n      }\n    }\n    else {\n      this.router.navigateByUrl('/load-slip-qty-view/' + loadSlipId);\n    }\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { customMaterialModule } from '../../angular-material';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\nimport { TruckInventoryReceivingComponent } from './truck-inventory-receiving.component';\n\nconst routes: Routes = [\n    { path: '', component: TruckInventoryReceivingComponent },\n];\n\n@NgModule({\n    imports: [\n        [RouterModule.forChild(routes)],\n        CommonModule,\n        FormsModule,\n        customMaterialModule,\n        LoaderModule,\n        NgxDatatableModule,\n        CustomDatePipeModule\n    ],\n    declarations: [\n        TruckInventoryReceivingComponent\n    ]\n})\n\nexport class truckInventoryReceivingModule { }\n"],"sourceRoot":""}