{"version":3,"sources":["webpack:///./src/app/fgs-operations/create-indent/create-indent.component.html","webpack:///./src/app/fgs-operations/create-indent/create-indent.component.scss","webpack:///./src/app/fgs-operations/create-indent/create-indent.component.ts","webpack:///./src/app/fgs-operations/create-indent/create-indent.module.ts"],"names":[],"mappings":"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","file":"fgs-operations-create-indent-create-indent-module.js","sourcesContent":["module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h4 class=\\\"manulal-plan-header\\\">\\n    <b> Indents > Create Indent</b>\\n  </h4>\\n  <!-- Create Plan by Manual Fields 1st row-->\\n  <div class=\\\"manualplan-fields\\\">\\n    <form name=\\\"form\\\" #indentForm=\\\"ngForm\\\" (ngSubmit)=\\\"(indentForm.form.valid && addIndent(indentForm))\\\">\\n      <div class=\\\"col-md-12 row\\\">\\n        <div class=\\\"col-md-12 padding-right-40\\\">\\n          <div class=\\\"row tab-loadslip-fields\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 pr-0 pl-0\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput [min]=\\\"minDate\\\" disabled [matDatepicker]=\\\"createIndentDate\\\"\\n                        [(ngModel)]=\\\"indentDate\\\" name=\\\"indentDate\\\" placeholder=\\\"Date\\\">\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"createIndentDate\\\"></mat-datepicker-toggle>\\n                      <mat-datepicker #createIndentDate disabled=\\\"false\\\"></mat-datepicker>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3 pr-0\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput [(ngModel)]=\\\"source\\\" name=\\\"sourceLocation\\\" placeholder=\\\"Source\\\" disabled>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3 pr-0\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput aria-label=\\\"Destination\\\" placeholder=\\\"Destination\\\" required\\n                        (keyup)=\\\"getfilterDestination($event,'destination')\\\" autocomplete=\\\"off\\\"\\n                        [matAutocomplete]=\\\"destinationAutocomplete\\\" [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\"\\n                        #destinationLocation=\\\"ngModel\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" required>\\n                      <mat-autocomplete #destinationAutocomplete=\\\"matAutocomplete\\\">\\n                        <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\"\\n                          (click)=\\\"setDestinationDescription(list.description)\\\"\\n                          (onSelectionChange)=\\\"setDestinationDescription(list.description)\\\">\\n                          <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                        </mat-option>\\n                      </mat-autocomplete>\\n                      <mat-error *ngIf=\\\"(indentForm.submitted && destinationLocation.invalid)\\\">\\n                        <p *ngIf=\\\"destinationLocation.errors.required\\\">Destination is\\n                          <strong>required</strong>\\n                        </p>\\n                      </mat-error>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                      <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"State\\\"\\n                        [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destinationDesc\\\"\\n                        (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                      <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n                        <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                          (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                          <span>({{list.description}})</span>\\n                        </mat-option>\\n                      </mat-autocomplete>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <!-- <mat-form-field>\\n                      <mat-select placeholder=\\\"Truck/Container Type\\\" [(ngModel)]=\\\"truckType\\\" name=\\\"TruckType\\\"\\n                        (selectionChange)=\\\"getListOfTransporterCombination(truckType); openOtherTypesModal()\\\"\\n                        #truck=\\\"ngModel\\\" required>\\n                        <mat-option *ngFor=\\\"let list of truckTypeList\\\" [value]=\\\"list.value\\\" [disabled]=\\\"list.value === selectedTruckTypeFromSubList\\\">\\n                          <span>{{list.value}}</span>\\n                        </mat-option>\\n                        <mat-option [value]=\\\"'OTHER'\\\">Other</mat-option>\\n                      </mat-select>\\n                      <mat-error *ngIf=\\\"(indentForm.submitted && truck.invalid)\\\">\\n                        <p *ngIf=\\\"truck.errors.required\\\">Truck Type is\\n                          <strong>required</strong>\\n                        </p>\\n                      </mat-error>\\n                    </mat-form-field> -->\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"Truck/Container Type\\\" [(ngModel)]=\\\"truckType\\\" name=\\\"TruckType\\\"\\n                        (selectionChange)=\\\"getListOfTransporterCombination(truckType)\\\" #truck=\\\"ngModel\\\" required>\\n                        <mat-optgroup *ngFor=\\\"let group of truckTypeClass\\\" [label]=\\\"group.name\\\"\\n                          [disabled]=\\\"group.disabled\\\" >\\n                          <mat-option *ngFor=\\\"let type of group.mtTruckTypeInfos\\\" [value]=\\\"type.value\\\" style=\\\"font-weight: normal\\\">\\n                            {{type.value}}\\n                          </mat-option>\\n                        </mat-optgroup>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3 pr-0\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput aria-label=\\\"Transporter\\\" placeholder=\\\"Transporter\\\" required\\n                        (keyup)=\\\"getfilterTransporter($event)\\\" autocomplete=\\\"off\\\"\\n                        [matAutocomplete]=\\\"transporterAutocomplete\\\" [(ngModel)]=\\\"transporterName\\\" name=\\\"transporter\\\"\\n                        #transporter=\\\"ngModel\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" required>\\n                      <mat-autocomplete #transporterAutocomplete=\\\"matAutocomplete\\\">\\n                        <mat-option *ngFor=\\\"let list of transporterList\\\" [value]=\\\"list.value\\\">\\n                          <span>{{list.value}}</span>\\n                        </mat-option>\\n                      </mat-autocomplete>\\n                      <mat-error *ngIf=\\\"(indentForm.submitted && transporter.invalid)\\\">\\n                        <p *ngIf=\\\"transporter.errors.required\\\">Transporter is\\n                          <strong>required</strong>\\n                        </p>\\n                      </mat-error>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3 pr-0\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <mat-select placeholder=\\\"Category\\\" [(ngModel)]=\\\"materialGrp\\\" name=\\\"materialGrp\\\">\\n                        <mat-option [value]=\\\"\\\">None</mat-option>\\n                        <mat-option *ngFor=\\\"let category of categoryList\\\" [value]=\\\"category\\\">{{category}}</mat-option>\\n                      </mat-select>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput [(ngModel)]=\\\"count\\\" name=\\\"count\\\" placeholder=\\\"Count\\\" autocomplete=\\\"off\\\"\\n                        (keypress)=\\\"service.numberOnly($event)\\\" #Count=\\\"ngModel\\\" required>\\n                      <mat-error *ngIf=\\\"(indentForm.submitted && Count.invalid)\\\">\\n                        <p *ngIf=\\\"Count.errors.required\\\">Count is\\n                          <strong>required</strong>\\n                        </p>\\n                      </mat-error>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"pull-right\\\">\\n          <div class=\\\"search-fileds\\\">\\n            <button class=\\\"theme-small-button\\\" type=\\\"submit\\\" matTooltip=\\\"Add Indent\\\">\\n              <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-12 padding-right-40\\\">\\n          <div class=\\\"row tab-loadslip-fields\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4 pr-0 pl-0\\\">\\n                  <div class=\\\"form-group comments\\\">\\n                    <mat-form-field>\\n                      <textarea matInput class=\\\"commentsTextArea\\\" [(ngModel)]=\\\"comments\\\" name=\\\"comments\\\"\\n                        autocomplete=\\\"off\\\" placeholder=\\\"Comments\\\"></textarea>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3 pr-0\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput aria-label=\\\"Port of Discharge\\\" placeholder=\\\"Port of Discharge\\\"\\n                        (keyup)=\\\"getfilterDestination($event,'podSearch')\\\" autocomplete=\\\"off\\\"\\n                        [matAutocomplete]=\\\"podAutocomplete\\\" [(ngModel)]=\\\"pod\\\" name=\\\"dischPort\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                      <mat-autocomplete #podAutocomplete=\\\"matAutocomplete\\\">\\n                        <mat-option *ngFor=\\\"let list of portList\\\" [value]=\\\"list.value\\\">\\n                          <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                        </mat-option>\\n                      </mat-autocomplete>\\n                      <!-- <mat-error *ngIf=\\\"(indentForm.submitted && destinationLocation.invalid)\\\">\\n                        <p *ngIf=\\\"destinationLocation.errors.required\\\">Destination is\\n                          <strong>required</strong>\\n                        </p>\\n                      </mat-error> -->\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3 pr-0\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field>\\n                      <input matInput aria-label=\\\"Country of Destination\\\" placeholder=\\\"Country of Destination\\\"\\n                        (keyup)=\\\"getfilterDestination($event,'destCountrySearch')\\\" autocomplete=\\\"off\\\"\\n                        [matAutocomplete]=\\\"dischargeAutocomplete\\\" [(ngModel)]=\\\"destCountryName\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\" name=\\\"destCountryName\\\">\\n                      <mat-autocomplete #dischargeAutocomplete=\\\"matAutocomplete\\\" >\\n                        <mat-option *ngFor=\\\"let country of countryList\\\" [value]=\\\"country.description\\\">\\n                          <span matTooltip={{country.description}}>{{country.value}} - ({{country.description}})</span>\\n                        </mat-option>\\n                      </mat-autocomplete>\\n                      <!-- <mat-select placeholder=\\\"Country of Destination\\\" [(ngModel)]=\\\"destCountry\\\" name=\\\"destCountry\\\">\\n                        <mat-option [value]=\\\"\\\">None</mat-option>\\n                        <mat-option *ngFor=\\\"let country of countryList\\\" [value]=\\\"country\\\">{{country}}</mat-option>\\n                      </mat-select> -->\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div class=\\\"col-md-12 row\\\">\\n        \\n      </div> -->\\n    </form>\\n  </div>\\n  <div class=\\\"datatable\\\">\\n    <ngx-datatable class='material' [rows]='indentData' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [limit]=\\\"100\\\"\\n      [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [scrollbarH]=\\\"true\\\">\\n      <ngx-datatable-column name=\\\"Dispatch Date\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"dispatchDate\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.dispatchDate | customDateFormat | date:'dd-MMM-yyyy'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Destination\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"destination\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.destination}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Dest Description\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"destDis\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.destDis}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Truck/Container Type\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"truckType\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.truckType}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Transporter\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"transporter\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.transporter}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Category\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"materailGrp\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.materailGrp}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Port Of Discharge\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"pod\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.pod}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Country Of Destination\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"destCountryName\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.destCountryName}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Trucks Required\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"indented\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.indented}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"TTE Capacity\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"tte\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.tte}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Comments\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"comments\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.comments}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Actions\\\" prop=\\\"id\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-id=\\\"value\\\">\\n          <button class=\\\"theme-delete-button\\\" (click)=\\\"deleteIndent(row)\\\">\\n            <i class=\\\"fa fa-trash-o fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n    </ngx-datatable>\\n  </div>\\n  <div align=\\\"center\\\" *ngIf=\\\"(indentData.length > 0)\\\">\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"btm-action-btn\\\" (click)=\\\"createIndent()\\\">Create Indent</button>\\n  </div>\\n\\n</div>\\n\\n\\n\\n<!--  Freight Availble or Not Show Modal After creation of Indent -->\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"freightModal\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title text-center\\\">Message !!</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <p class=\\\"text-primary text-center\\\">{{isFrightAvailble_or_not_for_indent}}</p>\\n      </div>\\n\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"TransporterListModal\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title text-center\\\">Transporters !!</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Select Transporter\\\" [(ngModel)]=\\\"modalTransporterList\\\" name=\\\"modalTransporterList\\\">\\n            <mat-option *ngFor=\\\"let list of modalTransporterListvalues;let i=index\\\" [value]=\\\"list.trasporter\\\">\\n              <span>Transporter : <b>{{list.trasporter}}</b> <b class=\\\"margin-left-30\\\"> {{list.label}} </b></span>\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\n          (click)=\\\"setTransporterValue(modalTransporterList)\\\">Confirm</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n <!-- Other Truck Type\\nHere we will fetch ALL the Master truck types \\n<div class=\\\"modal\\\" id=\\\"otherTruckTypesModal\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n\\n       Modal Header \\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title text-center\\\">Select Truck Type</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeOtherTruckTypeModal()\\\">&times;</button>\\n      </div> \\n      Modal body\\n      <div class=\\\"modal-body\\\">\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Truck/Container Type\\\" [(ngModel)]=\\\"truckType\\\" name=\\\"TruckType\\\"\\n            (selectionChange)=\\\" setSelectedTruckType();getListOfTransporterCombination(truckType)\\\" #truck=\\\"ngModel\\\"\\n            required>\\n            <mat-option *ngFor=\\\"let list of truckTypeList\\\" [value]=\\\"list.value\\\">\\n              <span>{{list.value}}</span>\\n            </mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"(indentForm.submitted && truck.invalid)\\\">\\n            <p *ngIf=\\\"truck.errors.required\\\">Truck Type is\\n              <strong>required</strong>\\n            </p>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      Modal footer\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeOtherTruckTypeModal()\\\">OK</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeOtherTruckTypeModal()\\\">Close</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div> -->\"","module.exports = \".manualplan-fields {\\n  background-color: transparent;\\n  box-shadow: none;\\n  padding: 0px; }\\n  .manualplan-fields p > i {\\n    cursor: pointer; }\\n  .manualplan-fields .col-md-3 {\\n    padding: 0px 15px; }\\n  .manualplan-fields .wid-12p {\\n    flex: 0 0 12%;\\n    max-width: 12%; }\\n  .manualplan-fields .wid-13p {\\n    flex: 0 0 13%;\\n    max-width: 13%; }\\n  .manualplan-fields .form-group {\\n    margin-bottom: 0; }\\n  .manualplan-fields .form-group .mat-form-field .mat-form-field-wrapper {\\n      padding-bottom: 0.5em !important; }\\n  .manualplan-fields label {\\n    display: block; }\\n  .margin-left-30 {\\n  margin-left: 30px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmdzLW9wZXJhdGlvbnMvY3JlYXRlLWluZGVudC9DOlxcVXNlcnNcXEFiaGV5U29vZFxcT25lRHJpdmUgLSBBY2NlbGFscGhhIFNvZnR3YXJlIFB2dC4gTHRkXFxEZXNrdG9wXFxhdG9tIGFwb2xsb1xcQXBvbGxvXFxOZXctIEFudXJhZ1xcYXRvbS11aS9zcmNcXGFwcFxcZmdzLW9wZXJhdGlvbnNcXGNyZWF0ZS1pbmRlbnRcXGNyZWF0ZS1pbmRlbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDSSw2QkFBNkI7RUFDN0IsZ0JBQWdCO0VBQ2hCLFlBQVksRUFBQTtFQUhoQjtJQUtRLGVBQWUsRUFBQTtFQUx2QjtJQVFRLGlCQUFpQixFQUFBO0VBUnpCO0lBV1EsYUFBYTtJQUNiLGNBQWMsRUFBQTtFQVp0QjtJQWVRLGFBQWE7SUFDYixjQUFjLEVBQUE7RUFoQnRCO0lBbUJRLGdCQUFnQixFQUFBO0VBbkJ4QjtNQXNCZ0IsZ0NBQWdDLEVBQUE7RUF0QmhEO0lBMkJRLGNBQWMsRUFBQTtFQUt0QjtFQUNJLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZmdzLW9wZXJhdGlvbnMvY3JlYXRlLWluZGVudC9jcmVhdGUtaW5kZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vYXNzZXRzL3N0eWxlcy92YXJpYWJsZXMnO1xuQGltcG9ydCAnLi4vLi4vLi4vYXNzZXRzL3N0eWxlcy9taXhpbnMnO1xuXG5cbi5tYW51YWxwbGFuLWZpZWxkc3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIHBhZGRpbmc6IDBweDtcbiAgICBwID4gaXtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAuY29sLW1kLTN7XG4gICAgICAgIHBhZGRpbmc6IDBweCAxNXB4O1xuICAgIH1cbiAgICAud2lkLTEycHtcbiAgICAgICAgZmxleDogMCAwIDEyJTtcbiAgICAgICAgbWF4LXdpZHRoOiAxMiU7XG4gICAgfVxuICAgIC53aWQtMTNwe1xuICAgICAgICBmbGV4OiAwIDAgMTMlO1xuICAgICAgICBtYXgtd2lkdGg6IDEzJTtcbiAgICB9XG4gICAgLmZvcm0tZ3JvdXB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgIC5tYXQtZm9ybS1maWVsZCB7XG4gICAgICAgICAgICAubWF0LWZvcm0tZmllbGQtd3JhcHBlcntcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMC41ZW0gIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBsYWJlbHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICAgICAgICBcbn1cblxuLm1hcmdpbi1sZWZ0LTMwe1xuICAgIG1hcmdpbi1sZWZ0OiAzMHB4O1xufSJdfQ== */\"","import { HelperServiceService } from './../../services/helper-service/helper-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS, MatDialog } from '@angular/material';\nimport { AppDateAdapter, APP_DATE_FORMATS } from '../../public/date.adapters';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\nimport { DeleteConfirmationPopupComponent } from '../../public/delete-confirmation-popup/delete-confirmation-popup.component';\nimport * as  moment from 'moment'\ndeclare var $: any;\n\n@Component({\n  selector: 'app-create-indent',\n  templateUrl: './create-indent.component.html',\n  styleUrls: ['./create-indent.component.scss'],\n  providers: [\n    {\n      provide: DateAdapter, useClass: AppDateAdapter\n    },\n    {\n      provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\n    }\n  ]\n})\nexport class CreateIndentComponent implements OnInit {\n\n  materialGrpList: any[];\n  portList = [];\n  countryList = [];\n  transporterName: any;\n  transporterList: any;\n  truckTypeList: any[];\n  formattedDate: string;\n  destinationList = [];\n  isLoading: boolean = false;\n  disPort: any;\n  destCountryName: any;\n  indentData = [];\n  pod: any;\n  indentDate = '';\n  indentId = '';\n  transporter = '';\n  source = '';\n  destination = '';\n  truckType = '';\n  materialGrp: string = '';\n  count: number;\n  minDate = new Date();\n  comments = '';\n  tte = '';\n  materialGroup: string;\n  isFrightAvailble_or_not_for_indent: string;\n  modalTransporterListvalues = [];\n  modalTransporterList: any;\n  categoryList = [];\n  descriptionList = []; destinationDesc: string;\n  truckTypeForDestList = [];\n  tempList = [];\n  selectedTruckTypeFromSubList: string;\n  truckTypeClass: any;\n  ;\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService,\n    public helperService: HelperServiceService,\n    public dialog: MatDialog,\n  ) { }\n\n  ngOnInit() {\n    this.source = localStorage.getItem(\"sourceID\")\n    this.indentDate = this.helperService.getTodayDateASString();\n    localStorage.setItem(\"userMenu\", \"fgs-indents\");\n    // Commented because we are getting truck types when DESTINATION is deselected\n     this.getTruckTypesList();\n\n    //for getting category master data\n    this.getCategoryMasterData();\n  }\n\n  //for getting category master data\n  getCategoryMasterData() {\n    this.service.get_service(ApiserviceService.apisList.categoryMasterData).subscribe(response => {\n      this.categoryList = response['data'];\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    })\n  }\n\n  //for getting Port Of Discharge master data\n  getDischargePortMasterData() {\n    this.service.get_service(ApiserviceService.apisList.getDischargePortData).subscribe(response => {\n      this.portList = response['data'];\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    })\n  }\n\n  //for getting Country Of Destination master data\n  getDestinationPortMasterData() {\n    this.service.get_service(ApiserviceService.apisList.gatCountryofDestinationMasterData).subscribe(response => {\n      this.countryList = response['data'];\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    })\n  }\n\n  createIndent() {\n    this.isLoading = true;\n\n    let modifiedData = [];\n    for (let i = 0; i < this.indentData.length; i++) {\n      let newData = {\n        \"Dispatch Date\": this.indentData[i].dispatchDate,\n        \"Source Location\": this.indentData[i].source,\n        \"Port Of Discharge\": this.indentData[i].pod,\n        \"Country Of Destination\": this.indentData[i].destCountryName,\n        \"Destination Location\": this.indentData[i].destination,\n        \"Truck Type\": this.indentData[i].truckType,\n        \"TTE\": this.indentData[i].tte,\n        \"Transporter\": this.indentData[i].transporter,\n        \"Category\": this.indentData[i].materailGrp,\n        \"Count\": this.indentData[i].indented,\n        \"comments\": this.indentData[i].comments,\n        \"DEST DESCRIPTION\": this.indentData[i].destDis\n      }\n      modifiedData.push(newData);\n    }\n    let data = {\n      indents: modifiedData\n    }\n    this.service.post_service(ApiserviceService.apisList.manualIndent, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        this.isLoading = false;\n        this.indentData = [];\n        this.isFrightAvailble_or_not_for_indent = response['data'];\n        // If freight no availble we will show modal otherwise not showing\n        if (this.isFrightAvailble_or_not_for_indent) {\n          $('#freightModal').modal('show');\n        }\n        this.toastr.success(response['message'] ? response['message'] : \"Indent Created Successfully\");\n\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  //add Indent to the table \n  addIndent(form: NgForm) {\n    // if (this.indentDate != '' && this.indentData != null) {\n    //   this.formattedDate = this.formattedDate\n    // } else {\n    //   this.formattedDate = ''\n    // }\n    console.log('destinationList', this.destinationList);\n\n    if (this.materialGrp) {\n      this.materialGrp = this.materialGrp\n    }\n    else {\n      this.materialGrp = ''\n    }\n    let data = {\n      dispatchDate: this.indentDate ? moment(this.indentDate).format('DD/MM/YYYY') : '',\n      source: this.source,\n      destination: this.destination,\n      pod: this.pod,\n      destCountryName: this.destCountryName,\n      truckType: this.truckType,\n      transporter: this.transporterName,\n      materailGrp: this.materialGrp,\n      indented: this.count,\n      comments: this.comments,\n      tte: this.tte,\n      destDis: this.destinationDesc\n    }\n    const checkDestination = this.destinationList.some(a => a.value == data.destination);\n    const checkPort = (data.pod) ? this.portList.some(a => a.value == data.pod) : true;\n    const checkCountry = (data.destCountryName) ? this.countryList.some(a => a.description == data.destCountryName) : true;\n    const checkTruckType = this.truckTypeList.some(a => a.value == data.truckType);\n    const checkTransporter = this.transporterList ? this.transporterList.some(a => a.value == data.transporter) : '';\n    const checkInCombinationListTransporter = this.modalTransporterListvalues ? this.modalTransporterListvalues.some(a => a.trasporter == data.transporter) : '';\n    //const checkMaterialGrp =this.materialGrpList.some(a=>a.value == data.materailGrp);\n\n    if (data.dispatchDate) {\n      if (checkDestination) {\n        if (checkTruckType) {\n          if (checkPort) {\n            if (checkCountry) {\n              if (checkTransporter || checkInCombinationListTransporter) {\n                if (Number(data.indented != 0)) {\n                  this.appendDataToTable(data);\n                  form.resetForm();\n                  this.portList = [];\n                  this.countryList = [];\n                  this.truckTypeClass = [];\n\n                } else {\n                  this.toastr.error(\"Count should be greater than 0\")\n                }\n              } else {\n                this.toastr.error(\"Please select valid Transporter\")\n              }\n            } else {\n              this.toastr.error(\"Please select valid Country\")\n            }\n          } else {\n            this.toastr.error(\"Please select valid Port\")\n          }\n        } else {\n          this.toastr.error(\"Please select valid Truck type\")\n        }\n      } else {\n        const checkDestinationDescription = this.descriptionList.some(a => a.description == data.destDis)\n        if (checkDestinationDescription) {\n          this.appendDataToTable(data);\n          form.resetForm();\n        } else {\n          this.toastr.error(\"Please select valid destination & Destination Description\");\n        }\n\n      }\n    } else {\n      this.toastr.error(\"Please select indent date\")\n    }\n\n  }\n\n\n  appendDataToTable(data) {\n    this.indentData.push(data);\n    this.indentData = [...this.indentData];\n    console.log(this.indentData);\n    this.destinationList = [];\n    this.truckType = '';\n    this.transporterList = [];\n    this.materialGrpList = [];\n    this.modalTransporterListvalues = [];\n    this.modalTransporterList = '';\n    this.descriptionList = [];\n    this.tte = '';\n    this.formattedDate = '';\n    setTimeout(() => {\n      this.source = localStorage.getItem(\"sourceID\");\n      this.indentDate = this.helperService.getTodayDateASString();\n    }, 200);\n  }\n\n  //delete Indent  \n  deleteIndent(row) {\n    // let index = this.indentData.indexOf(row);\n    // this.indentData.splice(index, 1);\n    // this.indentData = [...this.indentData]\n    this.openDialog(row);\n  }\n\n\n  //get filter destination result\n  getfilterDestination(event, type) {\n    if (type == 'destination') {\n      this.destinationDesc = '';\n    }\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?' + type + '=' + filtervalue+'&forIndent='+true).subscribe(response => {\n        console.log(\"respio\", response)\n        if(response['statusCode'] == 200){\n          switch (type) {\n            case \"destination\":\n              this.destinationList = [];\n              this.destinationList = response['data'].searchResult;\n              console.log('destinationList', this.destinationList.length);\n              break;\n            case \"podSearch\":\n              this.portList = [];\n              this.portList = response['data'].searchResult;\n              break;\n            case \"destCountrySearch\":\n              this.countryList = [];\n              this.countryList = response['data'].searchResult;\n              break;\n            default:\n              break;\n          }\n          this.isLoading = false;\n        }else{\n          this.isLoading = false;\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n\n  }\n\n  //filter truck type list \n  getTruckTypesList() {\n    this.truckTypeList = [];\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getMasterTruckstype).subscribe(response => {\n      console.log(\"respio\", response)\n      this.truckTypeList = response['data'];\n      this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  //filter truck type list \n  getTruckTypesForDestList() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getMasterTruckTypesWithDest + \"?sourceLoc=\" + this.source + \"&destLoc=\" + this.destination).subscribe(response => {\n      console.log(\"respio\", response)\n      // this.truckTypeList = response['data'];\n      // this.truckTypeForDestList = [...this.truckTypeList];\n      // this.tempList = [...this.truckTypeForDestList];\n      this.truckTypeClass = response['data'];\n      this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  // filter transporter list \n  getfilterTransporter(event) {\n\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.transporterList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?transporter=' + filtervalue).subscribe(response => {\n        console.log(\"respio\", response)\n        this.transporterList = response['data'].searchResult;\n        this.transporterList = [...this.transporterList]\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //filter material group\n  getfilterMaterialGrp(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.materialGrpList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?materialGrp=' + filtervalue).subscribe(response => {\n        this.materialGrpList = response['data'].searchResult;\n        console.log(\"this.materialGrpList\", this.materialGrpList)\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n  //set tte value \n  setTTEvalue(data) {\n    this.tte = data;\n  }\n  //formatting the date from datepicker \n  // formateDate(data) {\n  //   console.log(data)\n  //   if (data != null && data) {\n  //     let formatted = new Date(data),\n  //       mnth = (\"0\" + (formatted.getMonth() + 1)).slice(-2),\n  //       day = (\"0\" + formatted.getDate()).slice(-2);\n  //     this.formattedDate = [day, mnth, formatted.getFullYear()].join(\"/\");\n  //     console.log(this.formattedDate, \"formattedDate\")\n  //   }\n  // }\n\n  openDialog(row) {\n    const dialogRef = this.dialog.open(DeleteConfirmationPopupComponent, { disableClose: true });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      if (result) {\n        let deletebleIndex = this.indentData.indexOf(row);\n        this.indentData.splice(deletebleIndex, 1);\n        this.indentData = [...this.indentData];\n      }\n    })\n  }\n\n  // get the list of transporter list with combination of Destination ,source , Truck Type\n  getListOfTransporterCombination(transporter) {\n    this.isLoading = true;\n    this.transporterName = '';\n    this.modalTransporterList = '';\n    let data = {\n      \"destLoc\": this.destination,\n      \"souceLoc\": this.source,\n      \"trucktype\": transporter,\n      'date': moment(this.indentDate).format('DD/MM/YYYY')\n    }\n    let descriptionObj = this.truckTypeList.find(item => item.value == transporter)\n    if (descriptionObj) {\n      this.setTTEvalue(descriptionObj.description);\n    }\n    if (data) {\n      this.service.post_service(ApiserviceService.apisList.getTransporterListWithCombination, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.modalTransporterListvalues = response['data'];\n          if (this.modalTransporterListvalues.length > 0) {\n            $('#TransporterListModal').modal('show');\n          }\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.isLoading = false;\n    }\n  }\n\n  // setTransporterValue\n  setTransporterValue(modalTransporterList) {\n    $('#TransporterListModal').modal('hide');\n    this.transporterName = modalTransporterList;\n  }\n  getUserDestinationList(event) {\n    this.destination = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.getDestinationDescriptionDataList + filtervalue+'&forIndent='+true).subscribe(response => {\n        if (response['data']) {\n          this.descriptionList = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //set value destination\n  setDestination(value) {\n    //  this.destinationDesc = value;\n    setTimeout(() => {\n      this.destination = value;\n      this.truckType='';\n      this.getTruckTypesForDestList();\n    }, 200);\n  }\n\n  setDestinationDescription(value) {\n    setTimeout(() => {\n      this.destinationDesc = value;\n      this.truckType='';\n      this.getTruckTypesForDestList();\n    }, 200);\n  }\n\n  // openOtherTypesModal() {\n  //   if (this.truckType == 'OTHER') {\n  //     this.tempList = [...this.truckTypeForDestList];\n  //     $('#otherTruckTypesModal').modal('show');\n  //     this.getTruckTypesList();\n  //   }\n  // }\n  // closeOtherTruckTypeModal() {\n  //   $('#otherTruckTypesModal').modal('hide');\n  //   this.truckTypeList = [...this.tempList];\n  // }\n  // setSelectedTruckType() {\n  //   this.selectedTruckTypeFromSubList = this.truckType;\n  //   this.tempList = [...this.truckTypeForDestList];\n  //   console.log(\"selected \", this.selectedTruckTypeFromSubList);\n  //   let index = this.truckTypeList.findIndex(a => a.value == this.selectedTruckTypeFromSubList);\n  //   this.tempList.push(this.truckTypeList[index])\n\n  // }\n}\n\n\n","import { CustomDatePipeModule } from './../../date-pipe-shared.module';\nimport { ShareModuleModule } from 'src/app/public/share-module/share-module.module';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateIndentComponent } from './create-indent.component';\nimport { customMaterialModule } from '../../angular-material';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { DeleteConfirmationPopupComponent } from 'src/app/public/delete-confirmation-popup/delete-confirmation-popup.component';\n\nconst routes: Routes = [\n  { path: '', component: CreateIndentComponent },\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    FormsModule,\n    customMaterialModule,\n    LoaderModule,\n    NgxDatatableModule,\n    ShareModuleModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    CreateIndentComponent,\n  ],\n  entryComponents: [\n    CreateIndentComponent,\n    DeleteConfirmationPopupComponent\n  ]\n})\nexport class CreateIndentModule { }\n"],"sourceRoot":""}