{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/transporter/assign-trucks/assign-trucks.component.html","webpack:///./src/app/transporter/assign-trucks/assign-trucks.component.scss","webpack:///./src/app/transporter/assign-trucks/assign-trucks.component.ts","webpack:///./src/app/transporter/assign-trucks/assign-trucks.module.ts"],"names":[],"mappings":"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","file":"transporter-assign-trucks-assign-trucks-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h4 class=\\\"manulal-plan-header\\\">\\n    Assign Truck\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"Filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h4>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"manualplan-fields\\\" *ngIf=\\\"IsShow\\\">\\n    <div class=\\\"col-md-12 row\\\">\\n        <div class=\\\"col-md-12 padding-right-40\\\">\\n            <div class=\\\"row tab-loadslip-fields\\\">\\n      <div class=\\\"col-md-1 pr-0\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n            <input matInput disabled placeholder=\\\"From Date\\\" [matDatepicker]=\\\"fromDate\\\" [(ngModel)]=\\\"startDate\\\"\\n              name=\\\"startDate\\\" (dateChange)=\\\"addEvent('change', $event)\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #fromDate disabled=\\\"false\\\"></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pr-0\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n            <input matInput disabled placeholder=\\\"To Date\\\" [matDatepicker]=\\\"toDate\\\" [min]=\\\"startDate\\\"\\n              [(ngModel)]=\\\"endDate\\\" name=\\\"endDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #toDate [disabled]=\\\"!startDate\\\"></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pr-0\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Source\\\" (keyup)=\\\"getfilterSource($event)\\\" autocomplete=\\\"off\\\"\\n            [matAutocomplete]=\\\"sourceAutocomplete\\\" [(ngModel)]=\\\"sourceCode\\\" name=\\\"source\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n          <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\">\\n            <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n              <span matTooltip={{list.value}}>{{list.value}} - ({{list.description}})</span>\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </div>\\n      \\n      <div class=\\\"col-md-1 pr-0\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Destination\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n              [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\" (keyup)=\\\"getfilterDestination($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\"\\n                (click)=\\\"setDestDescription(list.description)\\\"\\n                (onSelectionChange)=\\\"setDestDescription(list.description)\\\">\\n                <span>{{list.value}}</span>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pr-0\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"State\\\"\\n              [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destination\\\"\\n              (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                <span>({{list.description}})</span>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2 pr-0\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"Truck Type\\\" [(ngModel)]=\\\"truckType\\\" name=\\\"truckType\\\" multiple>\\n              <mat-option *ngFor=\\\"let truck of truckList\\\" [value]=\\\"truck.value\\\"> {{truck.value}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <!-- <div class=\\\"col-md-1 pr-0\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n            <input matInput aria-label=\\\"Transporter\\\" placeholder=\\\"Transporter\\\"\\n              (keyup)=\\\"getfilterTransporter($event)\\\" autocomplete=\\\"off\\\" [matAutocomplete]=\\\"transporterAutocomplete\\\"\\n              [(ngModel)]=\\\"transporter\\\" name=\\\"transporter\\\">\\n            <mat-autocomplete #transporterAutocomplete=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let list of transporterList\\\" [value]=\\\"list.value\\\">\\n                <span>{{list.value}}</span>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </div> -->\\n      <div class=\\\"col-md-2 pr-0\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n            <input matInput [(ngModel)]=\\\"indentId\\\" placeholder=\\\"Indent Id\\\" name=\\\"indentId\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pr-0\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"Category\\\" [(ngModel)]=\\\"materialGrp\\\" name=\\\"materialGrp\\\" multiple>\\n              <mat-option *ngFor=\\\"let category of categoryList\\\" [value]=\\\"category\\\">{{category}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pr-0\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"status\\\" name=\\\"status\\\" multiple>\\n              <mat-option *ngFor=\\\"let data of statuses\\\" [value]=\\\"data.value\\\">{{data.key}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      \\n      </div>\\n    </div>\\n    <div class=\\\"pull-right\\\">\\n        <div class=\\\"search-fileds\\\">\\n          <button class=\\\"theme-small-button\\\" (click)=\\\"fiterData()\\\" matTooltip=\\\"Search\\\">\\n            <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <button class=\\\"theme-delete-button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear All\\\">\\n            <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <ngx-datatable #table class='material  ngx-table-custom-scroll ngx-table-tr-custom-scroll' [rows]='transporterIndents'\\n    [scrollbarH]=\\\"true\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\"\\n    [externalPaging]=\\\"true\\\" [count]=\\\"page.count\\\" [limit]=\\\"page.limit\\\" [offset]=\\\"page.offset\\\"\\n    (page)=\\\"datatablePageData($event)\\\">\\n    <ngx-datatable-column name=\\\"Source\\\" [width]=\\\"70\\\" [sortable]=\\\"true\\\" prop=\\\"SouceLocation\\\" [frozenLeft]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.SouceLocation}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Disp Date\\\" [width]=\\\"90\\\" [sortable]=\\\"true\\\" prop=\\\"dispatchDate\\\" [frozenLeft]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.dispatchDate | customDateFormat | date:'dd-MMM-yyyy'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Dest\\\" [width]=\\\"70\\\" [sortable]=\\\"true\\\" prop=\\\"destination\\\" [frozenLeft]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destination}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Dest Description\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"destDis\\\"\\n    [frozenLeft]=\\\"freezeLeftValue\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destDis}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Truck/Cont Type\\\" [width]=\\\"120\\\" [sortable]=\\\"true\\\" prop=\\\"truckType\\\" >\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.truckType}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Transporter\\\" [width]=\\\"120\\\" [sortable]=\\\"true\\\" prop=\\\"transporter\\\" >\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.transporter}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Created Date\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"updateUser\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.insertDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Port Of Dispatch\\\" [width]=\\\"120\\\" [sortable]=\\\"true\\\" prop=\\\"pod\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.pod}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Country Of Destination\\\" [width]=\\\"120\\\" [sortable]=\\\"true\\\" prop=\\\"destCountryName\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destCountryName}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Indent Id\\\" [width]=\\\"170\\\" [sortable]=\\\"true\\\" prop=\\\"indentId\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.indentId}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Fr\\\" [width]=\\\"40\\\" [sortable]=\\\"true\\\" prop=\\\"isFreightAvailable\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.isFreightAvailable}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Cat\\\" [width]=\\\"80\\\" [sortable]=\\\"true\\\" prop=\\\"materailGrp\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.materailGrp}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Indented\\\" [width]=\\\"70\\\" [sortable]=\\\"true\\\" prop=\\\"indented\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.indented}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Cancelled\\\" [width]=\\\"70\\\" [sortable]=\\\"true\\\" prop=\\\"cancelled\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.cancelled}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Net Indented\\\" [width]=\\\"70\\\" [sortable]=\\\"true\\\" prop=\\\"netRequested\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.netRequested}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Trans Confirmed\\\" [width]=\\\"80\\\" [sortable]=\\\"true\\\" prop=\\\"confirmed\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n        <div *ngIf=\\\"(row.status != 'CANCELLED') && (row.status != 'CLOSED') \\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-confirmed'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-confirmed']\\\">\\n            <span class=\\\"edit-label\\\">\\n              {{row.confirmed?row.confirmed:0}}\\n            </span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <mat-form-field *ngIf=\\\"editing[rowIndex + '-confirmed']\\\">\\n            <input matInput (blur)=\\\"updateValue($event, 'confirmed', row)\\\" autocomplete=\\\"off\\\"\\n              [value]=\\\"row.confirmed?row.confirmed:0\\\" (keypress)=\\\"service.numberOnly($event)\\\" />\\n          </mat-form-field>\\n        </div>\\n        <div *ngIf=\\\"(row.status == 'CANCELLED') && (row.status == 'CLOSED')\\\">\\n          {{row.confirmed?row.confirmed:0}}\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Trans Declined\\\" [width]=\\\"80\\\" [sortable]=\\\"true\\\" prop=\\\"declined\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n        <div *ngIf=\\\"(row.status != 'CANCELLED') && (row.status != 'CLOSED')\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-declined'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-declined']\\\">\\n            <span class=\\\"edit-label\\\">\\n              {{row.declined?row.declined:0}}\\n            </span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <mat-form-field *ngIf=\\\"editing[rowIndex + '-declined']\\\">\\n            <input matInput (change)=\\\"updateValue($event, 'declined', row)\\\" autocomplete=\\\"off\\\" [value]=\\\"row.declined\\\"\\n              (keypress)=\\\"service.numberOnly($event)\\\" />\\n          </mat-form-field>\\n        </div>\\n        <div *ngIf=\\\"(row.status == 'CANCELLED') && (row.status == 'CLOSED')\\\">\\n          {{row.declined?row.declined:0}}\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"To Be Confirmed\\\" [width]=\\\"80\\\" [sortable]=\\\"true\\\" prop=\\\"netRequested\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.toBeConfirmed?row.toBeConfirmed:0}}\\n        <!-- {{(row.netRequested) - (row.confirmed +row.declined)}} -->\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Reported\\\" [width]=\\\"70\\\" [sortable]=\\\"true\\\" prop=\\\"reported\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.reported?row.reported:0}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Rejected\\\" [width]=\\\"70\\\" [sortable]=\\\"true\\\" prop=\\\"rejected\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.rejected?row.rejected:0}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Net Balance\\\" [width]=\\\"70\\\" [sortable]=\\\"true\\\" prop=\\\"netBalance\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.netBalance?row.netBalance:0}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Indent Age (Days)\\\" [width]=\\\"75\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"indentAge\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.indentAge}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Status\\\" [width]=\\\"80\\\" [sortable]=\\\"true\\\" prop=\\\"status\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.status}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"insertUser\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.insertUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Update User\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"updateUser\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.updateUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Comments\\\" [width]=\\\"130\\\" [sortable]=\\\"true\\\" prop=\\\"comments\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <div [title]=\\\"row.comments\\\" [ngClass]=\\\"{'cursor-pointer':row.comments?.length>10}\\\"\\n          (click)=\\\"showComments(row.comments)\\\" *ngIf=\\\"row.comments\\\">\\n          {{(row.comments?.length>10)? (row.comments | slice:0:10)+'..':(row.comments)}}\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Actions\\\" [width]=\\\"80\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <button class=\\\"btn theme-small-button\\\" (click)=\\\"UpdateIndent(row)\\\"\\n          [disabled]=\\\"(row.status == 'CANCELLED') || (row.status == 'CLOSED')\\\" matTooltip=\\\"Update Indent\\\">\\n          <i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n        <!-- <button class=\\\"theme-delete-button\\\" (click)=\\\"assignDriver(row)\\\" matTooltip=\\\"Assign Driver\\\">\\n            <i class=\\\"fa fa-truck\\\" aria-hidden=\\\"true\\\"></i>\\n          </button> -->\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <!-- Footer Template starts -->\\n    <ngx-datatable-footer>\\n      <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n        let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n        <div class=\\\"page-count\\\">\\n          <span *ngIf=\\\"selectedCount\\\">\\n            {{selectedCount.toLocaleString()}} Selected |\\n          </span>\\n          Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n              (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n          {{(rowCount)}} records.\\n        </div>\\n        <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n          [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\"\\n          [size]=\\\"pageSize\\\" [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n          (change)=\\\"table.onFooterPage($event)\\\">\\n        </datatable-pager>\\n      </ng-template>\\n    </ngx-datatable-footer>\\n    <!-- Footer Template Ends -->\\n  </ngx-datatable>\\n\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"integrationMsgModal\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Comment</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>{{commentsMsg}}</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <!-- <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"saveComments()\\\">Save</button> -->\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","module.exports = \".manualplan-fields {\\n  background-color: transparent;\\n  box-shadow: none;\\n  padding: 0px; }\\n  .manualplan-fields p > i {\\n    cursor: pointer; }\\n  .manualplan-fields .col-md-3 {\\n    padding: 0px 15px; }\\n  .manualplan-fields .wid-12p {\\n    flex: 0 0 12%;\\n    max-width: 12%; }\\n  .manualplan-fields .wid-13p {\\n    flex: 0 0 13%;\\n    max-width: 13%; }\\n  .manualplan-fields .form-group {\\n    margin-bottom: 0; }\\n  .manualplan-fields .form-group .mat-form-field .mat-form-field-wrapper {\\n      padding-bottom: 0.5em !important; }\\n  .manualplan-fields label {\\n    display: block; }\\n  .margin-top-10 {\\n  margin-top: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbnNwb3J0ZXIvYXNzaWduLXRydWNrcy9DOlxcVXNlcnNcXEFiaGV5U29vZFxcT25lRHJpdmUgLSBBY2NlbGFscGhhIFNvZnR3YXJlIFB2dC4gTHRkXFxEZXNrdG9wXFxhdG9tIGFwb2xsb1xcQXBvbGxvXFxOZXctIEFudXJhZ1xcYXRvbS11aS9zcmNcXGFwcFxcdHJhbnNwb3J0ZXJcXGFzc2lnbi10cnVja3NcXGFzc2lnbi10cnVja3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDSSw2QkFBNkI7RUFDN0IsZ0JBQWdCO0VBQ2hCLFlBQVksRUFBQTtFQUhoQjtJQUtRLGVBQWUsRUFBQTtFQUx2QjtJQVFRLGlCQUFpQixFQUFBO0VBUnpCO0lBV1EsYUFBYTtJQUNiLGNBQWMsRUFBQTtFQVp0QjtJQWVRLGFBQWE7SUFDYixjQUFjLEVBQUE7RUFoQnRCO0lBbUJRLGdCQUFnQixFQUFBO0VBbkJ4QjtNQXNCZ0IsZ0NBQWdDLEVBQUE7RUF0QmhEO0lBMkJRLGNBQWMsRUFBQTtFQUd0QjtFQUNJLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvdHJhbnNwb3J0ZXIvYXNzaWduLXRydWNrcy9hc3NpZ24tdHJ1Y2tzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vYXNzZXRzL3N0eWxlcy92YXJpYWJsZXMnO1xuQGltcG9ydCAnLi4vLi4vLi4vYXNzZXRzL3N0eWxlcy9taXhpbnMnO1xuXG5cbi5tYW51YWxwbGFuLWZpZWxkc3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIHBhZGRpbmc6IDBweDtcbiAgICBwID4gaXtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAuY29sLW1kLTN7XG4gICAgICAgIHBhZGRpbmc6IDBweCAxNXB4O1xuICAgIH1cbiAgICAud2lkLTEycHtcbiAgICAgICAgZmxleDogMCAwIDEyJTtcbiAgICAgICAgbWF4LXdpZHRoOiAxMiU7XG4gICAgfVxuICAgIC53aWQtMTNwe1xuICAgICAgICBmbGV4OiAwIDAgMTMlO1xuICAgICAgICBtYXgtd2lkdGg6IDEzJTtcbiAgICB9XG4gICAgLmZvcm0tZ3JvdXB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgIC5tYXQtZm9ybS1maWVsZCB7XG4gICAgICAgICAgICAubWF0LWZvcm0tZmllbGQtd3JhcHBlcntcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMC41ZW0gIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBsYWJlbHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxufVxuLm1hcmdpbi10b3AtMTB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBcbn0iXX0= */\"","import { Component, OnInit, ViewChild, DoCheck } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as moment from 'moment'\nimport { DateAdapter, MAT_DATE_FORMATS, MatDatepickerInputEvent } from '@angular/material';\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/public/date.adapters';\nimport * as XLSX from 'xlsx';\nimport { HelperServiceService } from 'src/app/services/helper-service/helper-service.service';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { constants } from 'src/app/constants';\ndeclare var $: any\n\n@Component({\n  selector: 'app-assign-trucks',\n  templateUrl: './assign-trucks.component.html',\n  styleUrls: ['./assign-trucks.component.scss'],\n  providers: [\n    {\n      provide: DateAdapter, useClass: AppDateAdapter\n    },\n    {\n      provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\n    }\n  ]\n})\nexport class AssignTrucksComponent implements OnInit, DoCheck {\n  index: number;\n  transporterIndents = [];\n  gpsStatus: GpsStatus[] = [\n    { value: 'YES', viewValue: 'Yes' },\n    { value: 'NO', viewValue: 'No' },\n\n  ];\n  page = {\n    limit: 10,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n  isLoading: boolean;\n  destinationList: any[];\n  IsShow: boolean = true;\n  truckData = [];\n  driverData = [];\n  commentsMsg: string;\n  currentDateAsString = this.helperService.getTodayDateASString();\n  startDate = this.currentDateAsString;\n  endDate = this.currentDateAsString;\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  indentId = '';\n  destination = '';\n  destinationDesc: any;\n  descriptionList = [];\n  truckType = [];\n  objDriverData = {\n    indentId: '',\n    truckNumber: '',\n    truckType: '',\n    driver: '',\n    mobile: '',\n    licenseNumber: '',\n    rcWeight: '',\n    length: '',\n    width: '',\n    height: '',\n    isGPS: true,\n    gpsProvider: ''\n  };\n  gateSecurityTransportReport: any;\n  // minDate = new Date();\n  IsAssignDriver: boolean = false;\n  isClicked: any;\n  editing = {};\n  reportedTrucks: any[];\n  IsReportedIndentsShow: boolean;\n  numberofManualEntries: number;\n  toDate: any;\n  truckList = [];\n  transporter: any;\n  status: any;\n  materialGrp: any;\n  transporterList: any[];\n  categoryList: any;\n  statuses=[];\n  freezeLeftValue: boolean = false;\n  sourceList: any[];\n  sourceCode = '';\n  constructor(\n    private router: Router,\n    private activateRoute: ActivatedRoute,\n    public service: ApiserviceService,\n    private toastr: ToastrService,\n    private helperService: HelperServiceService\n  ) {\n    let data = {\n      'fromDispatchDate': this.startDate ? (moment(this.startDate).format(\"DD/MM/YYYY\")) : '',\n      'toDispatchDate': this.endDate ? (moment(this.endDate).format('DD/MM/YYYY')) : '',\n    };\n    this.getAssignTrucksData(data);\n\n  }\n  ngDoCheck(){\n    let width = $(window).width();\n    if(width < 1024) {\n      this.freezeLeftValue = false;\n    }\n    else {\n      this.freezeLeftValue = true;\n    }\n  }\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"assign-trucks\");\n    this.statuses = constants.indent_Filter_status_list;\n    // for getting truck type master\n    this.getTruckTypeMasterData();\n     //for getting category master data\n    this.getCategoryMasterData();\n\n  }\n\n  getAssignTrucksData(data) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.transporterIndent, data).subscribe(response => {\n      console.log(\"response\", response);\n      if (response['statusCode'] == 200) {\n        let responseData = response['data']\n        for (let item of responseData.indents) {\n          if ((item.netRequested) < (item.confirmed + item.declined)) {\n            item['toBeConfirmed'] = 0;\n          } else {\n            item['toBeConfirmed'] = (item.netRequested) - (item.confirmed + item.declined);\n          }\n        }\n        this.transporterIndents = responseData.indents;\n        this.transporterIndents = [...this.transporterIndents];\n        this.page.limit = responseData.pageLength;\n        this.page.count = responseData.total;\n        // this.page.offset = responseData.index;\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  onFooterPage(pageInfo){\n    console.log(pageInfo);\n    \n  }\n\n  // for getting truck type master\n  getTruckTypeMasterData() {\n    this.service.get_service(ApiserviceService.apisList.truckTypeMasterData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.truckList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    });\n  }\n\n  updateValue(event, cell, row) {\n    // this.editing[rowIndex + '-' + cell] = false;\n    let modifiedIndex = this.transporterIndents.findIndex(item => item.indentId == row.indentId);\n    this.transporterIndents[modifiedIndex][cell] = Number(event.target.value);\n    this.transporterIndents = [...this.transporterIndents];\n    console.log('UPDATED!', this.transporterIndents[modifiedIndex][cell]);\n  }\n  showFilter() {\n    this.IsShow = !this.IsShow;\n  }\n  //get filter destination result\n  getfilterDestination(event) {\n    this.destinationDesc = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.destinationList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        console.log(\"respio\", response)\n        this.destinationList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n\n  }\n\n  //clear All  the Data\n  clearAll() {\n    this.startDate = '';\n    this.endDate = '';\n    this.indentId = '';\n    this.destination = '';\n    this.destinationDesc = '';\n    this.descriptionList = [];\n    this.destinationList = [];\n    this.truckType = [];\n    this.endDate = '';\n    this.materialGrp=[];\n    this.status=[];\n    this.transporter='';\n    this.sourceList=[];\n    this.sourceCode = '';\n  }\n\n  //set value destination\n  setDestination(value) {\n    //  this.destinationDesc = value;\n    this.destination = value;\n  }\n\n  //set value to destination description\n  setDestDescription(value) {\n    this.destinationDesc = value;\n  }\n\n\n  getUserDestinationList(event) {\n    this.destination = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.getDestinationDescriptionDataList + event.target.value).subscribe(response => {\n        if (response['data']) {\n          this.descriptionList = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n  refreshData() {\n    this.page.offset = 0;\n    this.clearAll();\n    this.currentDateAsString = this.helperService.getTodayDateASString();\n    this.startDate = this.currentDateAsString;\n    this.endDate = this.helperService.getTodayDateASString();\n    let data = {\n      'fromDispatchDate': this.startDate ? (moment(this.startDate).format(\"DD/MM/YYYY\")) : '',\n      'toDispatchDate': this.endDate ? (moment(this.endDate).format('DD/MM/YYYY')) : '',\n    };\n    this.getAssignTrucksData(data);\n  }\n  export() {\n\n    if (this.transporterIndents.length > 0) {\n      this.isLoading = true;\n      let startDate;\n      let endDate;\n      if (this.startDate && this.startDate != null) {\n        startDate = moment(new Date(this.startDate)).format(\"DD/MM/YYYY\")\n      }\n      if (this.endDate && this.endDate != null) {\n        endDate = moment(new Date(this.endDate)).format(\"DD/MM/YYYY\")\n      }\n      let data = {\n        // 'indentID': this.indentId,\n        // 'destination': this.destination,\n        // 'fromDispatchDate': startDate,\n        // 'toDispatchDate': endDate,\n        // 'truckType': this.truckType,\n        'fromDispatchDate': startDate,\n        'toDispatchDate': endDate,\n        'indentID': this.indentId,\n        'transporter': this.transporter,\n        'truckType': this.truckType,\n        'destination': this.destination,\n        'materialGrp': this.materialGrp,\n        'status': this.status,\n        'index': this.index,\n        'pageLength': this.page.count,\n        'source':this.sourceCode\n      }\n      this.service.post_service(ApiserviceService.apisList.transporterIndent, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          let newViewPlanData = response['data'].indents;\n          console.log(\"newViewPlanData\", newViewPlanData);\n          let excelRawData = newViewPlanData;\n          let newExcelData = [];\n          for (let i = 0; i < excelRawData.length; i++) {\n            if ((excelRawData[i].netRequested) < (excelRawData[i].confirmed + excelRawData[i].declined)) {\n              excelRawData[i]['toBeConfirmed'] = 0;\n            } else {\n              excelRawData[i]['toBeConfirmed'] = (excelRawData[i].netRequested) - (excelRawData[i].confirmed + excelRawData[i].declined);\n            }\n            let data = {\n              \"Source\": excelRawData[i].SouceLocation,\n              \"Dispatch Date\": this.service.customDateFormat(excelRawData[i].dispatchDate),\n              \"Destination\": excelRawData[i].destination,\n              \"Dest Description\": excelRawData[i].destDis,\n              \"Truck/Container Type\": excelRawData[i].truckType,\n              \"Transporter\": excelRawData[i].transporter,\n              \"Created Date\": this.service.customDateTimeFormat(excelRawData[i].insertDate),\n              \"Port Of Discharge\": excelRawData[i].pod,\n              \"Country Of Destination\": excelRawData[i].destCountryName,\n              \"Indent Id\": excelRawData[i].indentId,\n              \"Freight Available\": excelRawData[i].isFreightAvailable,\n              \"Category\": excelRawData[i].materailGrp,\n              \"Indented\": excelRawData[i].indented,\n              \"Cancelled\": excelRawData[i].cancelled,\n              \"Net Indented\": excelRawData[i].netRequested,\n              \"Trans Confirmed\": excelRawData[i].confirmed,\n              \"Trans Declined\": excelRawData[i].declined,\n              \"To Be Confirmed\": excelRawData[i].toBeConfirmed,\n              \"Reported\": excelRawData[i].reported,\n              \"Rejected\": excelRawData[i].rejected,\n              \"Net Balance\": excelRawData[i].netBalance,\n              \"Indent Age (Days)\": excelRawData[i].indentAge,\n              \"Status\": excelRawData[i].status,\n              \"Insert User\": excelRawData[i].insertUser,\n              \"Update User\": excelRawData[i].updateUser,\n              \"Comments\": excelRawData[i].comments\n            }\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'assignTrucks.xlsx');\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.toastr.error(\"No records found to export\", \"Error!\");\n    }\n\n  }\n\n  //server side pagination \n  datatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    this.transporterIndents = [];\n    this.index = pageInfo.offset;\n    let startDate; let endDate;\n    if (this.startDate && this.startDate != null) {\n      startDate = moment(new Date(this.startDate)).format(\"DD/MM/YYYY\")\n    }\n    if (this.endDate && this.endDate != null) {\n      endDate = moment(new Date(this.endDate)).format(\"DD/MM/YYYY\")\n    }\n    let datatabledata = {\n      index: pageInfo.offset,\n      pageLength: pageInfo.pageSize,\n      indentID: this.indentId,\n      destination: this.destination,\n      fromDispatchDate: startDate,\n      toDispatchDate: endDate,\n      truckType: this.truckType,\n      source : this.sourceCode\n    }\n    this.getAssignTrucksData(datatabledata);\n\n  }\n\n  //update Indent from Transporter\n  UpdateIndent(row) {\n    this.isLoading = true;\n    let data = {\n      confirmed: row.confirmed,\n      declined: row.declined,\n      indentId: row.indentId\n    }\n    this.service.post_service(ApiserviceService.apisList.updateIndent, data).subscribe(response => {\n      console.log(response)\n      if (response['statusCode'] == 200) {\n        let updatebleIndex = this.transporterIndents.findIndex(resp => resp.indentId == row.indentId);\n        let responseData = response['data'];\n        if ((responseData.netRequested) < (responseData.confirmed + responseData.declined)) {\n          responseData['toBeConfirmed'] = 0;\n        } else {\n          responseData['toBeConfirmed'] = (responseData.netRequested) - (responseData.confirmed + responseData.declined);\n        }\n        this.transporterIndents[updatebleIndex] = responseData;\n        this.transporterIndents = [...this.transporterIndents];\n        this.toastr.success(response['message'])\n        this.editing = {};\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  //assignDriver Details\n  assignDriver(rowData) {\n    this.reportedTrucks = [];\n    let totalTrucksRequested = rowData.indented;\n    this.numberofManualEntries = totalTrucksRequested - this.reportedTrucks.length;\n    let resporterTrucks = rowData.reportedTrucks;\n    this.reportedTrucks = resporterTrucks;\n    this.reportedTrucks = [...this.reportedTrucks];\n    // this.manualTruckAssign();\n    this.IsReportedIndentsShow = true;\n    console.log(this.reportedTrucks)\n  }\n  //filter creteria\n  fiterData() {\n    this.table.offset = 0;\n    let startDate;\n    let endDate;\n    if (this.startDate && this.startDate != null) {\n      startDate = moment(new Date(this.startDate)).format(\"DD/MM/YYYY\")\n    }\n    if (this.endDate && this.endDate != null) {\n      endDate = moment(new Date(this.endDate)).format(\"DD/MM/YYYY\")\n    }\n    let data = {\n      // indentID: this.indentId,\n      // destination: this.destination,\n      // fromDispatchDate: startDate,\n      // toDispatchDate: endDate,\n      // truckType: this.truckType,\n      'fromDispatchDate': startDate,\n      'toDispatchDate': endDate,\n      'indentID': this.indentId,\n      'transporter': this.transporter,\n      'truckType': this.truckType,\n      'destination': this.destination,\n      'materialGrp': this.materialGrp,\n      'status': this.status,\n      'source':this.sourceCode\n    }\n    if (this.startDate) {\n      if (this.endDate) {\n        this.getAssignTrucksData(data);\n      } else {\n        this.toastr.error(\"Please select To Date\", \"! Error\")\n      }\n    } else {\n      this.getAssignTrucksData(data);\n    }\n\n  }\n\n// filter Transporter details\ngetfilterTransporter(event) {\n  let filtervalue = event.target.value;\n  if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n    this.transporterList = [];\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.searchFilter + '?transporter=' + filtervalue).subscribe(response => {\n      this.transporterList = response['data'].searchResult;\n      this.isLoading = false;\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n}\n//for getting category master data\ngetCategoryMasterData() {\n  this.service.get_service(ApiserviceService.apisList.categoryMasterData).subscribe(response => {\n    if (response['statusCode'] == 200) {\n      this.categoryList = response['data'];\n    } else {\n      this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n    }\n  }, (err) => {\n    this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n  })\n}\n\n  showComments(comments) {\n    this.commentsMsg = comments;\n    $('#integrationMsgModal').modal('show');\n\n  }\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    console.log(event.value)\n    if(event.target.value){\n      let checkToDate:any = this.endDate;\n      if(this.endDate == this.currentDateAsString ){\n        checkToDate = new Date();\n      }\n      if(this.endDate && (this.startDate > checkToDate)){\n        this.endDate = '';\n      }\n    }\n    // this.endDate = '';\n  }\n\n  getfilterSource(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.sourceList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        console.log(\"respio\", response)\n        this.sourceList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n}\n\nexport interface GpsStatus {\n  value: string;\n  viewValue: string;\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AssignTrucksComponent } from './assign-trucks.component';\nimport { customMaterialModule } from '../../angular-material';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\n\n\nconst routes: Routes = [\n  { path: '', component: AssignTrucksComponent},\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    FormsModule,\n    customMaterialModule,\n    NgxDatatableModule,\n    LoaderModule,\n    CustomDatePipeModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    AssignTrucksComponent\n  ]\n})\nexport class AssignTrucksModule { }\n"],"sourceRoot":""}