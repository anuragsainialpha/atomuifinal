{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/planner/view-plan/view-plan.component.html","webpack:///./src/app/planner/view-plan/view-plan.component.scss","webpack:///./src/app/planner/view-plan/view-plan.component.ts","webpack:///./src/app/planner/view-plan/view-plan.module.ts"],"names":[],"mappings":"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","file":"planner-view-plan-view-plan-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    <b> Dispatch Plan > View Plan</b>\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"Filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n  <div class=\\\"manualplan-fields\\\">\\n    <div class=\\\"col-md-12 row\\\" *ngIf=\\\"isShow\\\">\\n      <div class=\\\"col-md-12 padding-right-40\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"formPicker\\\" placeholder=\\\"From Date\\\" [(ngModel)]=\\\"fromDate\\\"\\n                  name=\\\"fromDate\\\" (dateChange)=\\\"addEvent('change', $event)\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"formPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #formPicker disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"toPicker\\\" [min]=\\\"fromDate\\\" placeholder=\\\"To Date\\\"\\n                  [(ngModel)]=\\\"toDate\\\" name=\\\"toDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toPicker [disabled]=\\\"!fromDate\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <!-- Source Input editble for DP_REP role & for external wareHouses -->\\n          <!-- Source With Drop doem for DPREP and disable input field for NORMAL USERs -->\\n          <div class=\\\"col-md-1 pl-0\\\" *ngIf = \\\"isSoureDisable()\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Source\\\" (keyup)=\\\"getfilterSource($event)\\\" [disabled]=\\\"(isSoureDisable()) \\\"\\n                autocomplete=\\\"off\\\" [matAutocomplete]=\\\"sourceAutocomplete\\\" [(ngModel)]=\\\"sourceCode\\\" name=\\\"source\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\" >\\n                <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n                  <span matTooltip={{list.value}}>{{list.value}} - ({{list.description}})</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\" *ngIf = \\\"!isSoureDisable()\\\">\\n              <div class=\\\"form-group cust-form-group\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                  <mat-select placeholder=\\\"Source\\\" [(ngModel)]=\\\"sourceCodeList\\\" name=\\\"sourceCodeList\\\"\\n                    multiple [disabled]=\\\"(isSoureDisable()) \\\">\\n                    <mat-option *ngFor=\\\"let source of openPlanSourceList\\\" [value]=\\\"source\\\">{{source}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Destination\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n                  [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\" (keyup)=\\\"getUserSearchData($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\"\\n                    (click)=\\\"setDestDescription(list.description)\\\"\\n                    (onSelectionChange)=\\\"setDestDescription(list.description)\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"State\\\"\\n                  [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destination\\\"\\n                  (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                    (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                    <span>({{list.description}})</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Material Code\\\" aria-label=\\\"Material Code\\\"\\n                  [matAutocomplete]=\\\"materialCodeAutocomplete\\\" [(ngModel)]=\\\"materialCode\\\" name=\\\"materialCode\\\"\\n                  (keyup)=\\\"filterMaterialCode($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #materialCodeAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of materilcodelist\\\" [value]=\\\"list.value\\\"\\n                    (click)=\\\"setMaterialDescription(list.description)\\\"\\n                    (onSelectionChange)=\\\"setMaterialDescription(list.description)\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Material Description\\\" aria-label=\\\"Material Description\\\"\\n                  [matAutocomplete]=\\\"materialDescritionAutocomplete\\\" [(ngModel)]=\\\"materialDescription\\\"\\n                  name=\\\"materialDescription\\\" (keyup)=\\\"filterMaterialDescription($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #materialDescritionAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of materialDescriptionList\\\" [value]=\\\"list.description\\\"\\n                    (click)=\\\"setMaterialCode(list.value)\\\" (onSelectionChange)=\\\"setMaterialCode(list.value)\\\">\\n                    <span>{{list.description}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <mat-select placeholder=\\\"Category\\\" [(ngModel)]=\\\"materialGroup\\\" name=\\\"materialGroup\\\" multiple>\\n                  <mat-option *ngFor=\\\"let category of categoryList\\\" [value]=\\\"category\\\">{{category}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"MKT Segment\\\" [(ngModel)]=\\\"mktsegment\\\" name=\\\"mktsegment\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let mktsegment of mktsegmentList\\\" [value]=\\\"mktsegment\\\">\\n                    {{mktsegment}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Plan Id\\\" [(ngModel)]=\\\"planId\\\" name=\\\"planId\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Plan Status\\\" [(ngModel)]=\\\"planStatus\\\" name=\\\"planStatus\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let item of planStatusList\\\" [value]=\\\"item.value\\\">\\n                    {{item.key}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"status\\\" name=\\\"status\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let data of statuses\\\" [value]=\\\"data.value\\\">{{data.key}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Insert User\\\" [(ngModel)]=\\\"insertUser\\\" name=\\\"insertUser\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Update User\\\" [(ngModel)]=\\\"updateUser\\\" name=\\\"updateUser\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <mat-select placeholder=\\\"Priority\\\" [(ngModel)]=\\\"priority\\\" name=\\\"priority\\\" multiple>\\n                  <mat-option value=\\\"ISNULL\\\">ISNULL</mat-option>\\n                  <mat-option *ngFor=\\\"let priority of priorityList\\\" [value]=\\\"priority\\\">{{priority}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"pull-right\\\">\\n        <div class=\\\"search-fileds\\\">\\n          <button class=\\\"theme-small-button\\\" (click)=\\\"plannerSearch()\\\" matTooltip=\\\"Search\\\">\\n            <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <button class=\\\"theme-delete-button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear All\\\">\\n            <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <!--  This filter will visible other user insted of new due allignment -->\\n    <!-- <div class=\\\"row\\\" *ngIf=\\\"check_Role_DP_REP != roles.planner3\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"row\\\">\\n          <ng-container >\\n           <div class=\\\"col-md-1 pr-0\\\">\\n             <div class=\\\"form-group\\\">\\n               <mat-form-field>\\n                 <input matInput placeholder=\\\"Insert User\\\" [(ngModel)]=\\\"insertUser\\\" name=\\\"insertUser\\\">\\n               </mat-form-field>\\n             </div>\\n           </div>\\n         </ng-container>\\n        </div>\\n      </div>\\n    </div> -->\\n  </div>\\n  <div class=\\\"ngx-table-custom-scroll ngx-table-tr-custom-scroll\\\">\\n    <ngx-datatable class='material' #table [rows]='dispatchPlanList' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\n      [scrollbarH]=\\\"true\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [externalPaging]=\\\"true\\\" [limit]=\\\"page.limit\\\"\\n      [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\" (page)=\\\"datatablePageData($event)\\\" [summaryRow]=\\\"true\\\"\\n      [summaryHeight]=\\\"'auto'\\\" [summaryPosition]=\\\"'bottom'\\\" [selected]=\\\"selected\\\" [selectionType]=\\\"'checkbox'\\\"\\n      [selectAllRowsOnPage]=\\\"false\\\">\\n      <ngx-datatable-column name=\\\"Plan Id\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"planId\\\"\\n        [summaryFunc]=\\\"emptySumm\\\" [frozenLeft]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.planId}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Disp Date\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"dispatchDate\\\"\\n        [frozenLeft]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.dispatchDate | customDateFormat | date:'dd-MMM-yyyy'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Source\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"sourceLocation\\\"\\n        [frozenLeft]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.sourceLocation}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Dest\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"destinationLocation\\\"\\n        [frozenLeft]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.destinationLocation}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Material Code\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"itemId\\\"\\n        [frozenLeft]=\\\"freezeLeftValue\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.itemId}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Material Description\\\" [width]=\\\"220\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"itemDescription\\\" [frozenLeft]=\\\"freezeLeftValue\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.itemDescription}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Dest Description\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"destinationDescription\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.destinationDescription}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Cat\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"category\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.category}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <!-- <ngx-datatable-column name=\\\"User\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"category\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.insertUser}}\\n        </ng-template>\\n      </ngx-datatable-column> -->\\n      <ngx-datatable-column name=\\\"TTE\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"tte\\\"\\n        [summaryTemplate]=\\\"tteCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.tte}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Batch\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"batchCode\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.batchCode}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Pr\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"priority\\\"\\n        [summaryFunc]=\\\"emptySumm\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.priority}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Mkt Seg\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"marketSegment\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.marketSegment}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Plan Qty\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"quantity\\\"\\n        [summaryTemplate]=\\\"planQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.quantity?row.quantity:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"App Qty\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"approvedQuantity\\\"\\n        [summaryTemplate]=\\\"apprQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.approvedQuantity?row.approvedQuantity:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Un Appr Qty\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"deletedQuantity\\\" [summaryTemplate]=\\\"unapprQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.unapprovedQuantity?row.unapprovedQuantity:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Appr Del\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"deletedApprQuantity\\\" [summaryTemplate]=\\\"apprDeleteQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.deletedApprQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Un Appr Del\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"deletedUnApprQuantity\\\" [summaryTemplate]=\\\"unapprDeleteQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.deletedUnApprQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Reserved\\\" [width]=\\\"65\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"reservedQuantity\\\"\\n        [summaryTemplate]=\\\"reservedQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.reservedQuantity?row.reservedQuantity:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Loaded\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"loaded\\\"\\n        [summaryTemplate]=\\\"loadedQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.loaded?row.loaded:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Disp\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"dispatchedQuantity\\\"\\n        [summaryTemplate]=\\\"dispatchedQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.dispatchedQuantity?row.dispatchedQuantity:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Avail Qty\\\" [width]=\\\"65\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"availableQuantity\\\" [summaryTemplate]=\\\"availableQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.availableQuantity?row.availableQuantity:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Total Avail Qty\\\" [width]=\\\"65\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"availableQuantity\\\" [summaryTemplate]=\\\"totalAvailableQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.totalAvailableQuantity?row.totalAvailableQuantity:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Avail TTE\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"availbleTTE\\\"\\n        [summaryTemplate]=\\\"totalAvailableTTEPercentageCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.availbleTTE | number : '1.2-2' }}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Truck Count\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"truckCount\\\"\\n        [summaryTemplate]=\\\"truckPercentageCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.truckCount | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Weight (Kg)\\\" [width]='60' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"Weight\\\"\\n        [summaryTemplate]=\\\"weightCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.weight | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Available Weight (Kg)\\\" [width]='80' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"totalWeight\\\" [summaryTemplate]=\\\"totalWeightCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.totalWeight | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Weight Util (%) \\\" [width]='60' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"weightUtil\\\" [summaryTemplate]=\\\"totalWeightUtilCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.weightUtil | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Volume (CUMTR)\\\" [width]='70' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"Volume\\\"\\n        [summaryTemplate]=\\\"volumeCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.volume | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Available Volume (CUMTR)\\\" [width]='110' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"totalVolume\\\" [summaryTemplate]=\\\"totalVolumeCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.totalVolume | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Volume Util (%)\\\" [width]='80' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"volume\\\"\\n        [summaryTemplate]=\\\"totalVolumeUtilCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.volumeUtil | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Plan Status\\\" [width]='90' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"appStatus\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.status}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Insert User\\\" [width]='145' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"insertUser\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.insertUser}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Update User\\\" [width]='145' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"updateUser\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.updateUser}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Insert Date\\\" [width]='130' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"insertDate\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.insertDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Update Date\\\" [width]='130' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"updateDate\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.updateDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Plan Age (Days)\\\" [width]='70' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"planAge\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.planAge}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Comments\\\" [width]='100' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"comments\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          <span [attr.title]=\\\"row.comments\\\" (click)=\\\"showIntegrationMessage(row)\\\">{{\\n            (row.comments?.length>9)? (row.comments | slice:0:9)+'..':(row.comments)}}</span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Status\\\" [width]='150' [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"appStatus\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          <button class=\\\"btn btn-sm lightgreen-button\\\"\\n            [ngClass]=\\\"(row.appStatus=='APPROVED')?'lightgreen-button':'light-red-color'\\\">\\n            {{row.appStatus}}\\n          </button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column [width]=\\\"50\\\" [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"false\\\"\\n        [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-header-template let-value=\\\"value\\\" let-allRowsSelected=\\\"allRowsSelected\\\"\\n          let-selectFn=\\\"selectFn\\\" let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\">\\n          <input type=\\\"checkbox\\\" [checked]=\\\"allRowsSelected\\\"\\n            (change)=\\\"selectFn(!allRowsSelected);onSelectAll($event)\\\" />\\n        </ng-template>\\n        <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-isSelected=\\\"isSelected\\\" let-row=\\\"row\\\"\\n          let-rowIndex=\\\"rowIndex\\\" let-onCheckboxChangeFn=\\\"onCheckboxChangeFn\\\">\\n          <input type=\\\"checkbox\\\" [checked]=\\\"isSelected\\\" (change)=\\\"onCheckboxChangeFn($event);onSelect($event,row)\\\" />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <!-- Footer Template starts -->\\n      <ngx-datatable-footer>\\n        <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n          let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n          <div class=\\\"page-count\\\">\\n            <span *ngIf=\\\"selectedCount\\\">\\n              {{selectedCount.toLocaleString()}} Selected |\\n            </span>\\n            Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n            (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n            {{(rowCount)}} records.\\n          </div>\\n          <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n            [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\" [size]=\\\"pageSize\\\"\\n            [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\" (change)=\\\"table.onFooterPage($event)\\\">\\n          </datatable-pager>\\n        </ng-template>\\n      </ngx-datatable-footer>\\n      <!-- Footer Template Ends -->\\n    </ngx-datatable>\\n\\n    <!-- Table bottom grid columns -->\\n    <ng-template #tteCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{(tteSum)?(tteSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #planQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{planQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #apprQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{apprQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #unapprQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{unapprQtySum }}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #apprDeleteQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{apprDeleteQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #unapprDeleteQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{unapprDeleteQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #reservedQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{reservedQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #loadedQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{loadedQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #dispatchedQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{dispatchedQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #availableQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{availableQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalAvailableQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{totalAvailableQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #truckPercentageCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{(TruckPercentageSum)?(TruckPercentageSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalAvailableTTEPercentageCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalTTEPercentageSum)?(totalTTEPercentageSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #weightCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(weightSum)?(weightSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalWeightCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalWeightSum)?(totalWeightSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalWeightUtilCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalWeightUtilSum)?(totalWeightUtilSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #volumeCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(volumeSum)?(volumeSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalVolumeCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalVolumeSum)?(totalVolumeSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalVolumeUtilCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalVolumeUtilSum)?(totalVolumeUtilSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </div>\\n</div>\\n<div id=\\\"commnetsModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Comments</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        {{modalComment}}\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYW5uZXIvdmlldy1wbGFuL3ZpZXctcGxhbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { HelperServiceService } from './../../services/helper-service/helper-service.service';\nimport { Component, OnInit, ViewChild, ChangeDetectionStrategy, DoCheck } from '@angular/core';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { DateAdapter, MAT_DATE_FORMATS, MatDatepickerInputEvent } from '@angular/material';\nimport { AppDateAdapter, APP_DATE_FORMATS } from '../../public/date.adapters';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\nimport * as XLSX from 'xlsx';\nimport { constants } from '../../constants';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport * as moment from 'moment';\ndeclare var $: any;\nexport interface State {\n  flag: string;\n  name: string;\n  population: string;\n}\n\n@Component({\n  selector: 'app-view-plan',\n  templateUrl: './view-plan.component.html',\n  styleUrls: ['./view-plan.component.scss'],\n  providers: [\n    {\n      provide: DateAdapter, useClass: AppDateAdapter\n    },\n    {\n      provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\n    }\n  ],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class ViewPlanComponent implements OnInit, DoCheck {\n  ngDoCheck(){\n    let width = $(window).width();\n    if(width < 1024) {\n      this.freezeLeftValue = false;\n    }\n    else {\n      this.freezeLeftValue = true;\n    }\n  }\n\n  totalTruckPercentage: number = 0;\n  totalTTEPercentageSum: number = 0;\n  openPlanSourceList = [];\n  tteSum: number = 0;\n  planQtySum: number = 0;\n  apprQtySum: number = 0;\n  unapprQtySum: number = 0;\n  apprDeleteQtySum: number = 0;\n  unapprDeleteQtySum: number = 0;\n  reservedQtySum: number = 0;\n  loadedQtySum: number = 0;\n  dispatchedQtySum: number = 0;\n  availableQtySum: number = 0;\n  totalAvailableQtySum: number = 0;\n  TruckPercentageSum: number = 0;\n  totalWeightSum: number = 0;\n  weightSum: number = 0;\n  volumeSum: number = 0;\n  totalWeightUtilSum: number = 0;\n  totalVolumeSum: number = 0;\n  totalVolumeUtilSum: number = 0;\n  standredFTLTTE: number;\n  standardFTLWeight: number;\n  standardFTLVolumne: number;\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  fileName: string = 'viewplans.xlsx';\n  isShow: boolean = true;\n  descriptionList = [];\n  destinationDesc: '';\n  page = {\n    limit: 10,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n  selected = [];\n  allRowsSelected: boolean = false;\n  pageSize: number;\n  materialGroup = [];\n  updateUser: string;\n  status = [];\n  planId: number;\n  materialCode: any;\n  mktsegment: any;\n  destination = '';\n  destinationList = [];\n  index: number;\n  dispatchPlanList = [];\n  materilcodelist = [];\n  materialDescription = '';\n  isLoading: boolean = false;\n  minDate = new Date();\n  currentDate = this.helperService.getTodayDate();\n  currentDateAsString = this.helperService.getTodayDateASString();\n  statuses = [];\n  materialDescriptionList: any[];\n  source: string;\n  filterPlanStatus = [];\n  mktsegmentList = [];\n  categoryList = [];\n  fromDispatchDate: string = '';\n  toDispatchDate: string = '';\n  toDate: string = '';\n  fromDate: string = '';\n  tteCalculateblePlans = [];\n  priorityList = [];\n  priority = [];\n  // totalTruckPercentage: number = 0;\n  // totalTTEPercentageSum: number = 0;\n  roles: { \"planner1\": string; \"plannner2\": string; \"planner3\": string; \"transporter\": string; \"fgsOperations1\": string; \"fgsOperations2\": string; \"fgsOperations4\": string; \"gateSecurity\": string; \"rdc_PLN\": string; \"rdc_GAT\": string; \"JIT_OPERATION\": string; \"JIT_GATE_SECURITY\": string; \"EXPORT_CHA\": string; \"ABU_PLN\": string; \"L1MGR\": string; \"L2MGR\": string; };\n  planStatusList: { \"key\": string; \"value\": string; }[];\n  planStatus: any;\n  insertUser: any;\n  sourceList: any[];\n  sourceCode: any;\n  isViewPlans: boolean = true;\n  check_Role_DP_REP: string;\n  modalComment: any;\n  sourceCodeList = [];\n  freezeLeftValue: boolean = true;\n  constructor(\n    private service: ApiserviceService,\n    private toastr: ToastrService,\n    private helperService: HelperServiceService,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.roles = constants.roles;\n    localStorage.setItem(\"userMenu\", \"dispatch-plan\");\n    this.statuses = constants.planStatus;\n    this.source = localStorage.getItem('sourceID');\n    // (localStorage.getItem(\"sourceID\") != null && localStorage.getItem(\"sourceID\") != '') ? this.sourceCodeList.push(localStorage.getItem(\"sourceID\")) : null;\n    // this.filterPlanStatus = constants.filterPlanStatus\n    let routePlanId = this.activatedRoute.snapshot.params['planId']\n    this.planStatusList = constants.planStatusList;\n    this.check_Role_DP_REP = this.service.checkRole();\n    // For DP_REP / Externalwarehouse role user can change the source location but other user it can't changes\n    // That why we giving default selection\n    if (this.isSoureDisable()) {\n      this.sourceCode = localStorage.getItem(\"sourceID\");\n      this.isViewPlans = false;\n      (localStorage.getItem(\"sourceID\") != null && localStorage.getItem(\"sourceID\") != '') ? this.sourceCodeList.push(localStorage.getItem(\"sourceID\")) : null;\n    }\n    // for getting plan data with planId and without planId\n    this.getPlanData(routePlanId);\n    //for getting category master data\n    this.getCategoryMasterData();\n    this.getMarketSegment();\n    this.getPriorityList();\n    if (this.service.isDPREPRole() || this.service.CheckExtWareHouse()) {\n      this.getPlansSourceList();\n    } else {\n      this.openPlanSourceList.push(localStorage.getItem(\"sourceID\"))\n    }\n\n  }\n\n  //for getting category master data\n  getCategoryMasterData() {\n    this.service.get_service(ApiserviceService.apisList.categoryMasterData).subscribe(response => {\n      this.categoryList = response['data'];\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    })\n  }\n  // For getting all the Open Plans source List for DPREP\n  getPlansSourceList() {\n    this.service.get_service(ApiserviceService.apisList.getOpenPlansSourceLocs).subscribe(response => {\n      if (response['statusCode'] == '200') {\n        this.openPlanSourceList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Some Thing Went Wrong !!!')\n      }\n    })\n  }\n\n  isSoureDisable() {\n    // source Not disable for DP_REP, L1_MGR, L2_MGR role & External warehouses, if roles not belongs to DP_REP & External wareHouse we are returning boolean value which makes  disable \n    if ((this.check_Role_DP_REP !== this.roles.planner3 && this.check_Role_DP_REP !== this.roles.L1MGR && this.check_Role_DP_REP !== this.roles.L2MGR)\n      && (!this.service.CheckExtWareHouse())) {\n      return true\n    } else {\n      return false\n    }\n  }\n  getMarketSegment() {\n    this.service.get_service(ApiserviceService.apisList.getMarketSegment).subscribe(response => {\n      if (response['statusCode'] == '200') {\n        this.mktsegmentList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Some Thing Went Wrong !!!')\n      }\n    })\n  }\n\n  getPriorityList() {\n    this.service.get_service(ApiserviceService.apisList.getPriorityList).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.priorityList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Some Thing Went Wrong !!!')\n      }\n    }, err => {\n      this.toastr.error('Some Thing Went Wrong !!!')\n    })\n  }\n\n  // for getting plan data with planId and without planId\n  getPlanData(routePlanId) {\n    if (routePlanId) {\n      this.isLoading = true;\n      this.planId = routePlanId;\n      let bodyData = {\n        'planId': routePlanId,\n        // 'sourceCode': this.sourceCode,\n        'isViewPlans': this.isViewPlans,\n        'sourceCodeList': this.sourceCodeList\n      }\n      this.getViewPlanData(bodyData)\n    } else {\n      let bodyData = {\n        'fromDispatchDate': this.currentDate,\n        \"toDispatchDate\": this.currentDate,\n        // 'sourceCode': this.sourceCode,\n        // 'statuses': this.filterPlanStatus,\n        'isViewPlans': this.isViewPlans,\n        'sourceCodeList': this.sourceCodeList\n      };\n      this.fromDate = this.currentDateAsString\n      this.toDate = this.fromDate;\n      this.getViewPlanData(bodyData);\n    }\n  }\n  // Clearing all the sum values after success response\n  clearAllSum() {\n    this.tteSum = 0;\n    this.planQtySum = 0;\n    this.apprQtySum = 0;\n    this.unapprQtySum = 0;\n    this.apprDeleteQtySum = 0;\n    this.unapprDeleteQtySum = 0;\n    this.reservedQtySum = 0;\n    this.loadedQtySum = 0;\n    this.dispatchedQtySum = 0;\n    this.availableQtySum = 0;\n    this.totalAvailableQtySum = 0;\n    this.totalTTEPercentageSum = 0;\n    this.TruckPercentageSum = 0;\n    this.weightSum = 0;\n    this.totalWeightSum = 0;\n    this.totalWeightUtilSum = 0;\n    this.volumeSum = 0;\n    this.totalVolumeSum = 0;\n    this.totalVolumeUtilSum = 0;\n  }\n\n  onFooterPage(pageInfo) {\n    console.log(pageInfo);\n\n  }\n  // for getting view plan data\n  getViewPlanData(bodyData) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.planinfo, bodyData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.clearAllSum();\n        this.page.count = response['data'].total;\n        this.page.limit = response['data'].pageLength;\n        let responseData = response['data'].planItems;\n        // this.standredFTLTTE = response['data'].standardFtlTteCapacity;\n        // this.standardFTLWeight = response['data'].standardFtlWeight;\n        // this.standardFTLVolumne = response['data'].standardFTLVolumne;\n        //  responseData.forEach(element => {\n        // // Weight Util values calculations\n        // element.weightUtil = (((element.weight ? element.weight : 0) / this.standardFTLWeight) * 100);\n        // // Volume Util values calculations\n        // element.volumeUtil = (((element.volume ? element.volume : 0) / this.standardFTLVolumne) * 100);\n        // if (this.service.checkRole() == this.roles.rdc_PLN) {\n        //   element.truckPercentage = (((element.quantity ? element.quantity : 0) * (element.tte ? element.tte : 0)) / this.standredFTLTTE);\n        //   element.availableTTE = ((element.quantity ? element.quantity : 0) * (element.tte ? element.tte : 0));\n        // } else {\n        //   element.truckPercentage = (((element.availableQuantity ? element.availableQuantity : 0) * (element.tte ? element.tte : 0)) / this.standredFTLTTE);\n        //   element.availableTTE = ((element.availableQuantity ? element.availableQuantity : 0) * (element.tte ? element.tte : 0));\n        // }\n        // For RDC: The Avail TTE and Truck count should be based on Plan Qty and not Available Qty\n        // if (this.service.checkRole() == this.roles.rdc_PLN) {\n        //   element.truckPercentage = (((element.quantity ? element.quantity : 0) * (element.tte ? element.tte : 0)) / this.standredFTLTTE);\n        //   element.availableTTE = ((element.quantity ? element.quantity : 0) * (element.tte ? element.tte : 0));\n        //   // Weight Util values calculations\n        //   element.weightUtil = ((((element.quantity ? element.quantity : 0) * (element.weight ? element.weight : 0)) / this.standardFTLWeight) * 100);\n        //   // Volume Util values calculations\n        //   element.volumeUtil = ((((element.quantity ? element.quantity : 0) * (element.volume ? element.volume : 0)) / this.standardFTLVolumne) * 100);\n        // } else {\n        //   element.truckPercentage = (((element.availableQuantity ? element.availableQuantity : 0) * (element.tte ? element.tte : 0)) / this.standredFTLTTE);\n        //   element.availableTTE = ((element.availableQuantity ? element.availableQuantity : 0) * (element.tte ? element.tte : 0));\n        //   // Weight Util values calculations\n        //   element.weightUtil = ((((element.availableQuantity ? element.availableQuantity : 0) * (element.weight ? element.weight : 0)) / this.standardFTLWeight) * 100);\n        //   // Volume Util values calculations\n        //   element.volumeUtil = ((((element.availableQuantity ? element.availableQuantity : 0) * (element.volume ? element.volume : 0)) / this.standardFTLVolumne) * 100);\n        // }\n        // });\n        this.dispatchPlanList = [...responseData];\n        this.isLoading = false\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    });\n  }\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    console.log(event.value)\n    console.log(\"------>To Date\", this.toDate);\n    let checkToDate: any = this.toDate;\n    console.log(\"Check--->1\", checkToDate);\n    if (this.toDate == this.currentDateAsString) {\n      // on page load we are defaluting the  to date with string. Comparing string with date is not possible\n      // If toDate is equal to currentDate then chagetingthe checkDate to new Date() otherwise defaulting with toDate\n      checkToDate = new Date();\n      console.log(\"Check--->2\", checkToDate);\n\n    }\n    /* Checking if selected from date greater than to date.\n    Clearing the toDate field when from date greater than to date */\n    if (event.target.value) {\n      if (this.toDate && (this.fromDate > checkToDate)) {\n        this.toDate = '';\n      }\n    }\n    // this.toDate = '';\n  }\n\n\n  datatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    this.resetSummaryData();\n    let offset = pageInfo.offset;\n    this.tteCalculateblePlans = [];\n    this.selected = [];\n    this.forDateValidation();\n    this.clearAllSum();\n    let bodyData = {\n      'fromDispatchDate': this.fromDispatchDate,\n      'toDispatchDate': this.toDispatchDate,\n      'index': offset,\n      'pageLength': pageInfo.pageSize,\n      'destinationCode': this.destination,\n      'marketSegment': this.mktsegment,\n      'materialCode': this.materialCode,\n      'materialDescription': this.materialDescription,\n      'materialGroup': this.materialGroup,\n      'planId': this.planId,\n      'status': this.status,\n      // 'statuses': this.filterPlanStatus,\n      // 'source': this.source,\n      'planStatus': this.planStatus,\n      // 'sourceCode': this.sourceCode,\n      \"updateUser\": this.updateUser,\n      'insertUser': this.insertUser,\n      'isViewPlans': this.isViewPlans,\n      'priorityList': this.priority,\n      'sourceCodeList': this.sourceCodeList\n    }\n\n    this.getViewPlanData(bodyData);\n  }\n\n  // clear the data what the user entered\n  clearAll() {\n    this.destination = '';\n    this.mktsegment = [];\n    this.materialCode = \"\";\n    this.fromDate = '';\n    this.toDate = '';\n    this.materialDescription = \"\";\n    this.destinationDesc = \"\";\n    this.materialGroup = [];\n    this.descriptionList = [];\n    this.planId = null;\n    this.status = [];\n    this.destinationList = [];\n    this.materilcodelist = [];\n    this.tteCalculateblePlans = [];\n    this.selected = [];\n    this.planStatus = [];\n    this.insertUser = '';\n    this.sourceList = [];\n    this.sourceCode = '';\n    this.updateUser = '';\n    this.priority = [];\n    this.sourceCodeList = [];\n\n    // For DP_REP role user can change the source location but other user it can't changes\n    // That why we giving default selection\n    if (this.isSoureDisable()) {\n      this.sourceCode = localStorage.getItem(\"sourceID\");\n      (localStorage.getItem(\"sourceID\") != null && localStorage.getItem(\"sourceID\") != '') ? this.sourceCodeList.push(localStorage.getItem(\"sourceID\")) : null;\n    }\n  }\n\n  // refresh page data\n  refreshData() {\n    this.table.offset = 0;\n    this.clearAll();\n    this.clearAllSum();\n    this.resetSummaryData();\n    let bodyData = {\n      'fromDispatchDate': this.currentDate,\n      \"toDispatchDate\": this.currentDate,\n      // 'sourceCode': this.sourceCode,\n      // 'statuses': this.filterPlanStatus,\n      'isViewPlans': this.isViewPlans,\n      'sourceCodeList': this.sourceCodeList\n    };\n    this.currentDateAsString = this.helperService.getTodayDateASString();\n    this.fromDate = this.currentDateAsString;\n    this.toDate = this.fromDate;\n    this.getViewPlanData(bodyData);\n  }\n\n  // filter destination list by user search \n  getUserSearchData(event) {\n    this.destinationDesc = '';\n    let destfiltervalue = event.target.value;\n    if (destfiltervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.destinationList = [];\n      let index = 0;\n      this.isLoading = true\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + this.destination + \"&index=\" + index).subscribe(response => {\n        this.destinationList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //filter material code by user input\n  filterMaterialCode(event) {\n    this.materialDescription = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.materilcodelist = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?materialCode=' + filtervalue).subscribe(response => {\n        this.materilcodelist = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n    if (filtervalue == '') {\n      this.materialDescription = '';\n      this.materilcodelist = [];\n    }\n    if (filtervalue.length > 1 && event.keyCode == 13) {\n      this.materilcodelist.forEach(item => {\n        if (item.value == filtervalue) {\n          this.setMaterialDescription(item.description);\n        }\n      })\n    }\n  }\n\n  // set material code\n  setMaterialCode(value) {\n    setTimeout(() => {\n      this.materialCode = value;\n    }, 300);\n  }\n\n  //set value for material description\n  setMaterialDescription(value) {\n    this.materialDescription = value;\n  }\n\n  //set value destination\n  setDestination(value) {\n    //  this.destinationDesc = value;\n    this.destination = value;\n  }\n\n  //set value to destination description\n  setDestDescription(value) {\n    this.destinationDesc = value;\n  }\n\n\n  getUserDestinationList(event) {\n    this.destination = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.getDestinationDescriptionDataList + event.target.value).subscribe(response => {\n        if (response['data']) {\n          this.descriptionList = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // Date Validation\n  forDateValidation() {\n    if (this.fromDate != '' && this.fromDate != null) {\n      this.fromDispatchDate = moment(new Date(this.fromDate)).format(\"DD/MM/YYYY\");\n    } else {\n      this.fromDispatchDate = '';\n    }\n    if (this.toDate != '' && this.toDate != null) {\n      this.toDispatchDate = moment(new Date(this.toDate)).format(\"DD/MM/YYYY\");\n    } else {\n      this.toDispatchDate = '';\n    }\n  }\n\n\n  //planner search by using custom filter \n  plannerSearch() {\n    this.tteCalculateblePlans = [];\n    this.resetSummaryData();\n    this.selected = [];\n    this.table.offset = 0;\n    this.forDateValidation();\n    let bodyData = {\n      'fromDispatchDate': this.fromDispatchDate,\n      'toDispatchDate': this.toDispatchDate,\n      'destinationCode': this.destination,\n      // 'index': this.page.offset,\n      'marketSegment': this.mktsegment,\n      'materialCode': this.materialCode,\n      'materialDescription': this.materialDescription,\n      'materialGroup': this.materialGroup,\n      'pageLength': this.page.limit,\n      'planId': this.planId,\n      'status': this.status,\n      // 'statuses': this.filterPlanStatus,\n      // 'sourceLocation': this.source,\n      'planStatus': this.planStatus,\n      'insertUser': this.insertUser,\n      \"updateUser\": this.updateUser,\n      // 'sourceCode': this.sourceCode,\n      'isViewPlans': this.isViewPlans,\n      'priorityList': this.priority,\n      'sourceCodeList': this.sourceCodeList\n    }\n\n    if (this.fromDate != '' && this.fromDate != null) {\n      if (this.toDate != '' && this.toDate != null) {\n        this.dispatchPlanList = [];\n        this.getViewPlanData(bodyData);\n      } else {\n        this.toastr.error(\"Please select To Date\", \"!Error\")\n      }\n    } else {\n      this.getViewPlanData(bodyData);\n    }\n\n  }\n\n  // show filter icon and hide \n\n  showFilter() {\n    this.isShow = !this.isShow\n  }\n\n  //export excel data\n  export(): void {\n    if (this.dispatchPlanList.length > 0) {\n      this.isLoading = true;\n\n      this.forDateValidation();\n      let data = {\n        'fromDispatchDate': this.fromDispatchDate,\n        'toDispatchDate': this.toDispatchDate,\n        'destinationCode': this.destination,\n        // 'index': this.page.offset,\n        'marketSegment': this.mktsegment,\n        'materialCode': this.materialCode,\n        'materialDescription': this.materialDescription,\n        'materialGroup': this.materialGroup,\n        'pageLength': this.page.count,\n        'planId': this.planId,\n        'status': this.status,\n        // 'statuses': this.filterPlanStatus,\n        // 'sourceLocation': this.source,\n        'planStatus': this.planStatus,\n        'insertUser': this.insertUser,\n        \"updateUser\": this.updateUser,\n        // 'sourceCode': this.sourceCode,\n        'isViewPlans': this.isViewPlans,\n        'priorityList': this.priority,\n        'sourceCodeList': this.sourceCodeList\n      }\n      // this.service.post_service_DownLoadExcel(ApiserviceService.apisList.planinfo, data).subscribe(response => {\n      this.service.post_service(ApiserviceService.apisList.planinfo, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          // Uncomment when export excel is generated in backend\n          // var blob = new Blob([response.body], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n          //   var filename = 'viewDispatchPlans.xlsx';\n          //   const link = window.URL.createObjectURL(blob);\n          //   const a = document.createElement('a');\n          //   document.body.appendChild(a);\n          //   a.setAttribute('style', 'display: none');\n          //   a.href = link;\n          //   a.download = filename\n          //   a.click();\n          //   window.URL.revokeObjectURL(link);\n          //   a.remove();\n\n          let newViewPlanData = response['data'].planItems;\n          let excelRawData = newViewPlanData;\n          let newExcelData = []; let data;\n          for (let i = 0; i < excelRawData.length; i++) {\n\n            // For RDC: The Avail TTE and Truck count should be based on Plan Qty and not Available Qty\n            // For FGS : The Avail TTE and Truck count should be based on Available Qty\n            data = {\n              \"planId\": excelRawData[i].planId,\n              \"Dispatch Date\": this.service.customDateFormat(excelRawData[i].dispatchDate),\n              \"Source\": excelRawData[i].sourceLocation,\n              \"Destination\": excelRawData[i].destinationLocation,\n              \"Material Code\": excelRawData[i].itemId,\n              \"Material Description\": excelRawData[i].itemDescription,\n              \"Dest Description\": excelRawData[i].destinationDescription,\n              \"Category\": excelRawData[i].category,\n              \"TTE\": +excelRawData[i].tte,\n              \"Batch\": excelRawData[i].batchCode,\n              \"Priority\": excelRawData[i].priority,\n              \"Mkt Segment\": excelRawData[i].marketSegment,\n              \"Plan Quantity\": +excelRawData[i].quantity,\n              \"Approved Quantity\": +excelRawData[i].approvedQuantity,\n              \"Unapproved Quantity\": +excelRawData[i].unapprovedQuantity,\n              \"Approved Delete\": +excelRawData[i].deletedApprQuantity,\n              \"Unapproval Delete\": +excelRawData[i].deletedUnApprQuantity,\n              \"Reserved\": +excelRawData[i].reservedQuantity,\n              \"Loaded\": +excelRawData[i].loaded,\n              \"Dispatch Quantity\": +excelRawData[i].dispatchedQuantity,\n              \"Avaliable Quantity\": +excelRawData[i].availableQuantity,\n              \"Total Availble Quantity\": +excelRawData[i].totalAvailableQuantity,\n              \"Avail TTE\": excelRawData[i].availbleTTE ? +excelRawData[i].availbleTTE.toFixed(2) : 0,\n              \"Truck Count\": excelRawData[i].truckCount ? +excelRawData[i].truckCount.toFixed(2) : 0,\n              \"Weight (Kg)\": excelRawData[i].weight ? +excelRawData[i].weight.toFixed(2) : 0,\n              \"Available Weight (Kg)\": excelRawData[i].totalWeight ? +excelRawData[i].totalWeight.toFixed(2) : 0,\n              \"Weight Util (%)\": excelRawData[i].weightUtil ? +excelRawData[i].weightUtil.toFixed(2) : 0,\n              \"Volume (CUMTR)\": excelRawData[i].volume ? +excelRawData[i].volume.toFixed(2) : 0,\n              \"Available Volume (CUMTR)\": excelRawData[i].totalVolume ? +excelRawData[i].totalVolume.toFixed(2) : 0,\n              \"Volume Util (%)\": excelRawData[i].volumeUtil ? +excelRawData[i].volumeUtil.toFixed(2) : 0,\n              \"Plan Status\": excelRawData[i].status,\n              \"Insert User\": excelRawData[i].insertUser,\n              \"Update User\": excelRawData[i].updateUser,\n              \"Insert Date\": this.service.customDateTimeFormat(excelRawData[i].insertDate),\n              \"Update Date\": this.service.customDateTimeFormat(excelRawData[i].updateDate),\n              \"Plan Age (Days)\": excelRawData[i].planAge,\n              \"Comments\": excelRawData[i].comments,\n              \"Status\": excelRawData[i].appStatus\n            }\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'viewplanData.xlsx');\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.toastr.error(\"No records found to export\", \"Error!\");\n    }\n  }\n\n  //filter material description \n  filterMaterialDescription(event) {\n    this.materialCode = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.materialDescriptionList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?materialDesc=' + filtervalue).subscribe(response => {\n        this.materialDescriptionList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n\n\n\n\n\n  //truck Percentage\n  // truckPercantage(data) {\n  //   console.log('trcukpercentage called');\n  //   let row = data;\n  //   let standredFTLTTE = 122;\n  //   return (((row.availableQuantity ? row.availableQuantity : 0) * (row.tte ? row.tte : 0)) / standredFTLTTE)\n  // }\n\n\n  onSelect(event, data) {\n    if (event.target.checked) {\n      this.tteCalculateblePlans.push(data);\n    } else {\n      let index = this.tteCalculateblePlans.indexOf(data);\n      this.tteCalculateblePlans.splice(index, 1);\n    }\n    this.tteSum = this.tteCalculateblePlans.reduce((sum, { tte }) => sum + tte, 0);\n    this.planQtySum = this.tteCalculateblePlans.reduce((sum, { quantity }) => sum + quantity, 0);\n    this.apprQtySum = this.tteCalculateblePlans.reduce((sum, { approvedQuantity }) => sum + approvedQuantity, 0);\n    this.unapprQtySum = this.tteCalculateblePlans.reduce((sum, { unapprovedQuantity }) => sum + unapprovedQuantity, 0);\n    this.apprDeleteQtySum = this.tteCalculateblePlans.reduce((sum, { deletedApprQuantity }) => sum + deletedApprQuantity, 0);\n    this.unapprDeleteQtySum = this.tteCalculateblePlans.reduce((sum, { deletedUnApprQuantity }) => sum + deletedUnApprQuantity, 0);\n    this.reservedQtySum = this.tteCalculateblePlans.reduce((sum, { reservedQuantity }) => sum + reservedQuantity, 0);\n    this.loadedQtySum = this.tteCalculateblePlans.reduce((sum, { loaded }) => sum + loaded, 0);\n    this.dispatchedQtySum = this.tteCalculateblePlans.reduce((sum, { dispatchedQuantity }) => sum + dispatchedQuantity, 0);\n    this.availableQtySum = this.tteCalculateblePlans.reduce((sum, { availableQuantity }) => sum + availableQuantity, 0);\n    this.totalAvailableQtySum = this.tteCalculateblePlans.reduce((sum, { totalAvailableQuantity }) => sum + totalAvailableQuantity, 0);\n    this.totalTTEPercentageSum = this.tteCalculateblePlans.reduce((sum, { availbleTTE }) => sum + availbleTTE, 0);\n    this.TruckPercentageSum = this.tteCalculateblePlans.reduce((sum, { truckCount }) => sum + truckCount, 0);\n    this.weightSum = this.tteCalculateblePlans.reduce((sum, { weight }) => sum + weight, 0);\n    this.totalWeightSum = this.tteCalculateblePlans.reduce((sum, { totalWeight }) => sum + totalWeight, 0);\n    this.totalWeightUtilSum = this.tteCalculateblePlans.reduce((sum, { weightUtil }) => sum + weightUtil, 0);\n    this.volumeSum = this.tteCalculateblePlans.reduce((sum, { volume }) => sum + volume, 0);\n    this.totalVolumeSum = this.tteCalculateblePlans.reduce((sum, { totalVolume }) => sum + totalVolume, 0);\n    this.totalVolumeUtilSum = this.tteCalculateblePlans.reduce((sum, { volumeUtil }) => sum + volumeUtil, 0);\n  }\n  //reset the data in the table summary data\n  resetSummaryData() {\n    this.tteSum = 0;\n    this.planQtySum = 0; this.apprQtySum = 0; this.unapprQtySum = 0; this.apprDeleteQtySum = 0;\n    this.unapprDeleteQtySum = 0; this.reservedQtySum = 0; this.loadedQtySum = 0; this.dispatchedQtySum = 0;\n    this.availableQtySum = 0; this.totalAvailableQtySum = 0; this.totalTTEPercentageSum = 0; this.TruckPercentageSum = 0;\n  }\n  // On selection of checkboxes in the table\n  onSelectAll(event) {\n    this.tteCalculateblePlans = [];\n    this.dispatchPlanList.forEach(data => {\n      this.onSelect(event, data);\n    });\n  }\n\n  emptySumm() {\n    return null;\n  }\n\n  // Filter source location\n  getfilterSource(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.sourceList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        console.log(\"respio\", response)\n        this.sourceList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n  // show Comments\n  showIntegrationMessage(row) {\n    this.modalComment = row.comments;\n    $(\"#commnetsModal\").modal('show');\n  }\n\n}\n\n\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { customMaterialModule } from '../../angular-material';\nimport { ViewPlanComponent } from './view-plan.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\n\nconst routes: Routes = [\n  { path: '', component: ViewPlanComponent},\n  { path: ':planId', component: ViewPlanComponent},\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    customMaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n    LoaderModule,\n    NgxDatatableModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    ViewPlanComponent\n  ],\n  providers:\n    [\n    ],\n})\nexport class ViewlPlanModule { }\n"],"sourceRoot":""}