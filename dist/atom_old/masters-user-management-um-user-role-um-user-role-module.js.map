{"version":3,"sources":["webpack:///./src/app/masters/user-management/um-user-role/um-user-role.component.html","webpack:///./src/app/masters/user-management/um-user-role/um-user-role.component.scss","webpack:///./src/app/masters/user-management/um-user-role/um-user-role.component.ts","webpack:///./src/app/masters/user-management/um-user-role/um-user-role.module.ts"],"names":[],"mappings":"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","file":"masters-user-management-um-user-role-um-user-role-module.js","sourcesContent":["module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"mt-item-header\\\">\\n      <b> User Management &gt; User Role</b>\\n    <span class=\\\"pull-right refresh-span\\\">\\n        <!-- <button class=\\\"theme-small-button\\\" (click)=\\\"displayAddForm()\\\" matTooltip=\\\"Add New Valve\\\">\\n            <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n          </button> -->\\n      <!-- <button class=\\\"theme-small-button\\\" (click)=\\\"upload()\\\" matTooltip=\\\"Upload excel\\\">\\n        <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i>\\n      </button> -->\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n\\n\\n\\n\\n<div class=\\\"mt-item-fields\\\" *ngIf=\\\"isShow\\\">\\n  <div class=\\\"col-md-12 row\\\">\\n    <div class=\\\"col-md-12 padding-right-40\\\">\\n      <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-md-2\\\">\\n                <mat-form-field>\\n                  <input matInput placeholder=\\\"User Role Id\\\" [(ngModel)]=\\\"userRoleId\\\" name=\\\"userRoleId\\\">\\n                </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"col-md-2\\\">\\n                <mat-form-field>\\n                  <input matInput placeholder=\\\"Description\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\">\\n                </mat-form-field>\\n            </div>\\n\\n      </div>\\n    </div>\\n   \\n    <div class=\\\"pull-right\\\">\\n      <div class=\\\"search-fileds\\\">\\n        <button class=\\\"theme-small-button\\\" (click)=\\\"doSubmitSearch()\\\" matTooltip=\\\"Search\\\">\\n          <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n        <button class=\\\"theme-delete-button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear All\\\">\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n  <div class=\\\"mt-item-table\\\">\\n    <div>\\n      <!-- <ngx-datatable class='material ' #table [rows]='responseItemsList' \\n      [scrollbarH]=\\\"false\\\" [externalPaging]=\\\"true\\\" (page)=\\\"datatablePageData($event)\\\"\\n        [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"page.limit\\\" [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\"> -->\\n        <ngx-datatable class='material' #table [rows]='responseItemsList' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\n        [scrollbarH]=\\\"false\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [externalPaging]=\\\"true\\\" [limit]=\\\"page.limit\\\"\\n        [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\" (page)=\\\"datatablePageData($event)\\\">\\n        <ngx-datatable-column name=\\\"User Role Id\\\" [width]=\\\"280\\\" [resizeable]=\\\"false\\\" prop=\\\"userRoleId\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.userRoleId}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Description\\\" [width]=\\\"335\\\" [resizeable]=\\\"false\\\" prop=\\\"description\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.description}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"180\\\" [resizeable]=\\\"false\\\" prop=\\\"insertUser\\\" [sortable]=\\\"true\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row.insertUser}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n  \\n        <ngx-datatable-column name=\\\"Insert Date\\\" [width]=\\\"180\\\" [resizeable]=\\\"false\\\" prop=\\\"insertDate\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{trimDate(row.insertDate)}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n        <ngx-datatable-column name=\\\"Update User\\\" [width]=\\\"180\\\" [resizeable]=\\\"false\\\" prop=\\\"updateUser\\\" [sortable]=\\\"true\\\">\\n            <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n              {{row.updateUser}}\\n            </ng-template>\\n          </ngx-datatable-column>\\n  \\n  \\n        <ngx-datatable-column name=\\\"Update Date\\\" [width]=\\\"180\\\" [resizeable]=\\\"false\\\" prop=\\\"updateDate\\\" [sortable]=\\\"true\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{trimDate(row.updateDate)}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n  \\n        <!-- <ngx-datatable-column name=\\\"Action\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n            <button class=\\\"theme-small-button btn\\\" matTooltip=\\\"Modify Item\\\" (click)=\\\"showUpdateModel(row)\\\" [disabled]=\\\"(row.isError)\\\">\\n              <i class=\\\"fa fa-edit fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n          </ng-template>\\n        </ngx-datatable-column> -->\\n\\n           <!-- Footer Template starts -->\\n      <ngx-datatable-footer>\\n        <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n          let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n          <div class=\\\"page-count\\\">\\n            <span *ngIf=\\\"selectedCount\\\">\\n              {{selectedCount.toLocaleString()}} Selected |\\n            </span>\\n            Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n            (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n            {{(rowCount)}} records.\\n          </div>\\n          <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n            [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\" [size]=\\\"pageSize\\\"\\n            [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\" (change)=\\\"table.onFooterPage($event)\\\">\\n          </datatable-pager>\\n        </ng-template>\\n      </ngx-datatable-footer>\\n      <!-- Footer Template Ends -->\\n  \\n      </ngx-datatable>\\n    </div>\\n  </div>\\n  </div>\\n\\n\\n\\n\\n\\n\\n<br><br>\\n<div class=\\\"mt-item-fields\\\" *ngIf=\\\"displayForm\\\">\\n<div class=\\\"col-md-12 text-center padding-right-40\\\">\\n<mat-card>\\n<form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"(f.form.valid && saveForm(f))\\\">\\n  <h4 class=\\\"mt-item-header text-center text-primary\\\">\\n    <b> Add User Role </b></h4>\\n  <br>\\n  <div class=\\\"row\\\">\\n   \\n      <div class=\\\"col-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"User Role Id\\\" [(ngModel)]=\\\"userRoleIdf\\\" name=\\\"userRoleIdf\\\" required #qty=\\\"ngModel\\\">\\n              <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                  <p *ngIf=\\\"qty.errors.required\\\">Role Id is <strong>required</strong></p>\\n                </mat-error>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Description\\\" [(ngModel)]=\\\"descriptionf\\\" name=\\\"descriptionf\\\" required #qty=\\\"ngModel\\\">\\n              <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                  <p *ngIf=\\\"qty.errors.required\\\">Description is <strong>required</strong></p>\\n                </mat-error>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n   \\n    <div class=\\\"col-md-1\\\">\\n      <div class=\\\"form-group\\\">\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"btm-action-btn\\\">Save</button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n</mat-card>\\n</div>\\n</div>\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hc3RlcnMvdXNlci1tYW5hZ2VtZW50L3VtLXVzZXItcm9sZS91bS11c2VyLXJvbGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiserviceService } from 'src/app/services/api/apiservice.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as XLSX from 'xlsx';\nimport { NgForm } from '@angular/forms';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-um-user-role',\n  templateUrl: './um-user-role.component.html',\n  styleUrls: ['./um-user-role.component.scss']\n})\nexport class UmUserRoleComponent implements OnInit {\n\n  isLoading: boolean = false;\n  isShow: boolean = true;\n\n  userRoleId:any = \"\";\n  description:any = \"\";\n\n\n  userRoleIdf:any = \"\";\n  descriptionf:any = \"\";\n\n\n  itemSeq:any = \"\";\n  oeCode:any = \"\";\n \n\n  itemIdf: any = \"\";\n  itemDescriptionf: any = \"\";\n  itemCategoryf: any = \"\";\n  batchCodef: any = \"\";\n  valveIdf:any=\"\";\n\nitemId: any = \"\";\nitemDescription: any = \"\";\nitemCategory: any = \"\";\nbatchCode: any = \"\";\nvalveId:any=\"\";\n\nitemIdu: any = \"\";\nitemDescriptionu: any = \"\";\nitemCategoryu: any = \"\";\nbatchCodeu: any = \"\";\nvalveIdu:any=\"\";\n\n\n\n\nlocationId:any = \"\";\nservprov:any = \"\";\nelrFlag:any = \"\";\n\nlocationIdf :any = \"\";\nservprovf :any = \"\";\nelrFlagf :any = \"\";\n\nlocationIdu :any = \"\";\nservprovu :any = \"\";\nelrFlagu :any = \"\";\n\n\ninsertUser:any = \"\";\ninsertDate:any = \"\";\nupdateUser:any = \"\";\nupdateDate:any = \"\";\n\n\n  itemClassification: any = \"\";\n  itemType: any = \"\";\n  itemGroup: any = \"\";\n  tte: any = \"\";\n  loadFactor: any = \"\";\n  formattedDate: string;\n  effectiveDate: any = \"\";\n\ndisplayForm:boolean=false;\nresultDataList:any[];\nresponseItemsList: any[];\n  \n  editing = {};\n\n  page = {\n    limit: 100,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n\n \n\n\n  @ViewChild(DatatableComponent) table : DatatableComponent;\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"user-management\");\n  }\n\n  //show the filter\n  showFilter() {\n    this.isShow = !this.isShow\n  }\n  // Datatable Footer\n  onFooterPage(pageInfo){\n    console.log(pageInfo);\n    \n  }\n\ndisplayAddForm() {\n    if (this.displayForm)\n      this.displayForm = false;\n    else\n      this.displayForm = true;\n  }\n\n\n  mtOEBOMList:any[];\n  mtoebomList: any[];\n\n  upload(){}\n\n\n\n  doSubmitSearch(){\n    let data = {\n    userRoleId: this.userRoleId,\n    description: this.description,\n    }\n    console.log(\"submit data:  \"+JSON.stringify(data));\n    this.doSearch(data)\n  }\n\n\ndoSearch(data) {\n  console.log(\"submit data:  \"+JSON.stringify(data));\n  this.isLoading = true;\n  this.responseItemsList =[];\n\n    this.service.post_service(ApiserviceService.apisList.getUserRole, data).subscribe(response => {\n      this.page.count = response['data'].total;\n      this.page.limit = response['data'].pageLength;\n      this.responseItemsList = response['data'].itemsList;\n      console.log(\"response length: \"+this.responseItemsList.length);\n      console.log(\"response array string: \"+JSON.stringify(this.responseItemsList));\n      this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n  \n//server side pagination\ndatatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n  let bodyData = {\n    index: pageInfo.offset,\n    locationId: this.locationId,\n    servprov: this.servprov,\n    elrFlag: this.elrFlag,\n   }\n this.doSearch(bodyData);\n}\n\n\nsaveForm(form: NgForm) {\n  this.isLoading = true;\n  let data = {\n    \"itemsList\": [\n      {\n        \"userRoleId\": this.userRoleIdf,\n        \"description\": this.descriptionf,\n      }\n    ]\n  }\n  console.log(\"submit data:  \" + JSON.stringify(data));\n  this.service.post_service(ApiserviceService.apisList.uploadUserRole, data).subscribe(response => {\n    //console.log(\"response array string: \"+JSON.stringify(response));\n    this.isLoading = false;\n    this.toastr.success(response['message']);\n    form.resetForm();\n  }, (err) => {\n    console.log(\"Error\", err);\n    this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    this.isLoading = false;\n  })\n}\n\n\n\n\n// showUpdateModel(row){\n//   console.log(\"**********\"+row.itemCategory);\n//   this.userIdu= row.userId,\n//   this.statusu= row.status,\n//   this.roleIdu= row.roleId,\n//   this.passwordu= row.password,\n//   this.plantCodeu= row.plantCode,\n//   this.firstNameu= row.firstName,\n//   this.lastNameu= row.lastName,\n//   this.emailu= row.email,\n//   console.log(\"**********\"+this.userIdu);\n//   $(\"#myModal\").modal('show');\n// }\n\n// updateForm(form: NgForm) {\n//   this.isLoading = true;\n//   let data = {\n//     \"itemsList\": [\n//       {\n//         \"status\": this.statusu,\n//         \"roleId\": this.roleIdu,\n//         \"plantCode\": this.plantCodeu,\n//         \"firstName\": this.firstNameu,\n//         \"lastName\": this.lastNameu,\n//         \"email\": this.emailu\n//       }\n//     ]\n//   }\n//   console.log(\"updateMtTruckType submit data:  \" + JSON.stringify(data));\n//   this.service.post_service(ApiserviceService.apisList.updateUser, data).subscribe(response => {\n//     if (response['statusCode'] == 200) {\n//       this.isLoading = false;\n//       this.doSubmitSearch();\n//       this.toastr.success(response['message']);\n\n//       $(\"#myModal\").modal('hide');\n//     } else {\n//       this.isLoading = false;\n//       this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n//     }\n//   }, (err) => {\n//     console.log(\"Error\", err);\n//     this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n//     this.isLoading = false;\n//   })\n// }\n\n\n\n\n\n\n\n\nfoods: any[] = [\n  {value: '', viewValue: 'None'},\n  {value: 'Y', viewValue: 'Y'},\n  {value: 'N', viewValue: 'N'}\n];\n\n// showUpdateModel(row){\n//   console.log(\"**********\"+row.itemCategory);\n//   this.locationIdu= row.locationId,\n//   this.servprovu= row.servprov,\n//   this.elrFlagu= row.elrFlag,\n//   console.log(\"**********\"+this.locationIdu);\n//   $(\"#myModal\").modal('show');\n// }\n\n// updateForm(form: NgForm) {\n//   this.isLoading = true;\n//   let data = {\n//   \"itemsList\": [\n//     {\n//       \"locationId\": this.locationIdu,\n//       \"servprov\": this.servprovu,\n//       \"elrFlag\": this.elrFlagu,\n//     }\n//   ]\n//   }\n//   console.log(\"updateMtTruckType submit data:  \" + JSON.stringify(data));\n//   this.service.post_service(ApiserviceService.apisList.updateMtElr, data).subscribe(response => {\n//   if (response['statusCode'] == 200) {\n//     this.isLoading = false;\n//     this.doSubmitSearch();\n//     this.toastr.success(response['message']);\n  \n//     $(\"#myModal\").modal('hide');\n//   } else {\n//     this.isLoading = false;\n//     this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n//   }\n//   }, (err) => {\n//   console.log(\"Error\", err);\n//   this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n//   this.isLoading = false;\n//   })\n//   }\n\n  \n\n\n\n\n\n  insDate: any = \"\";\n  insDatep: any = \"\";\n  updDate: any = \"\";\n  updDatep: any = \"\";\n  \n  blank:string=\"     \";\n\n// export to excel file\nexport(): void {\nthis.isLoading = true;\nif(this.responseItemsList === undefined){\n  this.isLoading = false;\n}\nif (this.responseItemsList.length > 0) {\n  let data = {\n    userRoleId: this.userRoleId,\n    description: this.description,\n    pageLength: this.page.count\n    // pageLength : this.page.count < this.service.maxPageLengthForExcel ? this.page.count : this.service.maxPageLengthForExcel,\n    }\n    this.service.post_service(ApiserviceService.apisList.getUserRole, data).subscribe(response => {\n     if(response['statusCode'] == 200){\n      let excelRawData = [...response['data'].itemsList];\n      let newExcelData = [];\n      for (let i = 0; i < excelRawData.length; i++) {\n    \n        this.insDate = this.formatDate(excelRawData[i].insertDate);\n        this.insDatep = this.effectiveDate;\n        this.updDate = this.formatDate(excelRawData[i].updateDate);\n        this.updDatep = this.effectiveDate;\n    \n        let data = {\n          \"User Role Id\": excelRawData[i].userRoleId,\n          \"Description\": excelRawData[i].description,\n          \"Insert User\": excelRawData[i].insertUser,\n          \"Insert Date   \": this.insDatep + this.blank,\n          \"Update User\": excelRawData[i].updateUser,\n          \"Update Date   \": this.updDatep,\n        }\n        newExcelData.push(data)\n      }\n      const workBook = XLSX.utils.book_new(); // create a new blank book\n      const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n      XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n      XLSX.writeFile(workBook, 'User Role.xlsx');\n      this.isLoading = false;\n     }else{\n       this.toastr.error(response['message'] ? response['message'] : 'Something went wrong...', 'Error!');\n       this.isLoading = false;\n     }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n} else {\n  this.toastr.error('No records to generate excel', 'Error!');\n  this.isLoading = false;\n}\n}\n\n\n\n\n  formatDate(data) {\n    if (data != null && data) {\n      let formatted = new Date(data),\n        mnth = (\"0\" + (formatted.getMonth() + 1)).slice(-2),\n        day = (\"0\" + formatted.getDate()).slice(-2);\n      this.formattedDate = [day, this.getMonth(mnth), formatted.getFullYear()].join(\"-\");\n      this.effectiveDate = this.formattedDate;\n      return this.formatDate;\n    }else{\n      this.effectiveDate =\"\"; \n    }\n  }\n  month_names ={\n    \"01\":\"Jan\",\n    \"02\":\"Feb\",\n    \"03\":\"Mar\", \"04\":\"Apr\",\"05\":\"May\",\"06\":\"Jun\", \"07\":\"Jul\",\"08\":\"Aug\",\"09\":\"Sep\", \"10\":\"Oct\",\"11\":\"Nov\",12:\"Dec\"\n  };\n\n  \n  trimDate(date){\n    if(date===\"\" || date===undefined)\n    return \"\";\n    else\n    var array = date.substring(0, 10).split(\"-\");\n    return array[2]+\"-\"+this.getMonth(array[1])+\"-\"+array[0];\n  }\n\ntrimEmpty(val){\n  if(val===\"\" || val ===undefined)\n  return \"\";\n  else{\n    console.log(typeof val)\n    console.log(val+\"----\"+val.length);\n   // return val.trim();\n  }\n}\n\n  getMonth(number){\n    return this.month_names[number]\n  }\n\n\n\n  // clear data\n  clearAll() {\n    this.userRoleId= \"\";\n    this.description = \"\";\n    \n  }\n\n \n  refreshData() {\n    this.table.offset = 0;\n    this.page.offset = 0;\n    this.doSubmitSearch();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UmUserRoleComponent } from './um-user-role.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoaderModule } from '../../../public/loader/loader-shared.module';\nimport { customMaterialModule } from '../../../angular-material';\nimport { FormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nconst routes: Routes = [\n  { path: '', component: UmUserRoleComponent }\n];\n\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    LoaderModule,\n    customMaterialModule,\n    FormsModule,\n    NgxDatatableModule\n  ],\n  declarations: [UmUserRoleComponent]\n})\nexport class UmUserRoleModule { }\n"],"sourceRoot":""}