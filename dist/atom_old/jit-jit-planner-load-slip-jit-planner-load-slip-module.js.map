{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/jit/jit-planner-load-slip/jit-planner-load-slip.component.html","webpack:///./src/app/jit/jit-planner-load-slip/jit-planner-load-slip.component.ts","webpack:///./src/app/jit/jit-planner-load-slip/jit-planner-load-slip.module.ts"],"names":[],"mappings":"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","file":"jit-jit-planner-load-slip-jit-planner-load-slip-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    Loadslip > <span>View Load Slip For JIT</span>\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export Download\\\" *ngIf='releasedDate != null'>\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"locationBack()\\\" matTooltip=\\\"Back\\\">\\n        <i class=\\\"fa fa-reply\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"loadslip-fields tab-loadslip-fields\\\">\\n    <div class=\\\"row margin-bottom-5\\\">\\n      <div class=\\\"col-md-7\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2\\\">\\n            <div class='inputbordered'>\\n              <div>Source</div>\\n              <div>\\n                <b>{{userSource || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pd-0 \\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Destination</div>\\n              <div>\\n                <b>{{destination?destination:'--' | uppercase}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class='form-group inputbordered'>\\n              <div>Dest Desc </div>\\n              <div [title]=\\\"description\\\" [ngClass]=\\\"{'cursor-pointer':description?.length>8}\\\">\\n                <b>{{description ? (((description?.length>8)? (description | slice:0:8)+'..':(description)) | uppercase) : '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0 \\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>\\n                Truck\\n              </div>\\n              <div>\\n                <b>{{truckType?truckType:'--'}} <span *ngIf=\\\"indentCategory\\\"> - ({{indentCategory}})</span></b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Truck Type</div>\\n              <div>\\n                <b>{{truckT?truckT:'--' }}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pd-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Transporter</div>\\n              <div>\\n                <b>{{transporter?transporter:'--' }}</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-5\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"inputbordered\\\">\\n              <div>Category</div>\\n              <div>\\n                <b>{{loadslipCategory || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 pr-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>\\n                Ship To\\n              </div>\\n              <div>\\n                <b>{{ShipTo?ShipTo:'--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Actual Truck Type</div>\\n              <div>\\n                <b>{{actualTruckType || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pd-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Variant 1</div>\\n              <div>\\n                <b>{{variant_ONE || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Frt Avail</div>\\n              <div>\\n                <b>{{ freightAvailableflag || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"row margin-bottom-5\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <div class='bordered'>\\n          <div>Shipment No</div>\\n          <div>\\n            <b>{{shipmentNumber || '--'}}</b>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3 pd-0\\\">\\n        <div class=\\\"bordered-box\\\">\\n          <div class=\\\"row text-center\\\">\\n              <div class=\\\"col-md-3 text-center bordered-box-left-div\\\">\\n                  <div>\\n                    Wt (Kg\\n                  </div>\\n                  <div >\\n                    <b>{{itemLevelTotalWeight?(itemLevelTotalWeight | number : '1.2-2'):0 }}</b>\\n                  </div>\\n                </div>\\n            <div class=\\\"col-md-3 text-center bordered-box-left-div\\\">\\n              <div>\\n                TTE Util\\n              </div>\\n              <div [ngClass]=\\\"(totalTTESeletecd > 100)?'text-danger':'color-green'\\\">\\n                <b>{{totalTTESeletecd?(totalTTESeletecd | number : '1.2-2'):0 }}%</b>\\n              </div>\\n            </div>\\n           \\n            <div class=\\\"col-md-3  bordered-box-left-div\\\">\\n              <div>\\n                Wt Util\\n              </div>\\n              <div [ngClass]=\\\"(totalMaterialWeight > 100)?'text-danger':'color-green'\\\">\\n                <b>{{totalMaterialWeight?(totalMaterialWeight | number : '1.2-2'):0}}%</b>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div>\\n                Vol Util\\n              </div>\\n              <div [ngClass]=\\\"(totalTruckVolume > 100)?'text-danger':'color-green'\\\">\\n                <b>{{totalTruckVolume?(totalTruckVolume | number : '1.2-2'):0}}%</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-5 pr-0\\\">\\n        <!-- <div class=\\\"row bg-theme\\\">\\n          <div class=\\\"col-md-2 col-wid-20p\\\">\\n            <div>Tyres</div>\\n            <div>\\n              {{totalTyres?totalTyres:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-20p\\\">\\n            <div>Tubes</div>\\n            <div>\\n              {{totalTubes?totalTubes:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-20p\\\">\\n            <div>Flaps</div>\\n            <div>\\n              {{totalFlaps?totalFlaps:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-20p\\\">\\n            <div> Valves</div>\\n            <div>\\n              {{totalValves?totalValves:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-20p\\\">\\n            <div>Pctr</div>\\n            <div>{{totalPctr?totalPctr:0}} </div>\\n          </div>\\n        </div> -->\\n        <div class=\\\"row bg-theme export-padding\\\">\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Tyres</div>\\n            <div>\\n              {{totalTyres?totalTyres:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Tubes</div>\\n            <div>\\n              {{totalTubes?totalTubes:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Flaps</div>\\n            <div>\\n              {{totalFlaps?totalFlaps:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div> Valves</div>\\n            <div>\\n              {{totalValves?totalValves:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Pctr</div>\\n            <div>{{totalPctr?totalPctr:0}} </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Others</div>\\n            <div>{{totalOthersCount?totalOthersCount:0}} </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Tot Qty</div>\\n            <div>{{totalQuantity?totalQuantity:0}} </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div class=\\\"col-md-1 flow-btns\\\">\\n        <button mat-raised-button color=\\\"primary\\\">LS on Same Truck</button>\\n      </div> -->\\n      <div class=\\\"col-md-2 pl-0 flow-btns font-11 jitResponsiveBtns\\\">\\n        <button mat-raised-button mat-raised-button color=\\\"primary\\\" class=\\\"btm-action-btn tab-mb-10\\\" (click)=\\\"onOpenModal()\\\"\\n          data-target=\\\"#myModal\\\">View Invoice </button>\\n        <button mat-raised-button color=\\\"primary\\\">Share Truck(MP)</button>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <div class='bordered'>\\n          <div>Load Slip No </div>\\n          <div><b>{{loadslipID || '--'}}</b></div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pl-0\\\">\\n        <div class=\\\"bordered\\\">\\n          <div>\\n            Drop Seq\\n          </div>\\n          <div>\\n            <b>{{dropSeq?dropSeq:'--'}}</b>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pl-0\\\">\\n        <div class='bordered'>\\n          <div>TTE Qty </div>\\n          <div><b>{{totalTTE ? (totalTTE | number:'1.2-2') : '--'}}</b></div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pl-0\\\">\\n        <div class='bordered'>\\n          <div>Indt Cat</div>\\n          <div [title]=\\\"indentCategory\\\" [ngClass]=\\\"{'cursor-pointer':indentCategory?.length>15}\\\">\\n            <b>{{indentCategory ? (((indentCategory?.length>15)? (indentCategory | slice:0:15)+'..':(indentCategory)) | uppercase) : '--'}}</b>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pl-0\\\">\\n        <div class='bordered'>\\n          <div>Cntry Of Dest </div>\\n          <div [title]=\\\"countryOfDestination\\\" [ngClass]=\\\"{'cursor-pointer':countryOfDestination?.length>15}\\\">\\n            <b>{{countryOfDestination ? (((countryOfDestination?.length>15)? (countryOfDestination | slice:0:15)+'..':(countryOfDestination)) | uppercase) : '--'}}</b>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pl-0\\\">\\n        <div class=\\\"bordered\\\">\\n          <div>\\n            City\\n          </div>\\n          <div>\\n            <!-- <b>{{city?city:'--'}}</b> -->\\n            <div [title]=\\\"city\\\" [ngClass]=\\\"{'cursor-pointer':city?.length>8}\\\">\\n              <b>{{city ? (city?.length>8) ? (city | slice:0:8)+'..':(city) : '--'}}</b>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-1 pl-0 flow-btns tab-flow-btns width-8\\\">\\n        <button *ngIf=\\\"(bayArrivedDate == null)\\\" mat-raised-button class=\\\"mat-default\\\">Arrived Bay</button>\\n        <button *ngIf=\\\"(bayArrivedDate != null)\\\" class=\\\"greenButton\\\">Arrived Bay <b>: {{bay}}</b> <span>{{bayArrivedDate\\n            | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 pl-0 flow-btns tab-flow-btns width-8\\\">\\n        <button mat-raised-button color=\\\"default\\\" class=\\\"mat-default\\\"\\n          *ngIf=\\\"(lsPrintDate == null) && (releasedDate == null)\\\">Print\\n          LS</button>\\n        <button class=\\\"greenButton\\\" *ngIf=\\\"(lsPrintDate != null) && (releasedDate == null)\\\"\\n          (click)=\\\"downloadLoadslip()\\\">Print LS<span>\\n            ({{(lsPrintDate) | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}})</span></button>\\n        <button class=\\\"greenButton\\\" *ngIf=\\\"(releasedDate != null)\\\" (click)=\\\"downloadLoadslip()\\\">Print Pdf<span>\\n            ({{(lsPrintDate) | customDateFormat\\n            | date:'dd-MMM-yyyy,HH:mm'}})</span></button>\\n      </div>\\n      <!-- <div class=\\\"col-md-2 flow-btns\\\">\\n        <button mat-raised-button color=\\\"default\\\">Send for Barcode</button>\\n      </div> -->\\n      <div class=\\\"col-md-1  flow-btns tab-flow-btns width-8\\\">\\n        <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(loadingStartDate == null)\\\">Loading\\n          Start</button>\\n        <button *ngIf=\\\"(loadingStartDate != null)\\\" class=\\\"greenButton\\\">Loading Start <span>{{loadingStartDate |\\n            customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1  flow-btns tab-flow-btns width-8\\\">\\n        <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(loadingEndDate == null)\\\">Loading\\n          End</button>\\n        <button *ngIf=\\\"(loadingEndDate != null)\\\" class=\\\"greenButton\\\">Loading End <span>{{loadingEndDate |\\n            customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns tab-flow-btns width-8\\\">\\n        <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(releasedDate == null)\\\">Release</button>\\n        <button *ngIf=\\\"(releasedDate != null)\\\" class=\\\"greenButton\\\">Release <span>{{releasedDate | customDateFormat |\\n            date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"mb-3\\\">\\n    <ngx-datatable class='material' [rows]='loadSlipData' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\n       [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [summaryRow]=\\\"true\\\" [summaryHeight]=\\\"'auto'\\\"\\n      [summaryPosition]=\\\"'bottom'\\\">\\n      <ngx-datatable-column name=\\\"Invoice Number\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"INVOICE_NUMBER\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.INVOICE_NUMBER || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Material Code\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"ITEM_ID\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_ID || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Material Description\\\" [width]=\\\"250\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"ITEM_DESCRIPTION\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_DESCRIPTION || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Cat\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"ITEM_CATEGORY\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_CATEGORY || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Qty\\\" [width]=\\\"40\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"qty\\\"\\n        [summaryFunc]=\\\"qtySumm\\\" [summaryTemplate]=\\\"qtSummaryCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.qty || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Weight\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"weight\\\"\\n        [summaryFunc]=\\\"weightSumm\\\" [summaryTemplate]=\\\"weSummaryCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.weight || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n    </ngx-datatable>\\n    <ng-template #weSummaryCell let-row=\\\"row\\\" let-value=\\\"value\\\">\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{ weightSumm?(weightSumm | number : '1.2-2'):0}} Kg\\n            /{{metricTon?(metricTon | number :'1.2-2'):0}} MT\\n          </span>\\n          <!-- <span class=\\\"chip-content\\\">Total Qty : {{ qtySumm }}</span> -->\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #qtSummaryCell let-row=\\\"row\\\" let-value=\\\"value\\\">\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{ qtySumm?qtySumm:0}}</span>\\n          <!-- <span class=\\\"chip-content\\\">Total Qty : {{ qtySumm }}</span> -->\\n        </div>\\n      </div>\\n    </ng-template>\\n  </div>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header \\\">\\n        <h4 class=\\\"modal-title\\\" style=\\\"font-size: 16px\\\">Invoice\\n          <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"onCloseHandled()\\\">&times;</button>\\n        </h4>\\n      </div>\\n      <div class=\\\"modal-body\\\" style=\\\"height: 250px;overflow-y: auto\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8 table\\\">\\n            <!-- Checkbox Column -->\\n            <ng-container matColumnDef=\\\"select\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                  [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                  [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n                </mat-checkbox>\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">\\n                <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                  [checked]=\\\"selection.isSelected(row)\\\">\\n\\n                </mat-checkbox>\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"invoiceNumber\\\">\\n              <th mat-header-cell *matHeaderCellDef> Invoice Number </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceNumber}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"deliveryNumber\\\">\\n              <th mat-header-cell *matHeaderCellDef> Delivery Number </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.deliveryNumber}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"truckNumber\\\">\\n              <th mat-header-cell *matHeaderCellDef> Truck Number </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.truckNumber}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"destLoc\\\">\\n              <th mat-header-cell *matHeaderCellDef> Destination </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.destLoc}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"invoiceDate\\\">\\n              <th mat-header-cell *matHeaderCellDef> Invoice Date </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceDate}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n            </tr>\\n          </table>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MatTableDataSource } from '@angular/material';\nimport { constants } from 'src/app/constants';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {Location} from '@angular/common';\ndeclare var $: any;\n@Component({\n  selector: 'app-jit-planner-load-slip',\n  templateUrl: './jit-planner-load-slip.component.html',\n  styles: []\n})\nexport class JitPlannerLoadSlipComponent implements OnInit {\n  eventTriggers: any;\n  destinationList: any;\n  isLoading: boolean = false;\n  totalTTESeletecd: any;\n  totalTruckVolume: any;\n  totalTyres: any;\n  totalTubes: any;\n  totalFlaps: any;\n  totalValves: any;\n  ShipTo: any;\n  page = {\n    limit: 10,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n  limitOptions: Array<any> = [\n    { key: '10', value: 10 },\n    { key: '20', value: 20 },\n    { key: '30', value: 30 },\n    { key: '50', value: 50 },\n    { key: '100', value: 100 }\n  ];\n  pageSize: number;\n  loadSlipData = [];\n  source = '';\n  destination = '';\n  countryOfDestination ='';\n  truckType = '';\n  minDate = new Date();\n  editing = {};\n  createLoadSlipSuccess: boolean = false;\n  truckTypes = [];\n  loadslipUtilizationData: any;\n  totalMaterialWeight: any;\n  shiptoPlaceList: any;\n  userSource: string;\n  isLoadslipIdAvaliable: boolean = false;\n  setDefaultCurrency: string;\n  totalPctr: any;\n  viewType: string;\n  loadslipID: any;\n  bayArrivedDate: any;\n  loadingStartDate: any;\n  loadingEndDate: any;\n  confirmedDate: any;\n  releasedDate: any;\n  lsPrintDate: any;\n  shipmentNumber: any;\n  bay: any;\n  totalLoadedQty: any;\n  loadslipCategory: any;\n  marketSegmentMap: any;\n  roles: any;\n  itemLevelTotalTTE: any;\n  itemLevelTotalWeight: any;\n  itemLevelTotalVolume: any;\n  displayedColumns: string[] = ['select', 'invoiceNumber', 'deliveryNumber', 'truckNumber', 'destLoc', 'invoiceDate'];\n  dataSource = new MatTableDataSource<PeriodicElement>();\n  selection = new SelectionModel<PeriodicElement>(true, []);\n  invoiceDataList = [];\n  containerNum: string;\n  selectedInvoiceListItems = [];\n  isConfirmed: boolean = false;\n  dropSeq: string;\n  freightAvailableflag: string;\n  multistopTruckNumber: string;\n  variant_ONE: string;\n  actualTruckType: string;\n  transporter: string;\n  city: string;\n\n  finalInvoiceList = [];\n  selectedInvoiceItems = [];\n  @ViewChild('weSummaryCell') weSummaryCell: TemplateRef<any>;\n  weightSumm: number = 0;\n  qtySumm: number = 0;\n  truckT: string;\n  metricTon: number = 0;\n  description: any;\n  indentCategory: any;\n  totalTTE: any;\n  totalOthersCount: number=0;\n  totalQuantity: number=0;\n  menuName: string;\n\n  constructor(\n    public service: ApiserviceService,\n    private router: Router,\n    private ActivatedRoute: ActivatedRoute,\n    private toastr: ToastrService,\n    private dialog: MatDialog,private location: Location\n  ) {\n    setTimeout(() => { this.isLoading = true; }, 0);\n    // this.userSource = localStorage.getItem(\"sourceID\");\n    this.loadslipID = this.ActivatedRoute.snapshot.params['loadslipId'];\n    // this.viewType = this.ActivatedRoute.snapshot.params['viewType']\n    console.log(this.ActivatedRoute.snapshot.params);\n    this.roles = constants.roles;\n    this.menuName = this.ActivatedRoute.snapshot.queryParams['menuName'];\n\n\n    if (this.loadslipID) {\n      this.isLoadslipIdAvaliable = true;\n      this.getLoadSlipByIdFromServer(this.loadslipID);\n\n\n    }\n  }\n\n  ngOnInit() {\n    if(this.service.checkRole() == 'JIT_GAT'){\n      localStorage.setItem(\"userMenu\", this.menuName);\n\n    }else{\n      localStorage.setItem(\"userMenu\", \"load-slip\");\n    }\n    \n    this.pageSize = 20;\n    this.page.limit = 20;\n  }\n  getLoadSlipByIdFromServer(loadslipID) {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getLoadSlipDetailsByID + \"/\" + loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        this.destination = responseData.destination;\n        this.shipmentNumber = responseData.shipmentID;\n        this.loadslipCategory = responseData.loadslipCategory;\n        this.bayArrivedDate = responseData.bayArrivedDate;\n        this.loadingStartDate = responseData.loadingStartDate;\n        this.loadingEndDate = responseData.loadingEndDate;\n        this.confirmedDate = responseData.confirmedDate;\n        this.releasedDate = responseData.releasedDate;\n        this.lsPrintDate = responseData.lsPrintDate;\n        this.bay = responseData.bay;\n        this.ShipTo = responseData.shipTo;\n        this.truckType = responseData.truckNumber;\n        this.totalTyres = responseData.totalTyres;\n        this.totalTubes = responseData.totalTubes;\n        this.totalFlaps = responseData.totalFlaps;\n        this.totalValves = responseData.totalValves;\n        this.totalPctr = responseData.totPctr;\n        this.userSource=responseData.source;\n        this.multistopTruckNumber = responseData.truckNumber;\n        // this.IS_MULTI_STOP = responseData.multiStop;\n        this.totalTyres = responseData.totalTyres;\n        this.totalTubes = responseData.totalTubes;\n        this.totalFlaps = responseData.totalFlaps;\n        this.totalValves = responseData.totalValves;\n        this.totalPctr = responseData.totPctr;\n        this.totalOthersCount=responseData.otherQty;\n        this.totalQuantity = responseData.totQty;\n        this.dropSeq = responseData.dropSeq;\n        this.freightAvailableflag = responseData.freightAvailableflag;\n        // Shipment level values\n        this.totalTTESeletecd = responseData.shipmentTTEUtil;\n        this.totalMaterialWeight = responseData.shipmentWeightUtil;\n        this.totalTruckVolume = responseData.shipmentVolumeUtil;\n        //Loads slip values \n        // this.loadslipTteUtil = responseData.tteUtil;\n        // this.loadslipWtUtil = responseData.weightUtil;\n        // this.loadslipVolUtil = responseData.volumeUtil;\n        this.totalLoadedQty = responseData.totalLoadedQty;\n        this.itemLevelTotalTTE = responseData.totalTTE;\n        this.itemLevelTotalWeight = responseData.totalWeight;\n        this.itemLevelTotalVolume = responseData.totalVolume;\n        // variants & Actual Truck Type\n        this.variant_ONE = responseData.variant1;\n        this.actualTruckType = responseData.actualTruckType;\n        this.truckT = responseData.truckType;\n        this.transporter = responseData.servprov;\n        this.city = responseData.city;\n        this.countryOfDestination = responseData.countryName;\n        this.indentCategory = responseData.truckIndentCategory;\n        this.description = responseData.description;\n        this.totalTTE = responseData.totalTTE;\n\n\n        this.invoiceDataList = responseData['delInvHeaderList'];\n        for (let i = 0; i < this.invoiceDataList.length; i++) {\n          if (this.invoiceDataList[i].loadslipId == this.loadslipID) {\n            this.selectedInvoiceListItems.push(this.invoiceDataList[i]);\n            this.dataSource = new MatTableDataSource<PeriodicElement>(this.selectedInvoiceListItems);\n          }\n        }\n        this.selection = new SelectionModel<PeriodicElement>(true, this.selectedInvoiceListItems);\n\n        this.setLoadSlipValue(responseData);\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\")\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n  setLoadSlipValue(responseData) {\n    if (responseData.loadslipDraftDataDtos) {\n      this.totalTyres = 0;\n      this.totalTubes = 0;\n      this.totalFlaps = 0;\n      this.totalValves = 0;\n      this.totalPctr = 0;\n      responseData.loadslipDraftDataDtos.forEach(data => {\n        let newData = {\n          \"BATCH_CODE\": data.batchCode,\n          \"qty\": data.loadedQty,\n          \"lineNumber\": data.lineNumber,\n          \"ITEM_DESCRIPTION\": data.itemDesc,\n          \"ITEM_ID\": data.itemId,\n          \"VOLUME\": data.grossVol,\n          \"WEIGHT\": data.grossWt,\n          \"TTE\": data.tte,\n          \"SUM_QTY\": data.availableQty,\n          \"ITEM_CATEGORY\": data.itemCategory,\n          \"MIN_PRIORITY\": data.priority,\n          \"isScannable\": data.isScannable,\n          // flap details\n          // \"FLAP_DESC\": data.flapSKU,\n          \"flapBatch\": data.flapBatch,\n          \"FLAP_CODE\": data.flapSKU,\n          \"FLAP_COMP_QTY\": data.flapCompQty,\n          \"totalFlapQty\": data.falpQty,\n\n          //tube details\n          \"tubeBatch\": data.tubeBatch,\n          \"TUBE_CODE\": data.tubeSKU,\n          \"TUBE_COMP_QTY\": data.tubeCompQty,\n          \"totalTubeQty\": data.tubeQty,\n\n          //value details\n          \"VALVE_DESC\": data.valveBatch,\n          \"VALVE_CODE\": data.valveSKU,\n          \"VALVE_COMP_QTY\": data.valveCompQty,\n          \"totalValueQty\": data.valveQty,\n          \"INVOICE_NUMBER\": data.invoiceNumber,\n          \"weight\": data.weight\n        };\n        this.loadSlipData.push(newData);\n        this.loadSlipData = [...this.loadSlipData];\n      });\n      this.totalTyres = responseData.totalTyres;\n      this.totalTubes = responseData.totalTubes;\n      this.totalFlaps = responseData.totalFlaps;\n      this.totalValves = responseData.totalValves;\n      this.totalPctr = responseData.totPctr;\n      this.totalTTESeletecd = responseData.tteUtil;\n      this.totalMaterialWeight = responseData.weightUtil;\n      this.totalTruckVolume = responseData.volumeUtil;\n      this.totalLoadedQty = responseData.totalLoadedQty;\n      this.itemLevelTotalTTE = responseData.totalTTE;\n      this.itemLevelTotalWeight = responseData.totalWeight;\n      this.itemLevelTotalVolume = responseData.totalVolume;\n      this.weightSummaryCell();\n    }\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.selectedInvoiceListItems.length;\n    return numSelected === numRows;\n  }\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ? this.selection.clear() : this.selectedInvoiceListItems.forEach(row => this.selection.select(row));\n  }\n  onOpenModal() {\n    $('#myModal').modal('show');\n  }\n  onCloseHandled() {\n    $('#myModal').modal('hide');\n  }\n  weightSummaryCell() {\n    this.loadSlipData.forEach((item) => {\n      this.weightSumm += item.WEIGHT;\n      this.qtySumm += item.qty;\n    });\n    this.metricTon = this.weightSumm / 1000;\n  }\n// Download loadslip after trigger CONFIRM event\n\ndownloadLoadslip() {\n  this.isLoading = true;\n  this.service.get_service(ApiserviceService.apisList.printLoadslip + \"?loadslipId=\" + this.loadslipID).subscribe(response => {\n    if (response['statusCode'] == 200) {\n      let responseData = response['data'];\n      const linkSource = 'data:application/pdf;base64,' + responseData;\n      var element = document.createElement('a');\n      element.setAttribute('href', linkSource);\n      element.setAttribute('download', this.loadslipID);\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n\n      this.isLoading = false;\n      this.toastr.success(response['message']);\n    } else {\n      this.isLoading = false;\n      this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n    }\n  }, (err) => {\n    console.log(\"Error\", err);\n    this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    this.isLoading = false;\n  })\n}\n\n\nlocationBack(){\n  this.location.back();\n}\n\n  // Print Excel\n  export(): void {\n    this.isLoading = true;\n    this.service.get_service_DownLoadExcel(ApiserviceService.apisList.printLoadslip + '?loadslipId=' + this.loadslipID + '&excel=' + true).subscribe(response => {\n      if(response.body.type == 'application/json'){\n        //  When user requests for excel for cancelled LS then the return type will be 'application/json'\n        // Other wise it will of type blob\n         this.isLoading=false;\n         this.toastr.error(\"Loadslip is found as cancelled...\",\"Error!\");\n  \n       }else if (response) {\n        // Uncomment when export excel is generated in backend\n        var blob = new Blob([response.body], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n        // var filename = 'LoadslipDetails.xlsx';\n        var filename = this.loadslipID+'.xlsx';\n        const link = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        document.body.appendChild(a);\n        a.setAttribute('style', 'display: none');\n        a.href = link;\n        a.download = filename\n        a.click();\n        window.URL.revokeObjectURL(link);\n        a.remove();\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n\n  }\n\n\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n","import { JitPlannerLoadSlipComponent } from './jit-planner-load-slip.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { customMaterialModule } from 'src/app/angular-material';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\n\n\nconst routes: Routes = [\n  { path: '', component: JitPlannerLoadSlipComponent },\n  { path: ':loadslipId', component: JitPlannerLoadSlipComponent },\n  { path: ':loadslipId/:viewType', component: JitPlannerLoadSlipComponent },\n];\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    FormsModule,\n    customMaterialModule,\n    LoaderModule,\n    NgxDatatableModule,\n    CustomDatePipeModule\n\n  ],\n  declarations: [JitPlannerLoadSlipComponent]\n})\nexport class JitPlannerLoadSlipModule { }\n"],"sourceRoot":""}