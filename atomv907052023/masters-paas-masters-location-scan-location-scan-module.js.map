{"version":3,"sources":["webpack:///./src/app/masters/paas-masters/location-scan/location-scan.component.html","webpack:///./src/app/masters/paas-masters/location-scan/location-scan.component.scss","webpack:///./src/app/masters/paas-masters/location-scan/location-scan.component.ts","webpack:///./src/app/masters/paas-masters/location-scan/location-scan.module.ts"],"names":[],"mappings":"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","file":"masters-paas-masters-location-scan-location-scan-module.js","sourcesContent":["module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"mt-item-header\\\">\\n    <b> PaaS Masters &gt; Location Scan </b>\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <!-- <button class=\\\"theme-small-button\\\" (click)=\\\"upload()\\\" matTooltip=\\\"Upload excel\\\">\\n        <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i>\\n      </button> -->\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"displayAddForm()\\\" matTooltip=\\\"Add New Location\\\">\\n        <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <!-- <button class=\\\"theme-small-button\\\" [routerLink]=\\\"['/admin/paas-masters/upload-location-scan']\\\" matTooltip=\\\"Upload excel\\\">\\n        <i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i>\\n      </button> -->\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n\\n\\n\\n\\n\\n \\n\\n\\n<div class=\\\"mt-item-fields\\\" *ngIf=\\\"isShow\\\">\\n<div class=\\\"col-md-12 row\\\">\\n<div class=\\\"col-md-12 padding-right-40\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 pd-0\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Location Id\\\" [(ngModel)]=\\\"locationId\\\" name=\\\"locationId\\\">\\n          </mat-form-field>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n          <mat-form-field>\\n            <!-- <input matInput placeholder=\\\"Scannable\\\" [(ngModel)]=\\\"scannable\\\" name=\\\"scannable\\\"> -->\\n            <mat-select placeholder=\\\"Scannable\\\" [(ngModel)]=\\\"scannable\\\" name=\\\"scannable\\\" #prior=\\\"ngModel\\\">\\n              <mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">\\n                {{food.viewValue}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Item Category\\\" [(ngModel)]=\\\"itemCategory\\\" name=\\\"itemCategory\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n          </mat-form-field>\\n      </div>\\n    </div>\\n  </div>\\n  <div class='col-md-6 pd-0'>\\n    <div class=\\\"row mg-0\\\">\\n    </div>\\n  </div>\\n</div>\\n</div>\\n<div class=\\\"pull-right\\\">\\n<div class=\\\"search-fileds\\\">\\n  <button class=\\\"theme-small-button\\\" (click)=\\\"doSubmitSearch()\\\" matTooltip=\\\"Search\\\">\\n    <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n  </button>\\n  <button class=\\\"theme-delete-button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear All\\\">\\n    <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n  </button>\\n</div>\\n</div>\\n</div>\\n</div>\\n\\n\\n\\n \\n\\n  <div class=\\\"mt-item-table\\\">\\n    <div>\\n        <!-- class='material ngx-table-custom-scroll  ngx-table-tr-custom-scroll' -->\\n        <!-- <ngx-datatable class='material ngx-table-custom-scroll  ngx-table-tr-custom-scroll' #table \\n        [rows]='resultDataList' [externalPaging]=\\\"true\\\"\\n        (page)=\\\"datatablePageData($event)\\\" [scrollbarH]=\\\"true\\\" [headerHeight]=\\\"50\\\" \\n        [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\"\\n        [limit]=\\\"page.limit\\\" [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\"> -->\\n  <ngx-datatable class='material ngx-table-custom-scroll  ngx-table-tr-custom-scroll' #table [columnMode]=\\\"'force'\\\"\\n    [rows]='resultDataList' [externalPaging]=\\\"true\\\" (page)=\\\"datatablePageData($event)\\\" [scrollbarH]=\\\"false\\\"\\n    [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"page.limit\\\" [count]=\\\"page.count\\\"\\n    [offset]=\\\"page.offset\\\">\\n  \\n    <ngx-datatable-column name=\\\"Location Id\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"locationId\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.locationId}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Scannable\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"scannable\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.scannable}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Item Category\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" prop=\\\"itemCategory\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.itemCategory}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"insertUser\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.insertUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Insert Date\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"insertDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{formatDate(row.insertDate)}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Update User\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"updateUser\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.updateUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Update Date\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"updateDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{trimDate(row.updateDate)}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <!-- <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"showComments(row.comments,row.loadslipId)\\\"></i> -->\\n    <ngx-datatable-column name=\\\"Action\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n        <button class=\\\"theme-small-button btn\\\" matTooltip=\\\"Modify Item\\\" (click)=\\\"showUpdateModel(row)\\\"\\n          [disabled]=\\\"(row.isError)\\\">\\n          <i class=\\\"fa fa-edit fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </ng-template>\\n    </ngx-datatable-column>\\n       <!-- Footer Template starts -->\\n       <ngx-datatable-footer>\\n        <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n          let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n          <div class=\\\"page-count\\\">\\n            <span *ngIf=\\\"selectedCount\\\">\\n              {{selectedCount.toLocaleString()}} Selected |\\n            </span>\\n            Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n            (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n            {{(rowCount)}} records.\\n          </div>\\n          <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n            [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\" [size]=\\\"pageSize\\\"\\n            [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\" (change)=\\\"table.onFooterPage($event)\\\">\\n          </datatable-pager>\\n        </ng-template>\\n      </ngx-datatable-footer>\\n      <!-- Footer Template Ends -->\\n  </ngx-datatable>\\n    </div>\\n  </div>\\n</div>\\n\\n  <div class=\\\"modal\\\" id=\\\"myModal\\\"><div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <form name=\\\"form\\\" #f=\\\"ngForm\\\"  (ngSubmit)=\\\"(f.form.valid && updateLocationScan(f))\\\">\\n        <!-- Modal Header -->\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title text-primary\\\">Update Location Scan</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"form-group\\\">\\n              <mat-form-field appearance=\\\"standard\\\" class=\\\"example-full-width\\\">\\n                  <mat-select placeholder=\\\"Scannable\\\" [(ngModel)]=\\\"scannableu\\\" name=\\\"scannableu\\\" #prior=\\\"ngModel\\\"\\n                  required>\\n                  <mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">\\n                    {{food.viewValue}}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"(f.submitted && scannableu.invalid)\\\">\\n                  <p *ngIf=\\\"scannableu.errors.required\\\">Scannableu is\\n                    <strong>required</strong>\\n                  </p>\\n                </mat-error>\\n                <p class=\\\"mtop6\\\">Scannable</p>\\n              </mat-form-field>\\n            </div>\\n        </div>\\n        <!-- Modal footer -->\\n        <div class=\\\"modal-footer\\\">\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" >Close</button> -->\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btm-action-btn\\\">Update</button>\\n          <button type=\\\"button\\\" mat-raised-button class=\\\"mat-default\\\" color=\\\"default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  </div>\\n  <br><br>\\n\\n\\n\\n\\n\\n\\n\\n  <!--                         \\n                    <input matInput placeholder=\\\"Location Id\\\" [(ngModel)]=\\\"locationIdF\\\" name=\\\"locationIdF\\\" required\\n                      #qty=\\\"ngModel\\\">\\n                    <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                      <p *ngIf=\\\"qty.errors.required\\\">Location Id is\\n                        <strong>required</strong>\\n                      </p>\\n                    </mat-error> -->\\n <!-- <mat-form-field appearance=\\\"standard\\\">\\n                              <mat-label>Location Id</mat-label>\\n                              <input matInput aria-label=\\\"Location Id\\\" (keyup)=\\\"getfilterDestination($event)\\\" autocomplete=\\\"off\\\"\\n                                [matAutocomplete]=\\\"statesAutocomplete\\\" [(ngModel)]=\\\"locationIdF\\\" name=\\\"locationIdF\\\"\\n                                #locationIdF=\\\"ngModel\\\" required>\\n                              <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                                <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\">\\n                                  <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                                </mat-option>\\n                              </mat-autocomplete>\\n                              <mat-error *ngIf=\\\"(f.submitted && destinationLocation.invalid)\\\">\\n                                <p *ngIf=\\\"destinationLocation.errors.required\\\">Location Id is\\n                                  <strong>required</strong>\\n                                </p>\\n                              </mat-error>\\n                            </mat-form-field> -->\\n\\n\\n<div class=\\\"mt-item-fields\\\" *ngIf=\\\"displayForm\\\">\\n  <div class=\\\"col-md-12 padding-right-40\\\">\\n    <mat-card>\\n      <form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"(f.form.valid && addNewLocation(f))\\\">\\n        <h4 class=\\\"mt-item-header text-center text-primary\\\">\\n          <b> Add New Location </b></h4>\\n        <br>\\n        <div class=\\\"row\\\">\\n          <div class='col-md-1 pd-0'>\\n            <div class=\\\"row mg-0\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6 pd-0\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                      <mat-select placeholder=\\\"Location Id\\\" [(ngModel)]=\\\"locationIdF\\\" name=\\\"locationIdF\\\" #qty=\\\"ngModel\\\" required>\\n                          <mat-option *ngFor=\\\"let loc of locationIds\\\" [value]=\\\"loc\\\">\\n                            {{loc}}\\n                          </mat-option>\\n                        </mat-select>\\n                      <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                          <p *ngIf=\\\"qty.errors.required\\\">Location Id is <strong>required</strong></p>\\n                        </mat-error>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <!-- <input matInput placeholder=\\\"Scannable\\\" [(ngModel)]=\\\"scannableF\\\" name=\\\"scannableF\\\"> -->\\n                    <mat-select placeholder=\\\"Scannable\\\" [(ngModel)]=\\\"scannableF\\\" name=\\\"scannableF\\\" #qty=\\\"ngModel\\\"\\n                      required>\\n                      <mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">\\n                        {{food.viewValue}}\\n                      </mat-option>\\n                    </mat-select>\\n                    <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                        <p *ngIf=\\\"qty.errors.required\\\">Scannable is <strong>required</strong>\\n                        </p>\\n                      </mat-error>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class='col-md-5 pd-0'>\\n            <div class=\\\"row mg-0\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <!-- <input matInput placeholder=\\\"Item Category\\\" [(ngModel)]=\\\"itemCategoryF\\\" name=\\\"itemCategoryF\\\"> -->\\n                  <mat-form-field appearance=\\\"standard\\\">\\n                    <mat-label>Item Category</mat-label>\\n                    <!-- <input matInput [(ngModel)]=\\\"itemCategoryF\\\" name=\\\"itemCategoryF\\\" autocomplete=\\\"off\\\" required #qty=\\\"ngModel\\\">\\n                    <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                      <p *ngIf=\\\"qty.errors.required\\\">Item Category is\\n                        <strong>required</strong>\\n                      </p>\\n                    </mat-error> -->\\n                    <mat-select placeholder=\\\"Item Category\\\" [(ngModel)]=\\\"itemCategoryF\\\" name=\\\"itemCategoryF\\\" #qty=\\\"ngModel\\\" required>\\n                        <mat-option *ngFor=\\\"let loc of scmGroupList\\\" [value]=\\\"loc\\\">\\n                          {{loc}}\\n                        </mat-option>\\n                      </mat-select>\\n                    <mat-error *ngIf=\\\"(f.submitted && qty.invalid)\\\">\\n                        <p *ngIf=\\\"qty.errors.required\\\">Item Category is <strong>required</strong></p>\\n                      </mat-error>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" matTooltip=\\\"Add Location Scan\\\" class=\\\"btm-action-btn\\\">Save</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hc3RlcnMvcGFhcy1tYXN0ZXJzL2xvY2F0aW9uLXNjYW4vbG9jYXRpb24tc2Nhbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiserviceService } from 'src/app/services/api/apiservice.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as XLSX from 'xlsx';\nimport { NgForm } from '@angular/forms';\ndeclare var $: any;\nimport { UiUtil } from '../../../uiUtil';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\n\n@Component({\n  selector: 'app-location-scan',\n  templateUrl: './location-scan.component.html',\n  styleUrls: ['./location-scan.component.scss']\n})\nexport class LocationScanComponent implements OnInit {\n\n  isLoading: boolean = false;\n  isShow: boolean = true;\n\n  // salesSku1:any = \"\";\n  // salesSku:any = \"\";\n  // itemId:any = \"\";\n  // compQty:any = \"\";\n  // itemSeq:any = \"\";\n  // oeCode:any = \"\";\n  // itemClassification: any = \"\";\n  // itemDescription: any = \"\";\n  // itemType: any = \"\";\n  // itemGroup: any = \"\";\n  // tte: any = \"\";\n  // loadFactor: any = \"\";\n  // formattedDate: string;\n  // \n\n\n  effectiveDate: any = \"\";\n  formattedDate: string;\n\n  locationId: any = \"\";\n  scannable: any = \"\";\n  itemCategory: any = \"\";\n  insertUser: any = \"\";\n  insertDate: any = \"\";\n  updateUser: any = \"\";\n  updateDate: any = \"\";\n\n\n  locationIdF: any = \"\";\n  scannableF: any = \"\";\n  itemCategoryF: any = \"\";\n\n  locationIdu: any = \"\";\n  scannableu: any = \"\";\n  itemCategoryu: any = \"\";\n\n\n  displayForm: boolean = false;\n  resultDataList: any[];\n  responseItemsList: any[];\n  scannableTypesList = ['Y', 'N'];\n  integrationMsg: string;\n\n  editing = {};\n\n  page = {\n    limit: 100,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 50\n  };\n\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"paas-master\");\n    this.getLocationIds();\n    this.getScmgroupsList();\n  }\n\n  //show the filter\n  showFilter() {\n    this.isShow = !this.isShow\n  }\n\n  // Datatable Footer\n  onFooterPage(pageInfo) {\n    console.log(pageInfo);\n\n  }\n\n  emptySumm() {\n    return null;\n  }\n\n\n  locationIds: any[] = [];\n  scmGroupList: any[] = [];\n\n  getLocationIds() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getLocationIdsList).subscribe(response => {\n      //console.log(\"response array string: \"+JSON.stringify(response));\n      this.locationIds = response['data'];\n      this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  getScmgroupsList() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getScmgroupsList).subscribe(response => {\n      //console.log(\"response array string: \"+JSON.stringify(response));\n      this.scmGroupList = response['data'];\n      this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n\n  displayAddForm() {\n    if (this.displayForm)\n      this.displayForm = false;\n    else\n      this.displayForm = true;\n  }\n\n\n  foods: any[] = [\n    { value: 'Y', viewValue: 'Y' },\n    { value: 'N', viewValue: 'N' }\n  ];\n\n\n  ApprovalEditing = {};\n  pendingPlanList = [];\n\n\n\n  doSubmitSearch() {\n    let data = {\n      locationId: this.locationId,\n      scannable: this.scannable,\n      itemCategory: this.itemCategory,\n    }\n    console.log(\"submit data:  \" + JSON.stringify(data));\n    this.doSearch(data)\n  }\n\n  doSearch(data) {\n    this.isLoading = true;\n    console.log(\"submit data:  \" + JSON.stringify(data));\n    this.service.post_service(ApiserviceService.apisList.getLocationScan, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.page.count = response['data'].total;\n        this.page.limit = response['data'].pageLength;\n        this.resultDataList = response['data'].locationScanList;\n        console.log(\"response length: \" + this.resultDataList.length);\n        console.log(\"response array string: \" + JSON.stringify(this.resultDataList));\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong 99999\", \"Error!\");\n      this.isLoading = false;\n    })\n    //this.toastr.error(\"Received http error 404. Please check service urlcccc\")\n  }\n\n  //server side pagination\n  datatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    let bodyData = {\n      index: pageInfo.offset,\n      locationId: this.locationId,\n      scannable: this.scannable,\n      itemCategory: this.itemCategory,\n    }\n    this.doSearch(bodyData);\n  }\n\n\n\n\n\n\n\n\n  insertStatus: string = \"\";\n\n  addNewLocation(form: NgForm) {\n    this.isLoading = true;\n    let data = {\n      \"locationScanList\": [\n        {\n          \"locationId\": this.locationIdF,\n          \"scannable\": this.scannableF,\n          \"itemCategory\": this.itemCategoryF\n        }\n      ]\n    }\n    console.log(\"submit data:  \" + JSON.stringify(data));\n    this.service.post_service(ApiserviceService.apisList.addOrUploadLocationScan, data).subscribe(response => {\n      // console.log(\"response array string: \"+JSON.stringify(response));\n      this.insertStatus = response['data'].message;\n      if (this.insertStatus === \"Sucess\") {\n        this.toastr.success(response['message']);\n      }\n      else if (this.insertStatus === \"Failed\") {\n        this.toastr.error(\"Please check!\", \"Could not insert record..\");\n      }\n      this.isLoading = false;\n      form.resetForm();\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n\n  showUpdateModel(row) {\n    this.locationIdu = row.locationId;\n    this.scannableu = row.scannable;\n    this.itemCategoryu = row.itemCategory;\n    $(\"#myModal\").modal('show');\n  }\n\n  updateLocationScan(form: NgForm) {\n    this.isLoading = true;\n    let data = {\n      \"locationScanList\": [\n        {\n          \"locationId\": this.locationIdu,\n          \"scannable\": this.scannableu,\n          \"itemCategory\": this.itemCategoryu\n        }\n      ]\n    }\n    console.log(\"updateLocationScan submit data:  \" + JSON.stringify(data));\n    this.service.post_service(ApiserviceService.apisList.updateLocationScan, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.isLoading = false;\n        this.doSubmitSearch();\n        this.toastr.success(response['message']);\n\n        $(\"#myModal\").modal('hide');\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n\n\n  insDate: any = \"\";\n  insDatep: any = \"\";\n  updDate: any = \"\";\n  updDatep: any = \"\";\n\n\n  export(): void {\n    if (this.resultDataList.length > 0) {\n      this.isLoading = true;\n      let data = {\n        locationId: this.locationId,\n        scannable: this.scannable,\n        itemCategory: this.itemCategory,\n        // pageLength: this.page.count < this.service.maxPageLengthForExcel ? this.page.count : this.service.maxPageLengthForExcel,\n        pageLength: this.page.count\n      }\n\n      this.service.post_service(ApiserviceService.apisList.getLocationScan, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          let excelRawData = [...response['data'].locationScanList];\n          let newExcelData = [];\n          for (let i = 0; i < excelRawData.length; i++) {\n            this.insDate = this.formatDate(excelRawData[i].insertDate);\n            this.insDatep = this.effectiveDate;\n            this.updDate = this.formatDate(excelRawData[i].updateDate);\n            this.updDatep = this.effectiveDate;\n\n            let data = {\n              \"Location Id\": excelRawData[i].locationId,\n              \"Scannable\": excelRawData[i].scannable,\n              \"Item Category\": excelRawData[i].itemCategory,\n              \"Insert User\": excelRawData[i].insertUser,\n              \"Insert Date  \": this.insDatep,\n              \"Update User \": excelRawData[i].updateUser,\n              \"Update Date \": this.updDatep,\n            }\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'Location Scan.xlsx');\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : 'Something went wrong...', 'Error!');\n          this.isLoading = false;\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong 99999\", \"Error!\");\n        this.isLoading = false;\n      })\n\n    } else {\n      this.toastr.error('No Data To Generate Excel...', 'Error!');\n      this.isLoading = false;\n    }\n  }\n\n  clearAll() {\n    this.locationId = \"\";\n    this.scannable = \"\";\n    this.insertUser = \"\";\n    this.insertDate = \"\";\n    this.updateUser = \"\";\n    this.updateDate = \"\";\n    this.itemCategory = \"\";\n  }\n\n  // Refresh data\n  refreshData() {\n    this.isLoading = true;\n    this.clearAll();\n    let data = {};\n    this.table.offset = 0;\n    this.page.offset = 0;\n    this.doSubmitSearch();\n    // this.service.post_service(ApiserviceService.apisList.getMtItem, data).subscribe(response => {\n    //   if (response['statusCode'] == 200) {\n    //     let responseData = response['data'].mtOeBoms;\n    //     this.responseItemsList = responseData;\n    //     this.responseItemsList = [...this.responseItemsList]\n    //     // this.page.count = response['data'].total;\n    //     // this.page.limit = response['data'].pageLength;\n    //     this.isLoading = false;\n    //   } else {\n    //     this.isLoading = false;\n    //     this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n    //   }\n    // }, (err) => {\n    //   this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    //   this.isLoading = false;\n    // })\n  }\n\n\n\n\n  //UTILS  \n\n  formatDate(data) {\n    if (data != null && data) {\n      let formatted = new Date(data),\n        mnth = (\"0\" + (formatted.getMonth() + 1)).slice(-2),\n        day = (\"0\" + formatted.getDate()).slice(-2);\n      this.formattedDate = [day, this.getMonth(mnth), formatted.getFullYear()].join(\"-\");\n      this.effectiveDate = this.formattedDate;\n      return this.formattedDate;\n    } else {\n      this.effectiveDate = \"\";\n    }\n  }\n  month_names = {\n    \"01\": \"Jan\",\n    \"02\": \"Feb\",\n    \"03\": \"Mar\", \"04\": \"Apr\", \"05\": \"May\", \"06\": \"Jun\", \"07\": \"Jul\", \"08\": \"Aug\", \"09\": \"Sep\", \"10\": \"Oct\", \"11\": \"Nov\", 12: \"Dec\"\n  };\n\n  trimDate(date) {\n    if (date === \"\" || date === undefined)\n      return \"\";\n    else\n      var array = date.substring(0, 10).split(\"-\");\n    return array[2] + \"-\" + this.getMonth(array[1]) + \"-\" + array[0];\n  }\n\n  trimEmpty(val) {\n    if (val === \"\" || val === undefined)\n      return \"\";\n    else {\n      console.log(typeof val)\n      console.log(val + \"----\" + val.length);\n      // return val.trim();\n    }\n  }\n\n  getMonth(number) {\n    return this.month_names[number]\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LocationScanComponent } from './location-scan.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoaderModule } from '../../../public/loader/loader-shared.module';\nimport { customMaterialModule } from '../../../angular-material';\nimport { FormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nconst routes: Routes = [\n  { path: '', component: LocationScanComponent }\n];\n\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    LoaderModule,\n    CommonModule,\n    customMaterialModule,\n    FormsModule,\n    NgxDatatableModule\n  ],\n  declarations: [LocationScanComponent]\n})\nexport class LocationScanModule { }\n"],"sourceRoot":""}