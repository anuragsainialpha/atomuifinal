{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/gate-security/gatesecurity-truck-inventory-shipping/gatesecurity-truck-inventory-shipping.component.html","webpack:///./src/app/gate-security/gatesecurity-truck-inventory-shipping/gatesecurity-truck-inventory-shipping.component.ts","webpack:///./src/app/gate-security/gatesecurity-truck-inventory-shipping/gatesecurity-truck-inventory-shipping.module.ts"],"names":[],"mappings":"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","file":"gate-security-gatesecurity-truck-inventory-shipping-gatesecurity-truck-inventory-shipping-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\">\\n</app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    <b>Truck status > Truck Inventory > Shipping</b>\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"Filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"manualplan-fields\\\" *ngIf=\\\"isShow\\\">\\n      <form (submit)=\\\"truckstatusIndetsFilter()\\\">\\n    <div class=\\\"col-md-12 row\\\">\\n      <div class=\\\"col-md-12 padding-right-40\\\">\\n        <div class=\\\"row tab-loadslip-fields\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n              <!--  -->\\n              <div class=\\\"col-md-2 pl-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput aria-label=\\\"Source\\\" placeholder=\\\"Source\\\"\\n                      (keyup)=\\\"getfilterDestination($event,'source',isIntransitTruck)\\\" autocomplete=\\\"off\\\"\\n                      [matAutocomplete]=\\\"sourceAutocomplete\\\" [(ngModel)]=\\\"source\\\" name=\\\"source\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                    <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n                        <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput aria-label=\\\"Destination\\\" placeholder=\\\"Destination\\\" (keyup)=\\\"getfilterDestination($event,'destination')\\\" autocomplete=\\\"off\\\"\\n                      [matAutocomplete]=\\\"destinationAutocomplete\\\" [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\">\\n                    <mat-autocomplete #destinationAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\">\\n                        <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div> -->\\n\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Destination\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n                      [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      (keyup)=\\\"getfilterDestination($event,'destination', !isIntransitTruck)\\\">\\n                    <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\"\\n                        (click)=\\\"setDestDescription(list.description)\\\"\\n                        (onSelectionChange)=\\\"setDestDescription(list.description)\\\">\\n                        <span>{{list.value}}</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"destDisAutocomplete\\\"\\n                      [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destDisAutocomplete\\\"\\n                      (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                    <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                        (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                        <span>({{list.description}})</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-md-4 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <mat-select placeholder=\\\"Truck/Container Type\\\" [(ngModel)]=\\\"truckType\\\" name=\\\"truckType\\\" multiple>\\n                      <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                      <mat-option *ngFor=\\\"let truck of truckList\\\" [value]=\\\"truck.value\\\"> {{truck.value}} </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <input matInput [(ngModel)]=\\\"trckNumber\\\" name=\\\"truck number\\\" autocomplete=\\\"off\\\"\\n                    placeholder=\\\"Truck Number\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput aria-label=\\\"transporter\\\" placeholder=\\\"Transporter\\\"\\n                      (keyup)=\\\"getfilterTransporter($event)\\\" autocomplete=\\\"off\\\"\\n                      [matAutocomplete]=\\\"transporterAutocomplete\\\" [(ngModel)]=\\\"transporter\\\" name=\\\"transporter\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                    <mat-autocomplete #transporterAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of transporterList\\\" [value]=\\\"list.value\\\">\\n                        <span>{{list.value}}</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <input matInput aria-label=\\\"Country of Destination\\\" placeholder=\\\"Country of Destination\\\"\\n                    (keyup)=\\\"countryOfDestinationFilter($event,'destCountrySearch')\\\" autocomplete=\\\"off\\\"\\n                    [matAutocomplete]=\\\"dischargeAutocomplete\\\" [(ngModel)]=\\\"destCountryName\\\" name=\\\"destCountryName\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                  <mat-autocomplete #dischargeAutocomplete=\\\"matAutocomplete\\\">\\n                    <mat-option *ngFor=\\\"let country of countryList\\\" [value]=\\\"country.description\\\">\\n                      <span matTooltip={{country.description}}>{{country.value}} - ({{country.description}})</span>\\n                    </mat-option>\\n                  </mat-autocomplete>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <mat-form-field>\\n                  <input matInput [(ngModel)]=\\\"shipmentId\\\" name=\\\"shipment\\\" autocomplete=\\\"off\\\" placeholder=\\\"Shipment Id\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                </mat-form-field>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row tab-loadslip-fields\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-3 pl-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [(ngModel)]=\\\"indentId\\\" name=\\\"indentid\\\" placeholder=\\\"Indent Id\\\" autocomplete=\\\"off\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [min]=\\\"minDate\\\" placeholder=\\\"Gate In From Date\\\" disabled\\n                      [matDatepicker]=\\\"gateInFromDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateInFromDate\\\"\\n                      (dateChange)=\\\"addEvent('gateInDate', $event)\\\" name=\\\"gateInToDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"gateInFromDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #gateInFromDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <input matInput [min]=\\\"gateInFromDate\\\" placeholder=\\\"Gate In To Date\\\" disabled\\n                    [matDatepicker]=\\\"gateInToDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateInToDate\\\"\\n                    name=\\\"gateInToDate\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"gateInToDatePicker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #gateInToDatePicker [disabled]=\\\"!gateInFromDate\\\"></mat-datepicker>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [min]=\\\"minDate\\\" placeholder=\\\"Rep From Date\\\" disabled\\n                      [matDatepicker]=\\\"reportFromDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"reportFromDate\\\"\\n                      (dateChange)=\\\"addEvent('repFromDate', $event)\\\" name=\\\"reportfromDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"reportFromDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #reportFromDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n\\n              <!-- <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [min]=\\\"minDate\\\" placeholder=\\\"Gate Out From Date\\\" disabled [matDatepicker]=\\\"gateOutFromDatePicker\\\"\\n                      autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateOutFromDate\\\" (dateChange)=\\\"addEvent('gateOutDate', $event)\\\"\\n                      name=\\\"gateoutFromDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"gateOutFromDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #gateOutFromDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <input matInput [min]=\\\"gateOutFromDate\\\" placeholder=\\\"Gate Out To Date\\\" disabled [matDatepicker]=\\\"gateOutToDatePicker\\\"\\n                    autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateOutToDate\\\" name=\\\"gateoutToDate\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"gateOutToDatePicker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #gateOutToDatePicker [disabled]=\\\"!gateOutFromDate\\\"></mat-datepicker>\\n                </mat-form-field>\\n              </div> -->\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [min]=\\\"reportFromDate\\\" placeholder=\\\"Rep To Date\\\" disabled\\n                      [matDatepicker]=\\\"reportToDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"reportToDate\\\"\\n                      name=\\\"reportToDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"reportToDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #reportToDatePicker [disabled]=\\\"!reportFromDate\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <mat-form-field>\\n                  <mat-select placeholder=\\\"Bay Status\\\" [(ngModel)]=\\\"bayStatus\\\" name=\\\"bayStatus\\\" multiple>\\n                    <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                    <mat-option *ngFor=\\\"let item of baystatusList\\\" [value]=\\\"item\\\"> {{item}} </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <mat-form-field>\\n                  <mat-select placeholder=\\\"Select Status\\\" name=\\\"status\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"statusType\\\" multiple>\\n                    <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                    <mat-option *ngFor=\\\"let status of reportTruckStatusList\\\" [value]=\\\"status.value\\\">\\n                      {{status.key}}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <mat-form-field>\\n                  <mat-select placeholder=\\\"Rejection\\\" [(ngModel)]=\\\"rejection\\\" name=\\\"rejection\\\" multiple>\\n                    <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                    <mat-option *ngFor=\\\"let item of rejectionList\\\" [value]=\\\"item\\\"> {{item}} </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <mat-select placeholder=\\\"Ind Cat\\\" [(ngModel)]=\\\"materialGrp\\\" name=\\\"materialGrp\\\" multiple>\\n                      <mat-option *ngFor=\\\"let category of categoryList\\\" [value]=\\\"category\\\">{{category}}</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"pull-right\\\">\\n        <div class=\\\"search-fileds\\\">\\n          <button class=\\\"theme-small-button\\\" type=\\\"submit\\\" matTooltip=\\\"Search\\\">\\n            <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <button class=\\\"theme-delete-button\\\" type=\\\"button\\\" (click)=\\\"clearData()\\\" matTooltip=\\\"Clear All\\\">\\n            <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n      </form>\\n  </div>\\n  <!-- For FGS  Gate Security role Table-->\\n  <ngx-datatable class='material  ngx-table-custom-scroll ngx-table-tr-custom-scroll' #table\\n    [rows]='gateSeuReportedTrucksIndents' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"30\\\"\\n    [rowHeight]=\\\"'auto'\\\" [limit]=\\\"page.limit\\\" [scrollbarH]=\\\"true\\\" [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\"\\n    [externalPaging]=\\\"true\\\" (page)=\\\"GateSecurityDatatablePageData($event)\\\" [selected]=\\\"selected\\\"\\n    [selectionType]=\\\"'single'\\\">\\n    <ngx-datatable-column name=\\\"Indent Id\\\" [frozenLeft]=\\\"freezeLeftValue\\\" [width]=\\\"180\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n      prop=\\\"indentId\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <!-- intransitTruck' --- Intransit trucks can't be edit  -->\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-indentId'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-indentId']\\\">\\n            <span class=\\\"edit-label\\\">{{row.indentId}}\\n            </span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <div *ngIf=\\\"editing[rowIndex+ '-indentId']\\\">\\n            <input class=\\\"table-input\\\" [value]=\\\"row.indentId\\\" (blur)=\\\"updateValue($event, 'indentId', rowIndex)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n          </div>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{row.indentId | uppercase}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Truck Number\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"truckNumber\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <!-- intransitTruck' --- Intransit trucks can't be edit  -->\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-truckNumber'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-truckNumber']\\\">\\n            <span class=\\\"edit-label\\\">{{row.truckNumber | uppercase}}\\n            </span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <div *ngIf=\\\"editing[rowIndex+ '-truckNumber']\\\">\\n            <input class=\\\"table-input\\\" [value]=\\\"row.truckNumber\\\" (blur)=\\\"updateValue($event, 'truckNumber', rowIndex)\\\"\\n              (keypress)=\\\"helperService.alphaNumericOnly($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n          </div>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{row.truckNumber | uppercase}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Transporter\\\" [frozenLeft]=\\\"true\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n      prop=\\\"transporter\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.transporter | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Destination\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n      prop=\\\"destination\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destination}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <!-- Edit destination -->\\n    <!-- <ngx-datatable-column  [frozenLeft]=\\\"true\\\" name=\\\"Destination\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"destination\\\">\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n        <ng-container *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-destination'] = true\\\"\\n              *ngIf=\\\"!editing[rowIndex + '-destination']\\\">\\n              <span class=\\\"edit-label\\\">{{row.destination}}\\n              </span>\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"editing[rowIndex+ '-destination']\\\">\\n              <input matInput autofocus [matAutocomplete]=\\\"datatableDestIndentAutocomplete\\\" \\n                [value]=\\\"row.destination\\\" autofocus (keyup)=\\\"getfilterDestination($event,'destination')\\\">\\n              <mat-autocomplete #datatableDestIndentAutocomplete=\\\"matAutocomplete\\\">\\n                <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\" (click)=\\\"getIndentsFromDest(row,list)\\\"\\n                        (onSelectionChange)=\\\"getIndentsFromDest(row,list)\\\">\\n                  <span>{{list.value}}</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{row.destination}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column> -->\\n    <ngx-datatable-column name=\\\"Dest Description\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"destDis\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destDis}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Truck Type\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"truckType\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-truckType'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-truckType']\\\">\\n            <span class=\\\"edit-label\\\">{{row.truckType}}\\n            </span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <mat-form-field *ngIf=\\\"editing[rowIndex+ '-truckType']\\\">\\n            <mat-select autofocus placeholder=\\\"Truck Type\\\" [ngModel]=\\\"row.truckType\\\" name=truckType{rowIndex}\\n              (ngModelChange)=\\\"updateValue($event,'truckType',rowIndex)\\\">\\n              <mat-option *ngFor=\\\"let truck of truckList\\\" [value]=\\\"truck.value\\\">\\n                {{truck.value}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{row.truckType | uppercase}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Report Date\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"reportedDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.reportedDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Truck Status\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"status\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.status}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Bay Status\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"callStatus\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <ng-container *ngIf=\\\"(row.bayStatus != '')\\\">\\n          <span [ngClass]=\\\"{'blink':((row.bayStatus == 'CALL') && (row.gateInDate == null))}\\\">{{(row.bayStatus ==\\n            'CALL') ? ((row.gateInDate)? row.bayStatus:'Calling'):row.bayStatus}}</span>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"(row.bayStatus == '' || row.bayStatus == null)\\\">\\n          {{row.bayStatus}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"In weight (Kg)\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"inWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <mat-form-field>\\n          <input matInput (blur)=\\\"updateValue($event, 'inWeight', rowIndex)\\\" [value]=\\\"row.inWeight?row.inWeight:''\\\"\\n            (keypress)=\\\"service.numberOnly($event)\\\" autocomplete=\\\"off\\\" />\\n        </mat-form-field>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"In weight Action\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <button (click)=\\\"inweightUpdate(row)\\\" class=\\\"theme-small-button\\\" [ngClass]=\\\"(row.inWeightStatus)?'green':''\\\"\\n          matTooltip=\\\"In Weight Update\\\">\\n          <i class=\\\"fa fa-arrow-circle-o-right fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Gate In\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" prop=\\\"gateIn\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <span *ngIf=\\\"row.gateIn\\\">{{row.gateInDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span>\\n        <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!(row.gateIn)\\\" (click)=\\\"gateInTruck(row,rowIndex)\\\"\\n          class=\\\"table-btn\\\">Gate\\n          In\\n        </button>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Out Weight (Kg)\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"outWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <mat-form-field>\\n          <input matInput (blur)=\\\"updateValue($event, 'outWeight', rowIndex)\\\" [value]=\\\"row.outWeight?row.outWeight:''\\\"\\n            autocomplete=\\\"false\\\" (keypress)=\\\"service.numberOnly($event)\\\" />\\n        </mat-form-field>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Out weight Action\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <button (click)=\\\"outWeightUpdate(row)\\\" matTooltip=\\\"Out weight Update\\\" class=\\\"theme-delete-button\\\"\\n          [ngClass]=\\\"(row.outWeightStatus)?'red':''\\\">\\n          <i class=\\\"fa fa-arrow-circle-left fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Net Weight (Kg)\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"netWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.netWeight}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SAP invoice weight(Kg)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvWeight}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Weight Diff (Kg)\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"netWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <span [ngClass]=\\\"(row.weightDiffStatus)?'text-danger':''\\\">{{row.diffInvWeight}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Truck Capacity (Kg)\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"truckCapacity\\\">\\n      <!-- <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <mat-form-field>\\n          <lable matInput (blur)=\\\"updateValue($event, 'truckCapacity', rowIndex)\\\" [value]=\\\"row.truckCapacity?row.truckCapacity:''\\\"\\n            autocomplete=\\\"false\\\" (keypress)=\\\"service.numberOnly($event)\\\" />\\n        </mat-form-field>\\n      </ng-template> -->\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.truckCapacity}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Gate Out\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" prop=\\\"gateOut\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <span *ngIf=\\\"row.gateOut\\\">{{row.gateOutDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span>\\n        <!-- First button visible only On GatedIn not reject for captcure the Gateout commnts -->\\n        <!-- <button mat-raised-button color=\\\"primary\\\"\\n          *ngIf=\\\"!(row.gateOut) && (row.status == 'GATED_IN') && (row.rejectionStatus !=='REJECTED') \\\"\\n          (click)=\\\"gateoutModal(row,rowIndex)\\\" class=\\\"table-btn\\\">Gate\\n          Out\\n        </button> -->\\n        <button mat-raised-button color=\\\"primary\\\"\\n          *ngIf=\\\"!(row.gateOut) && (row.status == 'GATED_IN') && (row.rejectionStatus !=='REJECTED') \\\"\\n          (click)=\\\"gateoutWithoutLSModal(row,rowIndex)\\\" class=\\\"table-btn\\\">Gate\\n          Out\\n        </button>\\n        <button mat-raised-button color=\\\"primary\\\"\\n          *ngIf=\\\"!(row.gateOut) && ((row.status !== 'GATED_IN') || (row.rejectionStatus =='REJECTED'))\\\"\\n          (click)=\\\"gateOutTruck(row,rowIndex)\\\" class=\\\"table-btn\\\">Gate\\n          Out\\n        </button>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Loadslip Comments\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"loadslipComments\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <div [title]=\\\"row.loadslipComments\\\" (click)=\\\"showLoadslipComments(row.loadslipComments)\\\"\\n          [ngClass]=\\\"{'cursor-pointer':row.loadslipComments?.length>9}\\\" *ngIf=\\\"(row.loadslipComments)\\\">\\n          {{(row.loadslipComments?.length>9) ? (row.loadslipComments | slice:0:9)+'..':(row.loadslipComments)}}\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Gate Comments\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"comments\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <div class=\\\"edit-field\\\" [title]=\\\"row.comments\\\">\\n          <span class=\\\"edit-label\\\">{{ (row.comments?.length>9)? (row.comments | slice:0:9)+'..':(row.comments)}}\\n          </span>\\n          <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"showComments(row.comments,row)\\\"></i>\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Rejection\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"rejectionStatus\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.rejectionStatus}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Rejection Desc\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n      prop=\\\"rejectionDesc\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.rejectionDesc}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Action\\\" [width]=\\\"410\\\" [resizeable]=\\\"false\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <button mat-raised-button color=\\\"primary\\\"\\n          [disabled]=\\\"(((row.status!='GATED_IN')&&(row.status!='REPORTED')) || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck))\\\"\\n          (click)=\\\"saveTruck(row)\\\" class=\\\"table-btn mr-10\\\">Save Truck\\n        </button>\\n        <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"(row.status=='REPORTED')\\\"\\n          [disabled]=\\\"row.rejectionStatus == 'REJECTED'\\\" (click)=\\\"openTruckModel(row,rowIndex)\\\"\\n          class=\\\"table-btn mr-10\\\">Reject Truck\\n        </button>\\n        <ng-container>\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!row.shipmentId\\\"\\n            (click)=\\\"viewLoadslip(row.shipmentId,'loadslipView')\\\" class=\\\"table-btn mr-10\\\">View\\n            Loadslips\\n          </button>\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!row.shipmentId\\\"\\n            (click)=\\\"viewLoadslip(row.shipmentId,'invoiceView')\\\" class=\\\"table-btn\\\">LoadSlip\\n            Invoice\\n          </button>\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Driver Name\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"driverName\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-driverName'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-driverName']\\\">\\n            <span class=\\\"edit-label\\\">{{row.driverName}}\\n            </span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <mat-form-field *ngIf=\\\"editing[rowIndex+ '-driverName']\\\">\\n            <input matInput [value]=\\\"row.driverName\\\" (blur)=\\\"updateValue($event, 'driverName', rowIndex)\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n          </mat-form-field>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{row.driverName}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Driver Number\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"driverContact\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-driverContact'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-driverContact']\\\">\\n            <span class=\\\"edit-label\\\">{{row.driverContact}}</span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <mat-form-field *ngIf=\\\"editing[rowIndex+ '-driverContact']\\\">\\n            <input matInput [value]=\\\"row.driverContact\\\" (keypress)=\\\"service.numberOnly($event)\\\"\\n              (keypress)=\\\"helperService.numericOnly($event)\\\" (blur)=\\\"updateValue($event, 'driverContact', rowIndex)\\\">\\n          </mat-form-field>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{row.driverContact}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Driver Licence\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"driverLicense\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-driverLicense'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-driverLicense']\\\">\\n            <span class=\\\"edit-label\\\">{{row.driverLicense}}</span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <mat-form-field *ngIf=\\\"editing[rowIndex+ '-driverLicense']\\\">\\n            <input matInput [value]=\\\"row.driverLicense\\\" (blur)=\\\"updateValue($event, 'driverLicense', rowIndex)\\\"\\n              oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n          </mat-form-field>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{row.driverLicense}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Driver Consent Status\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"trackingConsentStatus\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.trackingConsentStatus}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Telecom Service Provider\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"consentPhoneTelecom\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.consentPhoneTelecom | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    \\n    <ngx-datatable-column name=\\\"Initiate Consent\\\" [width]=\\\"160\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"action\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <ng-container>\\n         \\n            <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"(row.trackingConsentStatus!='Success' || row.trackingConsentStatus!=null)\\\"\\n            [disabled]=\\\"row.trackingConsentStatus == 'Success'\\\" (click)=\\\"checkConsent(row)\\\"\\n            class=\\\"table-btn mr-10\\\">Check Consent Status\\n          </button>\\n          \\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n\\n    <ngx-datatable-column name=\\\"ShipmentId\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"shipmentId\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.shipmentId | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Container\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"containerNum\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-containerNum'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-containerNum']\\\">\\n            <span class=\\\"edit-label\\\">{{row.containerNum | uppercase}}\\n            </span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <mat-form-field *ngIf=\\\"editing[rowIndex+ '-containerNum']\\\">\\n            <input matInput [value]=\\\"row.containerNum\\\" (blur)=\\\"updateValue($event, 'containerNum', rowIndex)\\\"\\n              (keypress)=\\\"helperService.alphaNumericOnly($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n          </mat-form-field>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{row.containerNum | uppercase}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Bay\\\" [width]=\\\"40\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"bayAssigned\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.bayAssigned}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SAP invoice value(INR)\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvValue}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Eway bill No\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.ewayBillNo}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Source\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.source}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"LR Num\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.lrNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"LR Date\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.lrDate ? (row.lrDate | customDateFormat | date:'dd-MMM-yyyy') : '--'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Indent Cat\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.indentCategory}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SAP Invoice\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvoice}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tot Tyre\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totTyre}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tot Tube\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totTube}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tot Flap\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totFlap }}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tot Valve\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totValve}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tot PCTR\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totPctr}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Other Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.otherQty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tot Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totQty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Country of Destination\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"destCountryName\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destCountryName}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Gate Serial No\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"gateControlCode\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.gateControlCode}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"PUC\\\" [width]=\\\"127\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"puc\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-puc'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-puc']\\\">\\n            <span class=\\\"edit-label\\\">{{(row.puc)?'Yes':'No'}}</span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <div *ngIf=\\\"editing[rowIndex+ '-puc']\\\" class=\\\"custom-table-radio-buttons\\\">\\n            <mat-radio-group [(ngModel)]=\\\"row.puc\\\" name=puc{{rowIndex}}>\\n              <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\"\\n                (change)=\\\"updateValue($event, 'puc', rowIndex)\\\">\\n                {{item.key}}\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{(row.puc)?'Yes':'No'}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Insurance\\\" [width]=\\\"127\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"insurance\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-insurance'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-insurance']\\\">\\n            <span class=\\\"edit-label\\\">{{(row.insurance)?'Yes':'No'}}</span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <div *ngIf=\\\"editing[rowIndex+ '-insurance']\\\" class=\\\"custom-table-radio-buttons\\\">\\n            <mat-radio-group [(ngModel)]=\\\"row.insurance\\\" name=insurance{{rowIndex}}>\\n              <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\"\\n                (change)=\\\"updateValue($event, 'insurance', rowIndex)\\\">\\n                {{item.key}}\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{(row.insurance)?'Yes':'No'}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Seat Belt\\\" [width]=\\\"127\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"seatBelt\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-seatBelt'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-seatBelt']\\\">\\n            <span class=\\\"edit-label\\\">{{(row.seatBelt)?'Yes':'No'}}</span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <div *ngIf=\\\"editing[rowIndex+ '-seatBelt']\\\" class=\\\"custom-table-radio-buttons\\\">\\n            <mat-radio-group [(ngModel)]=\\\"row.seatBelt\\\" name=seatBelt{{rowIndex}}>\\n              <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\"\\n                (change)=\\\"updateValue($event, 'seatBelt', rowIndex)\\\">\\n                {{item.key}}\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{(row.seatBelt)?'Yes':'No'}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"First Aid\\\" [width]=\\\"127\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"firstAid\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-firstAid'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-firstAid']\\\">\\n            <span class=\\\"edit-label\\\">{{(row.firstAid)?'Yes':'No'}}</span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <div *ngIf=\\\"editing[rowIndex+ '-firstAid']\\\" class=\\\"custom-table-radio-buttons\\\">\\n            <mat-radio-group [(ngModel)]=\\\"row.firstAid\\\" name=firstAid{{rowIndex}}>\\n              <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\"\\n                (change)=\\\"updateValue($event, 'firstAid', rowIndex)\\\">\\n                {{item.key}}\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{(row.firstAid)?'Yes':'No'}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Fire Extenguisher\\\" [width]=\\\"127\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"fireExtenguisher\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\"\\n            (click)=\\\"editing[rowIndex + '-fireExtenguisher'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-fireExtenguisher']\\\">\\n            <span class=\\\"edit-label\\\">{{(row.fireExtenguisher)?'Yes':'No'}}</span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <div *ngIf=\\\"editing[rowIndex+ '-fireExtenguisher']\\\" class=\\\"custom-table-radio-buttons\\\">\\n            <mat-radio-group [(ngModel)]=\\\"row.fireExtenguisher\\\" name=fireExtenguisher{{rowIndex}}>\\n              <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\"\\n                (change)=\\\"updateValue($event, 'fireExtenguisher', rowIndex)\\\">\\n                {{item.key}}\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{(row.fireExtenguisher)?'Yes':'No'}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Emergency Card\\\" [width]=\\\"127\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"emergencyCard\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-emergencyCard'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-emergencyCard']\\\">\\n            <span class=\\\"edit-label\\\">{{(row.emergencyCard)?'Yes':'No'}}</span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <div *ngIf=\\\"editing[rowIndex+ '-emergencyCard']\\\" class=\\\"custom-table-radio-buttons\\\">\\n            <mat-radio-group [(ngModel)]=\\\"row.emergencyCard\\\" name=emergencyCard{{rowIndex}}>\\n              <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\"\\n                (change)=\\\"updateValue($event, 'emergencyCard', rowIndex)\\\">\\n                {{item.key}}\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{(row.emergencyCard)?'Yes':'No'}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Spark Arrestor\\\" [width]=\\\"127\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"sparKArrestor\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-sparKArrestor'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-sparKArrestor']\\\">\\n            <span class=\\\"edit-label\\\">{{(row.sparKArrestor)?'Yes':'No'}}</span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <div *ngIf=\\\"editing[rowIndex+ '-sparKArrestor']\\\" class=\\\"custom-table-radio-buttons\\\">\\n            <mat-radio-group [(ngModel)]=\\\"row.sparKArrestor\\\" name=sparKArrestor{{rowIndex}}>\\n              <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\"\\n                (change)=\\\"updateValue($event, 'sparKArrestor', rowIndex)\\\">\\n                {{item.key}}\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{(row.sparKArrestor)?'Yes':'No'}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Fitness Certificate\\\" [width]=\\\"127\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"fitnessCert\\\">\\n      <ng-template let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\" ngx-datatable-cell-template>\\n        <ng-container\\n          *ngIf=\\\"(row.status === 'GATED_IN' || row.status == 'REPORTED') && (row.rejectionStatus != 'REJECTED') && (!row.intransitTruck)\\\">\\n          <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\" (click)=\\\"editing[rowIndex + '-fitnessCert'] = true\\\"\\n            *ngIf=\\\"!editing[rowIndex + '-fitnessCert']\\\">\\n            <span class=\\\"edit-label\\\">{{(row.fitnessCert)?'Yes':'No'}}</span>\\n            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n          </div>\\n          <div *ngIf=\\\"editing[rowIndex+ '-fitnessCert']\\\" class=\\\"custom-table-radio-buttons\\\">\\n            <mat-radio-group [(ngModel)]=\\\"row.fitnessCert\\\" name=fitnessCert{{rowIndex}}>\\n              <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"item.value\\\"\\n                (change)=\\\"updateValue($event, 'fitnessCert', rowIndex)\\\">\\n                {{item.key}}\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n        </ng-container>\\n        <ng-container\\n          *ngIf=\\\"(row.status !== 'GATED_IN' && row.status !== 'REPORTED') || (row.rejectionStatus == 'REJECTED') || (row.intransitTruck)\\\">\\n          {{(row.fitnessCert)?'Yes':'No'}}\\n        </ng-container>\\n      </ng-template>\\n    </ngx-datatable-column>\\n  \\n  <ngx-datatable-column name=\\\"Fuel Type\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"fuelType\\\">\\n    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n      {{row.fuelType}}\\n    </ng-template>\\n  </ngx-datatable-column><ngx-datatable-column name=\\\"BS Norms\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"updateUser\\\">\\n    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n      {{row.bsNorms}}\\n    </ng-template>\\n  </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"insertUser\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.insertUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Update User\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"updateUser\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.updateUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Upload Photo\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"uploadPhoto\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <input #file type=\\\"file\\\" [hidden]=\\\"true\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event,row.shipmentId,row.truckNumber)\\\">\\n        <button mat-button #upload (click)=\\\"file.click()\\\">Upload file</button>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    \\n    <!-- Footer Template starts -->\\n    <ngx-datatable-footer>\\n      <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n        let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n        <div class=\\\"page-count\\\">\\n          <span *ngIf=\\\"selectedCount\\\">\\n            {{selectedCount.toLocaleString()}} Selected |\\n          </span>\\n          Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n          (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n          {{(rowCount)}} records.\\n        </div>\\n        <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n          [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\"\\n          [size]=\\\"pageSize\\\" [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n          (change)=\\\"table.onFooterPage($event)\\\">\\n        </datatable-pager>\\n      </ng-template>\\n    </ngx-datatable-footer>\\n    <!-- Footer Template Ends -->\\n  </ngx-datatable>\\n</div>\\n\\n<!-- View Loadslips  for coorsponding shipment -->\\n<div class=\\\"modal\\\" id=\\\"loadslipsModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Loadslip List</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <ul>\\n          <li *ngFor=\\\"let item of loadslipList;let i=index\\\">\\n            <span>\\n              {{i+1}})\\n              <span class=\\\"link\\\" style=\\\"margin-left: 10px;margin-right: 50px\\\"\\n                (click)=\\\"viewLoadslipnavigation(item)\\\">{{item.loadlipId}}\\n              </span>\\n              <span>\\n                {{item.type}}\\n              </span>\\n            </span>\\n          </li>\\n        </ul>\\n      </div>\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<!--  -->\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <form name=\\\"form\\\" #f=\\\"ngForm\\\">\\n        <!-- Modal Header -->\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Truck Inventory Comments</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <!-- Modal body -->\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <mat-form-field appearance=\\\"standard\\\" class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Comments\\\" aria-label=\\\"State\\\" [(ngModel)]=\\\"truckComments\\\" name=\\\"Comments\\\"\\n                #comments=\\\"ngModel\\\" autocomplete=\\\"off\\\">\\n              <!-- <mat-error *ngIf=\\\"(f.submitted && comments.invalid)\\\">\\n                <p *ngIf=\\\"comments.errors.required\\\">Comment is\\n                  <strong>required</strong>\\n                </p>\\n              </mat-error> -->\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <!-- Modal footer -->\\n        <div class=\\\"modal-footer\\\">\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" >Close</button> -->\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"save(f)\\\">Save</button>\\n          <button type=\\\"button\\\" mat-raised-button class=\\\"mat-default\\\" color=\\\"default\\\"\\n            data-dismiss=\\\"modal\\\">Close</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal\\\" id=\\\"rejectionModel\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Reject Reason</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select placeholder=\\\"Reject reasons\\\" [(ngModel)]=\\\"rejectReason\\\" name=\\\"rejectReason\\\">\\n              <mat-option *ngFor=\\\"let reason of rejectRasonList\\\" [value]=\\\"reason.rejectionCode\\\">\\n                {{reason.rejectionCode}}-{{reason.rejectionDesc}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"rejectTruck(rejectReason)\\\">Submit</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!-- View Loadslips  for coorsponding shipment -->\\n<div class=\\\"modal\\\" id=\\\"commentModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">loadslip-Comments</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <p>{{loadslipComments}}</p>\\n      </div>\\n      <!-- Modal footer -->\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n<div class=\\\"modal fade\\\" id=\\\"gateOutRejectionModal\\\" back-drop=\\\"static\\\" key-board=\\\"false\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Gateout Reason</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select placeholder=\\\"Gateout reasons\\\" [(ngModel)]=\\\"gateoutReason\\\" name=\\\"gateoutReason\\\">\\n              <mat-option *ngFor=\\\"let reason of rejectRasonList\\\" [value]=\\\"reason.rejectionCode\\\">\\n                {{reason.rejectionCode}}-{{reason.rejectionDesc}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"gateOutReason(gateoutReason)\\\">Submit</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Displaying the Warning message when Gate security tries to Gate_Out the truck Without LS -->\\n<div class=\\\"modal fade\\\" id=\\\"gateoutWithoutLSModal\\\" back-drop=\\\"static\\\" key-board=\\\"false\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\" style=\\\"color: red;\\\">Warning</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\" style=\\\"text-align: center;\\\">\\n        <b >Truck can be Gated Out only when FGS Rejects it. </b>\\n      </div>\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">OK</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Indent List Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"destIndentModal\\\" back-drop=\\\"static\\\" key-board=\\\"false\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Indents</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select placeholder=\\\"Indents\\\" [(ngModel)]=\\\"newIndent\\\" name=\\\"newIndent\\\">\\n              <mat-option *ngFor=\\\"let destIndent of destIndentList\\\" [value]=\\\"destIndent.INDENTNUMBER\\\">\\n                {{destIndent.INDENTNUMBER}} - {{destIndent.NETBALANCE}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"setSelectedIndent(newIndent)\\\">Submit</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { HelperServiceService } from './../../services/helper-service/helper-service.service';\nimport { NgForm } from '@angular/forms';\nimport { Component, OnInit, ViewChild, DoCheck } from '@angular/core';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { constants } from 'src/app/constants';\nimport * as XLSX from 'xlsx'\nimport { Router, RouterLinkWithHref } from '@angular/router';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/public/date.adapters';\nimport * as moment from 'moment';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\ndeclare var $: any;\n@Component({\n  selector: 'app-gatesecurity-truck-inventory-shipping',\n  templateUrl: './gatesecurity-truck-inventory-shipping.component.html',\n  styles: [],\n  providers: [\n    {\n      provide: DateAdapter, useClass: AppDateAdapter\n    },\n    {\n      provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\n    }\n  ]\n})\nexport class GatesecurityTruckInventoryShippingComponent implements OnInit, DoCheck {\n  fgsReportedTrucksIndents: any;\n  gateSeuReportedTrucksIndents = [];\n  isLoading: boolean = false;\n  editing = {};\n  editingFgs = {};\n  gateSecurityIndents = [];\n  editingRDCpln = {};\n  rejectData: any;\n  rejectReason: string;\n  page = {\n    limit: 10,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 200\n  };\n  gateInFromDate: string;\n  gateInToDate: string;\n  loadSlipType: string;\n  gateOutFromDate: string;\n  gateOutToDate: string;\n  reportFromDate: string;\n  reportToDate: string;\n  userRoles: any;\n  plantBayList: any;\n  isShow: boolean = true;\n  destinationList: any[];\n  transporterList: any[];\n  indentId: any;\n  transporter: any;\n  truckType=[];\n  destination: any;\n  destinationDesc: any;\n  descriptionList = [];\n  typeOfTruckReport = {};\n  statusType=[];\n  trckNumber: any;\n  source: any;\n  sourceList: any;\n  truckComments: string;\n  rowloadslipId: string;\n  loadslipComments: string;\n  rdcTruckInventoryData: any[];\n  reportLocation: string;\n  truckList = [];\n  rejectRasonList = [];\n  reportTruckStatusList: { \"key\": string; \"value\": string; }[];\n  loadslipList = [];\n  shipmentId: string;\n  currentObj: any;\n  baystatusList = [];\n  bayStatus=[];\n  gateoutReason: string;\n  countryList: any[];\n  destCountryName: string;\n  destIndentList: any;\n  newIndent: any;\n  selected = [];\n  isIntransitTruck:boolean = true;\n  categoryList = [];\n  materialGrp = [];\n  freezeLeftValue: boolean = true;\n  trackingConsentStatus: string;\n  consentPhoneTelecom: string;\n  truckCapacity: any; \n  bsNorms: any;\n  fuelType: any;\n  fuelTypeList =  [];\n  bsNormsList = [];\n  file: File;\n  base64textString = [];\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  items = [\n    {\n      \"key\": \"Yes\",\n      \"value\": true\n    },\n    {\n      \"key\": \"No\",\n      \"value\": false\n    }\n  ]\n  // rejectionList = [\"NORMAL\", \"REJECTED\"];\n  rejection: any;\n  rejectionList: string[];\n  rowData: any = {};\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService,\n    private router: Router,\n    private helperService: HelperServiceService\n  ) {\n    this.userRoles = constants.roles;\n    this.typeOfTruckReport = constants.truckReportTypes;\n    this.reportTruckStatusList = constants.truckInventoryStatusList;\n    this.reportLocation = localStorage.getItem('sourceID');\n    this.baystatusList = constants.bayStatusList;\n  }\n  ngDoCheck(){\n    let width = $(window).width();\n    if(width < 1024) {\n      this.freezeLeftValue = false;\n    }\n    else {\n      this.freezeLeftValue = true;\n    }\n  }\n  ngOnInit() {\n    //Activation of Tabs\n    if (this.service.checkRole() == this.userRoles.rdc_PLN || (this.service.checkRole() == this.userRoles.JIT_OPERATION)) {\n      localStorage.setItem(\"userMenu\", \"RDC-GAT-REPORT\");\n    } else if ((this.service.checkRole() == this.userRoles.gateSecurity) || (this.service.checkRole() == this.userRoles.rdc_GAT) || (this.service.checkRole() == this.userRoles.JIT_GATE_SECURITY)) {\n      localStorage.setItem(\"userMenu\", \"GAT-INVENTORY-SHIPPING\");\n    }\n    else {\n      localStorage.setItem(\"userMenu\", \"fgs-truck-status\");\n    }\n    // for getting truck type master\n    this.getTruckTypeMasterData();\n    this.getAllRejectReasons();\n    let data = {\n      'type': this.typeOfTruckReport['inventory'],\n      'activity': \"P\",\n      \"reportLocation\": this.reportLocation,\n      // As per new requirement on 11/07/2019\n      \"pageLength\": 200\n    }\n    this.gateSecurityTruckInventoryShippingAPI(data);\n    this.service.get_service(ApiserviceService.apisList.getPlanByInfo).subscribe(response => {\n      console.log(response);\n      this.plantBayList = response['data'];\n    });\n    this.rejectionList = constants.rejectionList;\n    this.getCategoryMasterData();\n    this.fuelTypeList =['CNG','Petrol','Diesel','Electric'];\n    this.bsNormsList= ['BS-3','BS-4','BS-6','Others'];\n  }\n\n  gateSecurityTruckInventoryShippingAPI(data) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.getTruckData, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        this.selected=[];\n        this.gateSeuReportedTrucksIndents = response['data'].truckReportsData;\n        this.gateSeuReportedTrucksIndents = [...this.gateSeuReportedTrucksIndents];\n        console.log('data', this.gateSeuReportedTrucksIndents.length);\n        console.log('bsNorms',this.gateSeuReportedTrucksIndents);\n        this.page.limit = response['data'].pageLength;\n        this.page.count = response['data'].total;\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong\", \"!Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n  // for getting truck type master\n  getTruckTypeMasterData() {\n    this.service.get_service(ApiserviceService.apisList.truckTypeMasterData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.truckList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    });\n  }\n\n  // for getting rejectReasons\n  getAllRejectReasons() {\n    this.service.get_service(ApiserviceService.apisList.rejectReasonData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.rejectRasonList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    });\n  }\n\n\n  //clear data\n  clearData() {\n    this.destination = '';\n    this.indentId = \"\";\n    this.statusType = [];\n    this.transporter = \"\";\n    this.trckNumber = \"\";\n    this.truckType = [];\n    this.destinationDesc = \"\";\n    this.descriptionList = [];\n    this.destinationList = [];\n    this.destIndentList = [];\n    this.transporterList = [];\n    this.source = '';\n    this.gateInFromDate = '';\n    this.gateInToDate = '';\n    this.gateOutFromDate = '';\n    this.gateOutToDate = '';\n    this.reportFromDate = '';\n    this.reportToDate = '';\n    this.shipmentId = \"\";\n    this.editing = {};\n    this.bayStatus = [];\n    this.destCountryName = '';\n    this.countryList = [];\n    this.rejection = [];\n    this.materialGrp = [];\n\n  }\n\n  openTruckModel(row, rowIndex) {\n    this.rejectReason = '';\n    this.rejectData = {\n      gateControlCode: row.gateControlCode,\n      status: 'REJECT',\n      indentId: row.indentId,\n      truckNumber: row.truckNumber,\n      destDis: row.destDis,\n      destCountryName: row.destCountryName\n    }\n    $('#rejectionModel').modal('show');\n  }\n\n  rejectTruck(reason) {\n    let modifyIndex;\n    if (!reason) {\n      this.toastr.error('Please Give Reason for Rejecting Truck');\n      $('#rejectionModel').modal('show');\n    } else {\n      $('#rejectionModel').modal('hide');\n      this.isLoading = true;\n      this.rejectData['rejectionCode'] = reason;\n      this.service.post_service(ApiserviceService.apisList.rejectTruck+'?isGateSecurity='+true, this.rejectData).subscribe(response => {\n        console.log(response);\n        if (response['statusCode'] == 200) {\n          this.toastr.success(response['message']);\n          this.isLoading = false;\n          let replacebleIndex = this.gateSeuReportedTrucksIndents.findIndex(rawData => rawData.gateControlCode == this.rejectData['gateControlCode']);\n          let responseData = response['data'];\n          this.gateSeuReportedTrucksIndents[replacebleIndex] = responseData;\n          this.selected = [];\n          this.gateSeuReportedTrucksIndents = [...this.gateSeuReportedTrucksIndents];\n          this.selected = [...this.selected, responseData];\n          this.rejectReason = '';\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong\", \"!Error\")\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n\n\n\n  //refersh data \n  refreshData() {\n    this.table.offset = 0;\n    this.clearData();\n    this.selected = [];\n    // this.isLoading = true;\n    // Refresh Data FGS operations & FGs gatesecurity \n    let data = {\n      'type': this.typeOfTruckReport['inventory'],\n      'activity': \"P\",\n      \"reportLocation\": this.reportLocation\n    }\n    this.gateSecurityTruckInventoryShippingAPI(data);\n  }\n\n  // truck status filter creteria\n  truckstatusIndetsFilter() {\n    if (this.helperService.getDateValidations(this.gateInFromDate, this.gateInToDate, this.gateOutFromDate, this.gateOutToDate, this.reportFromDate, this.reportToDate)) {\n      this.isLoading = true;\n      //making offset to Zero\n      this.table.offset = 0;\n      this.selected = [];\n      let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n      let data = {\n        'source': this.source,\n        'destination': this.destination,\n        'indentID': this.indentId,\n        'status': this.statusType.toString(),\n        'transporter': this.transporter,\n        'truckNumber': this.trckNumber,\n        'truckType': this.truckType,\n        'type': this.typeOfTruckReport['inventory'],\n        'activity': \"P\",\n        \"reportLocation\": this.reportLocation,\n        \"shipmentID\": this.shipmentId,\n        // Gate In Dates\n        \"fromGateInDate\": this.gateInFromDate ? (moment(this.gateInFromDate).format('DD/MM/YYYY')) : '',\n        \"toGateInDate\": this.gateInToDate ? (moment(this.gateInToDate).format('DD/MM/YYYY')) : '',\n        // Gate Out Dates\n        \"fromGateOutDate\": this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n        \"toGateOutDate\": this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n        // Report Dates\n        \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n        \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : '',\n        \"bayStatus\": this.bayStatus,\n        \"destCountry\": obj ? (obj.value) : '',\n        \"rejection\": this.rejection,\n        \"pageLength\": this.page.pageSize,\n        \"indentCategoryList\":this.materialGrp\n      }\n\n      this.gateSecurityTruckInventoryShippingAPI(data);\n    }\n  }\n\n\n\n  //gate security server side pagination\n  GateSecurityDatatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    this.isLoading = true;\n    console.log(\"page info\", pageInfo);\n    let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n    let datatabledata = {\n      'index': pageInfo.offset,\n      'pageLength': pageInfo.pageSize,\n      'source': this.source,\n      'destination': this.destination,\n      'indentID': this.indentId,\n      'status': this.statusType.toString(),\n      'transporter': this.transporter,\n      'truckNumber': this.trckNumber,\n      'truckType': this.truckType,\n      'type': this.typeOfTruckReport['inventory'],\n      'activity': \"P\",\n      \"reportLocation\": this.reportLocation,\n      \"shipmentID\": this.shipmentId,\n      // Gate In Dates\n      \"fromGateInDate\": this.gateInFromDate ? (moment(this.gateInFromDate).format('DD/MM/YYYY')) : '',\n      \"toGateInDate\": this.gateInToDate ? (moment(this.gateInToDate).format('DD/MM/YYYY')) : '',\n      // Gate Out Dates\n      \"fromGateOutDate\": this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n      \"toGateOutDate\": this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n      // Report Dates\n      \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n      \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : '',\n      \"bayStatus\": this.bayStatus,\n      \"destCountry\": obj ? (obj.value) : '',\n      \"rejection\": this.rejection,\n      \"indentCategoryList\":this.materialGrp\n    }\n    this.gateSecurityTruckInventoryShippingAPI(datatabledata);\n\n  }\n\n  updateValue(event, cell, rowIndex) {\n    console.log('inline editing rowIndex', rowIndex)\n    // this.editing[rowIndex + '-' + cell] = false;\n    if ((cell == 'puc') || (cell == 'insurance') || (cell == 'seatBelt') || (cell == 'firstAid') || (cell == 'fireExtenguisher') || (cell == 'bsNorms') || (cell == 'fuelType')) {\n      this.gateSeuReportedTrucksIndents[rowIndex][cell] = (event.value) ? event.value : '';\n    } else {\n      this.gateSeuReportedTrucksIndents[rowIndex][cell] = (event.target) ? event.target.value : event;\n    }\n\n    this.gateSeuReportedTrucksIndents = [...this.gateSeuReportedTrucksIndents];\n    this.selected = [];\n    this.selected = [...this.selected, this.gateSeuReportedTrucksIndents[rowIndex]];\n    console.log('UPDATED!', this.gateSeuReportedTrucksIndents[rowIndex][cell]);\n  }\n  showFilter() {\n    this.isShow = !this.isShow;\n  }\n\n\n  // gate In action \n  gateInTruck(row, rowIndex) {\n    this.isLoading = true;\n    let post_URL; let data;\n    if (row.intransitTruck) {\n      // call intransit-truck-report;\n      data = {\n        truckNumber: row.truckNumber,\n        status: \"GATED_IN\",\n        gateControlCode: row.gateControlCode,\n        destDis: row.destDis,\n        destCountryName: row.destCountryName\n      }\n      post_URL = ApiserviceService.apisList.reportIntransitTruck;\n    } else {\n      // indent-report\n      data = {\n        gateControlCode: row.gateControlCode,\n        status: \"GATED_IN\",\n        indentId: row.indentId,\n        outWeight: Number(row.outWeight),\n        destDis: row.destDis,\n        destCountryName: row.destCountryName\n      }\n      post_URL = ApiserviceService.apisList.getIndentReportInfo;\n    }\n\n    // if (data.inWeight) {\n    console.log(data);\n    this.service.post_service(post_URL, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        let index = this.gateSeuReportedTrucksIndents.indexOf(row);\n        let responseData = response['data'];\n        this.gateSeuReportedTrucksIndents[index] = responseData;\n        this.gateSeuReportedTrucksIndents = [... this.gateSeuReportedTrucksIndents];\n        this.selected = [];\n        this.selected = [...this.selected, responseData];\n        this.editing = {};\n        this.isLoading = false;\n        this.toastr.success(response['message'] ? response['message'] : \"Success\")\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong\", \"!Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n    // } else {\n    //   this.isLoading = false;\n    //   this.toastr.error(\"Please enter in weight\");\n    // }\n\n  }\n\n\n  // gate OUT event\n  gateOutTruck(row, rowIndex) {\n    this.isLoading = true;\n    if (row.gateIn) {\n      // If intransitTruck is true (Intransit trucks),gate-In and gate-out APIs are different with Shipment Trucks\n      let post_URL;\n      let data;\n      //Can gateout flag for user cam gateout \n\n      let canGateOut = true;\n      //if (row.inWeightStatus) {\n        // if (row.outWeightStatus) {\n          if (row.outWeightStatus || (this.userRoles.rdc_GAT || this.userRoles.JIT_GATE_SECURITY || this.userRoles.rdc_PLN || this.userRoles.JIT_PLN || this.userRoles.JIT_OPERATION)) {\n          canGateOut = true;\n        } else {\n          canGateOut = false\n        }\n      //} else {\n\n      //}\n      if (row.intransitTruck) {\n        // call intransit-truck-report;\n        data = {\n          truckNumber: row.truckNumber,\n          status: \"INTRANSIT\",\n          gateControlCode: row.gateControlCode,\n          destDis: row.destDis,\n          destCountryName: row.destCountryName\n        }\n        post_URL = ApiserviceService.apisList.reportIntransitTruck;\n      } else {\n        // indent-report\n        data = {\n          gateControlCode: row.gateControlCode,\n          status: \"INTRANSIT\",\n          indentId: row.indentId,\n          outWeight: Number(row.outWeight),\n          destDis: row.destDis,\n          destCountryName: row.destCountryName\n        }\n        post_URL = ApiserviceService.apisList.getIndentReportInfo;\n      }\n\n      if (canGateOut) {\n        this.service.post_service(post_URL, data).subscribe(response => {\n          console.log(response);\n          if (response['statusCode'] == 200) {\n            let index = this.gateSeuReportedTrucksIndents.indexOf(row);\n            let responseData = response['data'];\n            this.gateSeuReportedTrucksIndents[index] = responseData;\n            this.gateSeuReportedTrucksIndents = [... this.gateSeuReportedTrucksIndents];\n            this.selected = [];\n            this.selected = [...this.selected, responseData];\n            this.editing = {};\n            this.isLoading = false;\n            this.toastr.success(response['message'] ? response['message'] : \"Success\")\n          } else {\n            this.isLoading = false;\n            this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong\", \"!Error\")\n          }\n        }, (err) => {\n          console.log(\"Error\", err);\n          this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        })\n      } else {\n        this.isLoading = false;\n        this.toastr.warning(\"OutWeight should be mandatory to Gateout\", \"! Warning\")\n      }\n\n    } else {\n      this.isLoading = false;\n      this.toastr.error(\"Truck can't be Gated Out before Gate In\");\n    }\n  }\n\n  gateoutModal(row) {\n    this.gateoutReason = '';\n    this.currentObj = { ...row }\n    $(\"#gateOutRejectionModal\").modal('show');\n  }\n\n  /* Just Displaying the Warning msg */\n  gateoutWithoutLSModal(row) {\n    // this.gateoutReason = '';\n    // this.currentObj = { ...row }\n    $(\"#gateoutWithoutLSModal\").modal('show');\n  }\n\n  onFooterPage(pageInfo){\n    console.log(pageInfo);\n    \n  }\n  gateOutReason(gateoutReason) {\n    if (gateoutReason) {\n      this.isLoading = true;\n      let post_URL; let data;\n      let canGateOut = true;\n      if (this.currentObj.inWeightStatus) {\n        if (this.currentObj.outWeightStatus) {\n          canGateOut = true;\n        } else {\n          canGateOut = false\n        }\n      }\n\n      if (canGateOut) {\n        data = {\n          gateControlCode: this.currentObj.gateControlCode,\n          status: \"INTRANSIT\",\n          indentId: this.currentObj.indentId,\n          outWeight: Number(this.currentObj.outWeight),\n          destDis: this.currentObj.destDis,\n          rejectionCode: gateoutReason,\n          destCountryName: this.currentObj.destCountryName\n        }\n        post_URL = ApiserviceService.apisList.getIndentReportInfo;\n        this.service.post_service(post_URL, data).subscribe(response => {\n          console.log(response);\n          if (response['statusCode'] == 200) {\n            $(\"#gateOutRejectionModal\").modal('hide');\n            let index = this.gateSeuReportedTrucksIndents.findIndex(a => a.gateControlCode == this.currentObj.gateControlCode);\n            let responseData = response['data'];\n            this.gateSeuReportedTrucksIndents[index] = responseData;\n            this.gateSeuReportedTrucksIndents = [... this.gateSeuReportedTrucksIndents];\n            this.selected = [];\n            this.selected = [...this.selected, responseData];\n            this.editing = {};\n            this.isLoading = false;\n            this.toastr.success(response['message'] ? response['message'] : \"Success\")\n          } else {\n            this.isLoading = false;\n            this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong\", \"!Error\")\n          }\n        }, (err) => {\n          console.log(\"Error\", err);\n          this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        })\n      } else {\n        this.isLoading = false;\n        this.toastr.warning(\"OutWeight should be mandatory to Gateout\", \"! Warning\")\n      }\n    } else {\n      this.isLoading = false;\n      this.toastr.warning(\"Please select Reason for Gateout\", \"! Warning\")\n    }\n\n  }\n\n\n  //get filter destination result\n  countryOfDestinationFilter(event, type) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?' + type + '=' + filtervalue).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.countryList = [];\n          this.countryList = response['data'].searchResult;\n          this.isLoading = false;\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        }\n\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n\n  }\n\n\n  //get filter destination result\n  getfilterDestination(event, typeofevent,isIntransitTruck) {\n    this.destinationDesc = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.destinationList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue+'&isIntransitTruck='+isIntransitTruck).subscribe(response => {\n        if (typeofevent === 'destination') {\n          this.destinationList = response['data'].searchResult;\n        } else {\n          this.sourceList = response['data'].searchResult;\n        }\n        console.log(\"this.destinationList\", this.destinationList)\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // filter Transporter details\n  getfilterTransporter(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.transporterList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?transporter=' + filtervalue).subscribe(response => {\n        this.transporterList = response['data'].searchResult;\n        console.log(\"this.transporterList\", this.transporterList)\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n  //filterGateSecuirtyIndents Search API\n  filterGateSecuirtyIndents() {\n    this.isLoading = true;\n    let data = {\n      indentID: this.indentId,\n      transporter: this.transporter,\n      truckType: this.truckType,\n      destination: this.destination\n    }\n    this.service.post_service(ApiserviceService.apisList.viewSearchIndents, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        this.gateSeuReportedTrucksIndents = response['data'].indents;\n        this.gateSeuReportedTrucksIndents = [... this.gateSeuReportedTrucksIndents];\n        this.page.count = response['data'].total;\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n  inweightUpdate(row) {\n    // if ((row.inWeight) && (Number(row.inWeight) !== 0)) {\n    this.isLoading = true;\n    let data = {\n      gateControlCode: row.gateControlCode,\n      indentId: row.indentId,\n      status: row.status,\n      inWeight: Number(row.inWeight),\n      destDis: row.destDis,\n      destCountryName: row.destCountryName\n    }\n    this.service.post_service(ApiserviceService.apisList.updateTruckWeight, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        let index = this.gateSeuReportedTrucksIndents.indexOf(row);\n        let responseData = response['data'];\n        this.gateSeuReportedTrucksIndents[index] = responseData;\n        this.gateSeuReportedTrucksIndents = [... this.gateSeuReportedTrucksIndents];\n        this.selected = [];\n        this.selected = [...this.selected, responseData];\n        this.editing = {};\n        this.isLoading = false;\n        this.toastr.success(response['message'] ? response['message'] : \"Success\");\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n    // } else {\n    //   this.toastr.warning(\"In-weight cannot be empty or 0\", \"!Error\")\n    // }\n  }\n\n\n  // out weight update \n  outWeightUpdate(row) {\n    // if ((row.outWeight) && (Number(row.outWeight) !== 0)) {\n    this.isLoading = true;\n    let data = {\n      gateControlCode: row.gateControlCode,\n      indentId: row.indentId,\n      status: row.status,\n      outWeight: Number(row.outWeight),\n      destDis: row.destDis,\n      destCountryName: row.destCountryName\n    }\n    this.service.post_service(ApiserviceService.apisList.updateTruckWeight, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        let index = this.gateSeuReportedTrucksIndents.indexOf(row);\n        let responseData = response['data'];\n        this.gateSeuReportedTrucksIndents[index] = responseData;\n        this.gateSeuReportedTrucksIndents = [... this.gateSeuReportedTrucksIndents];\n        this.selected = [];\n        this.selected = [...this.selected, responseData];\n        this.editing = {};\n        this.isLoading = false;\n        this.toastr.success(response['message'] ? response['message'] : \"Success\");\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n    // } else {\n    //   this.toastr.warning(\"Out-weight cannot be empty or 0\", \"!Error\")\n    // }\n\n  }\n\n  //export excel data\n  export(): void {\n    if (this.gateSeuReportedTrucksIndents.length > 0) {\n      this.isLoading = true;\n      let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n      let data = {\n        'destination': this.destination,\n        'indentID': this.indentId,\n        'status': this.statusType.toString(),\n        'transporter': this.transporter,\n        'truckNumber': this.trckNumber,\n        'truckType': this.truckType,\n        'type': this.typeOfTruckReport['inventory'],\n        'pageLength': this.page.count,\n        'source': this.source,\n        \"shipmentID\": this.shipmentId,\n        'activity': \"P\",\n        \"reportLocation\": this.reportLocation,\n        // Gate In Dates\n        \"fromGateInDate\": this.gateInFromDate ? (moment(this.gateInFromDate).format('DD/MM/YYYY')) : '',\n        \"toGateInDate\": this.gateInToDate ? (moment(this.gateInToDate).format('DD/MM/YYYY')) : '',\n        // Gate Out Dates\n        \"fromGateOutDate\": this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n        \"toGateOutDate\": this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n        // Report Dates\n        \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n        \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : '',\n        \"bayStatus\": this.bayStatus,\n        \"destCountry\": obj ? (obj.value) : '',\n        \"indentCategoryList\":this.materialGrp\n      }\n      this.service.post_service(ApiserviceService.apisList.getTruckData, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          let newViewPlanData = response['data'].truckReportsData;\n          console.log(\"newViewPlanData\", newViewPlanData);\n          let excelRawData = newViewPlanData;\n          let newExcelData = [];\n          for (let i = 0; i < excelRawData.length; i++) {\n            let data = {\n              \"Indent Id\": excelRawData[i].indentId,\n              \"Truck Number\": excelRawData[i].truckNumber,\n              \"Transporter\": excelRawData[i].transporter,\n              \"Destination\": excelRawData[i].destination,\n              \"Dest Description\": excelRawData[i].destDis,\n              \"Truck/Cont Type\": excelRawData[i].truckType,\n              \"Report Date\": this.service.customDateTimeFormat(excelRawData[i].reportedDate),\n              \"Truck Status\": excelRawData[i].status,\n              \"Bay Status\": excelRawData[i].bayStatus,\n              \"In weight (Kg)\": excelRawData[i].inWeight,\n              \"Gate In\": this.service.customDateTimeFormat(excelRawData[i].gateInDate),\n              \"Out weight (Kg)\": excelRawData[i].outWeight,\n              \"Net weight (Kg)\": excelRawData[i].netWeight,\n              \"SAP invoice weight (Kg)\": excelRawData[i].sapInvWeight,\n              \"Weight Diff (Kg)\": excelRawData.diffInvWeight,\n              \"Gate Out\": excelRawData[i].gateOutDate,\n              \"Loadslip Comments\": excelRawData[i].loadslipComments,\n              \"Gate Comments\": excelRawData[i].comments,\n              \"Rejection\": excelRawData[i].rejectionStatus,\n              \"Rejection Desc\": excelRawData[i].rejectionDesc,\n              \"Driver Name\": excelRawData[i].driverName,\n              \"Driver Number\": excelRawData[i].driverContact,\n              \"Driver License\": excelRawData[i].driverLicense,\n              \"Shipment Id\": excelRawData[i].shipmentId,\n              \"Container\": excelRawData[i].containerNum,\n              \"Bay Assigned\": excelRawData[i].bayAssigned,\n              \"SAP invoice value (INR)\": excelRawData[i].sapInvValue,\n              \"Eway bill No\": excelRawData[i].ewayBillNo,\n              \"Source\": excelRawData[i].source,\n              \"LR Num\":excelRawData[i].lrNum,\n              \"LR Date\":excelRawData[i].lrDate != null ? this.service.customDateFormat(excelRawData[i].lrDate) : null,\n              \"Indent Cat\":excelRawData[i].indentCategory,\n              \"SAP Invoice\":excelRawData[i].sapInvoice,\n              \"Tot Tyre\":excelRawData[i].totTyre,\n              \"Tot Tube\":excelRawData[i].totTube,\n              \"Tot Flap\":excelRawData[i].totFlap,\n              \"Tot Valve\":excelRawData[i].totValve,\n              \"Tot PCTR\": excelRawData[i].totPctr,\n              \"Other Qty\": excelRawData[i].otherQty,\n              \"Tot Qty\": excelRawData[i].totQty,\n              \"Country of Destination\": excelRawData[i].destCountryName,\n              \"Gate Serial No\": excelRawData[i].gateControlCode,\n              \"PUC\": (excelRawData[i].puc) ? 'Yes' : 'No',\n              \"Insurance\": (excelRawData[i].insurance) ? 'Yes' : 'No',\n              \"Seat Belt\": (excelRawData[i].seatBelt) ? 'Yes' : 'No',\n              \"First Aid\": (excelRawData[i].firstAid) ? 'Yes' : 'No',\n              \"Fire Extenguisher\": (excelRawData[i].fireExtenguisher) ? 'Yes' : 'No',\n              \"Emergency Card\": (excelRawData[i].emergencyCard) ? 'Yes' : 'No',\n              \"Spark Arrestor\": (excelRawData[i].sparKArrestor) ? 'Yes' : 'No',\n              \"Fitness Certificate\": (excelRawData[i].fitnessCert) ? 'Yes' : 'No',\n              \"Insert User\": excelRawData[i].insertUser,\n              \"Update User\": excelRawData[i].updateUser,\n              \"Tracking Consent Status\": excelRawData[i].trackingConsentStatus,\n              \"Consent Phone Telecom\": excelRawData[i].consentPhoneTelecom,\n              \"Truck Capacity (Kg)\": excelRawData[i].truckCapacity,\n              \"Fuel Type\": excelRawData[i].fuelType,\n              \"BS Norms\": excelRawData[i].bsNorms\n            }\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'truckInventoryShipping.xlsx');\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      });\n    } else {\n      this.toastr.error(\"No records found to export\", \"Error!\");\n    }\n  }\n\n\n  saveTruck(row) {\n    this.isLoading = true;\n    let data = {\n      containerNum: row.containerNum,\n      driverContact: row.driverContact,\n      driverLicense: row.driverLicense,\n      driverName: row.driverName,\n      gateControlCode: row.gateControlCode,\n      indentId: row.indentId,\n      truckNumber: row.truckNumber,\n      destDesc: row.destDis,\n      truckType: row.truckType,\n      editIndentId: this.newIndent ? this.newIndent : null,\n      destCountryName: row.destCountryName,\n      puc: row.puc,\n      insurance: row.insurance,\n      seatBelt: row.seatBelt,\n      firstAid: row.firstAid,\n      fireExtenguisher: row.fireExtenguisher,\n      emergencyCard: row.emergencyCard,\n      sparKArrestor: row.sparKArrestor,\n      fitnessCert: row.fitnessCert,\n      trackingConsentStatus: row.trackingConsentStatus,\n      truckCapacity: row.truckCapacity,\n      fuelType: row.fuelType,\n      bsNorms: row.bsNorms\n    }\n    this.service.post_service(ApiserviceService.apisList.updateTruckInventoryDetails, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        //Update data for FGS ROLE\n        let replacebleIndex = this.gateSeuReportedTrucksIndents.findIndex(rawData => rawData.gateControlCode == data.gateControlCode);\n        this.editing = {};\n        this.editingFgs = {};\n        let responseData = response['data'];\n        this.gateSeuReportedTrucksIndents[replacebleIndex] = responseData;\n        this.gateSeuReportedTrucksIndents = [...this.gateSeuReportedTrucksIndents];\n        this.selected = [];\n        this.selected = [...this.selected, responseData];\n        this.isLoading = false;\n        this.destinationList = [];\n        this.destIndentList = [];\n        this.toastr.success(response['message']);\n      }\n      else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n\n  }\n\n\n\n  // view loadslips for cooresponding shipment Id\n  viewLoadslip(shipmentNumber, view) {\n    this.isLoading = true;\n    this.loadSlipType = view;\n    this.service.get_service(ApiserviceService.apisList.openLoadslipDetails + \"?shipmentId=\" + shipmentNumber).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        if (response['data']) {\n          this.loadslipList = response['data'];\n          if (this.loadslipList.length == 1) {\n            this.viewLoadslipnavigation(this.loadslipList[0])\n          }\n          else if (this.loadslipList.length > 1) {\n            $(\"#loadslipsModal\").modal('show');\n          }\n        }\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  //set value destination\n  setDestination(value) {\n    //  this.destinationDesc = value;\n    this.destination = value;\n  }\n\n  //set value to destination description\n  setDestDescription(value) {\n    this.destinationDesc = value;\n  }\n\n  getUserDestinationList(event) {\n    this.destination = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.getDestinationDescriptionDataList + event.target.value).subscribe(response => {\n        if (response['data']) {\n          this.descriptionList = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // loadslipInvoice(shipmentNumber) {\n  //   this.viewLoadslip(shipmentNumber);\n  // }\n\n  // Navigate to loadslip view\n  viewLoadslipnavigation(item) {\n    $(\"#loadslipsModal\").modal('hide');\n    let loadSlipId = item['loadlipId'];\n    let type = item.type;\n    if (this.loadSlipType == 'loadslipView') {\n      if (type == 'FGS_EXP') {\n        this.router.navigate(['/load-slip-view-for-export/' + loadSlipId], {queryParams : {menuName : localStorage.getItem('userMenu')}});\n      } else if (type == 'JIT_OEM') {\n        this.router.navigate(['/load-slip-view-for-jit/' + loadSlipId], {queryParams : {menuName : localStorage.getItem('userMenu')}});\n      } else {\n        this.router.navigate(['/load-slip-view/' + loadSlipId], {queryParams : {menuName : localStorage.getItem('userMenu')}});\n      }\n    }\n    else {\n      this.router.navigate(['/load-slip-qty-view/' + loadSlipId], {queryParams : {menuName : localStorage.getItem('userMenu')}});\n    }\n  }\n\n  showComments(comment, row) {\n    this.truckComments = comment;\n    this.rowData = row;\n    $(\"#myModal\").modal('show');\n  }\n\n  showLoadslipComments(comments) {\n    this.loadslipComments = comments;\n    $(\"#commentModal\").modal('show');\n  }\n\n  save(form: NgForm) {\n    if (form.valid) {\n\n      this.isLoading = true;\n      // let data = {\n      //   \"comments\": this.truckComments,\n      //   \"gateControlCode\": this.rowloadslipId\n      // }\n      // Sending the entire ROW to the backend\n      let data = this.rowData;\n      data.comments = this.truckComments;\n      this.service.post_service(ApiserviceService.apisList.saveTruckComments, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.isLoading = false;\n          let index = this.gateSeuReportedTrucksIndents.findIndex(item => item.gateControlCode == response['data'].gateControlCode);\n          this.gateSeuReportedTrucksIndents[index] = response['data'];\n          this.gateSeuReportedTrucksIndents = [...this.gateSeuReportedTrucksIndents];\n          let responseData = this.gateSeuReportedTrucksIndents[index];\n          this.selected = [];\n          this.selected = [...this.selected, responseData];\n          this.toastr.success(response['message']);\n          $(\"#myModal\").modal('hide');\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // Edit Truck Destination Code\n  // getIndentsFromDest(row, selectedDest) {\n  //   if (selectedDest) {\n  //     this.isLoading = true;\n  //     let body={};\n  //     this.service.post_service(ApiserviceService.apisList.getIndentFromDest+'?location='+selectedDest.value, body ).subscribe(response => {\n  //       if (response['statusCode'] == 200) {\n  //         if (response['data'].length > 0) {\n  //           this.isLoading = false;\n  //           this.destIndentList = response['data'];\n  //           row.destination = selectedDest.value;\n  //           $('#destIndentModal').modal('show');\n  //         } else {\n  //           this.isLoading = false;\n  //           this.toastr.error(\"No Indents found for selected Destination..\", \"Error!\");\n  //         }\n  //       } else {\n  //         this.isLoading = false;\n  //         this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n  //       }\n  //     }, err => {\n  //       this.isLoading = false;\n  //       this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n  //     })\n\n  //   }\n  // }\n\n  setSelectedIndent(selectedIndent) {\n    // if (selectedIndent) {\n    //   this.newIndent = selectedIndent;\n    //   $('#destIndentModal').modal('hide');\n    //   console.log(\"new Indent Id-------->\", this.newIndent);\n\n    // }\n  }\n\n  addEvent(type, event) {\n    console.log(event.target.value);\n    if (event.target.value) {\n        /* Checking if selected from date greater than to date.\n      Clearing the toDate field when from date greater than to date */\n      switch (type) {\n        case \"gateInDate\":\n            if(this.gateInToDate && (this.gateInFromDate > this.gateInToDate)){\n              this.gateInToDate = '';\n            }\n          // this.gateInToDate = '';\n          break;\n        case \"gateOutDate\":\n            if(this.gateOutToDate && (this.gateOutFromDate > this.gateOutToDate)){\n              this.gateOutToDate = '';\n            }\n          // this.gateOutToDate = '';\n          break;\n        case \"repFromDate\":\n            if(this.reportToDate && (this.reportFromDate > this.reportToDate)){\n              this.reportToDate = '';\n            }\n          // this.reportToDate = '';\n          break;\n        default:\n          break;\n      }\n    }\n  }\n   //for getting category master data\n   getCategoryMasterData() {\n    this.service.get_service(ApiserviceService.apisList.categoryMasterData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.categoryList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    })\n  }\n\n\n  checkConsent(row) {\n    \n    row.trackingConsentStatus = 'RETRYING';\n    this.saveTruck(row);\n     (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    }\n  }\n\n  onFileChange(event,shipmentID,truckNumber) {\n    localStorage.setItem(\"userMenu\", \"gateSecurity-inventory\")\n\n    this.file = event.target.files[0];\n    this.toastr.warning(\"Photo Uploaded\");\n    var reader = new FileReader();\n\n        reader.onload =this._handleReaderLoaded.bind(this);\n\n        reader.readAsBinaryString(this.file);\n  }\n  \n\n  _handleReaderLoaded(readerEvt) {\n    var binaryString = readerEvt.target.result;\n        this.base64textString.push('data:image/png;base64,' + btoa(readerEvt.target.result));\n           console.log(btoa(binaryString));\n   }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { customMaterialModule } from '../../angular-material';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\nimport { GatesecurityTruckInventoryShippingComponent } from './gatesecurity-truck-inventory-shipping.component';\n\nconst routes: Routes = [\n    { path: '', component: GatesecurityTruckInventoryShippingComponent },\n];\n\n@NgModule({\n    imports: [\n        [RouterModule.forChild(routes)],\n        CommonModule,\n        FormsModule,\n        customMaterialModule,\n        LoaderModule,\n        NgxDatatableModule,\n        CustomDatePipeModule\n    ],\n    declarations: [\n        GatesecurityTruckInventoryShippingComponent\n    ]\n})\n\nexport class gatesecurityTruckInventoryShippingModule { }\n"],"sourceRoot":""}