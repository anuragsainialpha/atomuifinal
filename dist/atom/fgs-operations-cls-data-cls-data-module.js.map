{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/fgs-operations/cls-data/cls-data.component.html","webpack:///./src/app/fgs-operations/cls-data/cls-data.component.scss","webpack:///./src/app/fgs-operations/cls-data/cls-data.component.ts","webpack:///./src/app/fgs-operations/cls-data/cls-data.module.ts"],"names":[],"mappings":"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","file":"fgs-operations-cls-data-cls-data-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    <b> Truck Status > Export Tracking</b>\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <!--  <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"Filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button> -->\\n    </span>\\n  </h6>\\n  <div class=\\\"manualplan-fields\\\">\\n    <div class=\\\"col-md-12 row\\\">\\n      <div class=\\\"col-md-12 padding-right-40\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Source\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n                  [(ngModel)]=\\\"sourceCode\\\" name=\\\"sourceCode\\\" (keyup)=\\\"getfilterSource($event)\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\" [disabled]=\\\"(isSoureDisable()) \\\">\\n                <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\"\\n                    (click)=\\\"setDestDescription(list.description)\\\"\\n                    (onSelectionChange)=\\\"setDestDescription(list.description)\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Shipment Id\\\" [(ngModel)]=\\\"shipmentId\\\" name=\\\"shipmentId\\\"\\n                  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"fromSipmentOnboardDatePicker\\\"\\n                  placeholder=\\\"From Shipped On-Board Date\\\" [(ngModel)]=\\\"fromShipmentOnboardDate\\\"\\n                  name=\\\"fromShipmentOnboardDate\\\" (dateChange)=\\\"addEvent('change', $event)\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"fromSipmentOnboardDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #fromSipmentOnboardDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"toSipmentOnboardDatePicker\\\" [min]=\\\"fromShipmentOnboardDate\\\"\\n                  placeholder=\\\"To Shipped On-Board Date\\\" [(ngModel)]=\\\"toShipmentOnboardDate\\\" name=\\\"toShipmentOnboardDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toSipmentOnboardDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toSipmentOnboardDatePicker [disabled]=\\\"!fromShipmentOnboardDate\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <!-- Insert Date Filter -->\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"fromInsertDatePicker\\\" placeholder=\\\"From Insert Date\\\"\\n                  [(ngModel)]=\\\"fromInsertDate\\\" name=\\\"fromInsertDate\\\"\\n                  (dateChange)=\\\"addEventInsertDate('change', $event)\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"fromInsertDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #fromInsertDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"toInsertDatePicker\\\" [min]=\\\"fromInsertDate\\\"\\n                  placeholder=\\\"To Insert Date\\\" [(ngModel)]=\\\"toInsertDate\\\" name=\\\"toInsertDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toInsertDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toInsertDatePicker [disabled]=\\\"!fromInsertDate\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <!-- Gate Out Date Filter -->\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"fromGateOutDatePicker\\\" placeholder=\\\"From Gate Out Date\\\"\\n                  [(ngModel)]=\\\"fromGateOutDate\\\" name=\\\"fromGateOutDate\\\" (dateChange)=\\\"addEventGateOut('change', $event)\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"fromGateOutDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #fromGateOutDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"toGateOutDatePicker\\\" [min]=\\\"fromGateOutDate\\\"\\n                  placeholder=\\\"To Gate Out Date\\\" [(ngModel)]=\\\"toGateOutDate\\\" name=\\\"toGateOutDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toGateOutDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toGateOutDatePicker [disabled]=\\\"!fromGateOutDate\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <!-- SAP DATE FILTER -->\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"fromSapInvDatePicker\\\" placeholder=\\\"From Sap Inv Date\\\"\\n                  [(ngModel)]=\\\"fromSapInvDate\\\" name=\\\"fromSapInvDate\\\" (dateChange)=\\\"addEventSapInvDate('change', $event)\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"fromSapInvDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #fromSapInvDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"toSapInvDatePicker\\\" [min]=\\\"fromSapInvDate\\\"\\n                  placeholder=\\\"To Sap Inv Date\\\" [(ngModel)]=\\\"toSapInvDate\\\" name=\\\"toSapInvDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toSapInvDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toSapInvDatePicker [disabled]=\\\"!fromSapInvDate\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"pull-right\\\">\\n        <div class=\\\"search-fileds\\\">\\n          <button class=\\\"theme-small-button\\\" (click)=\\\"clsSearch()\\\" matTooltip=\\\"Search\\\">\\n            <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <button class=\\\"theme-delete-button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear All\\\">\\n            <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <!--  This filter will visible other user insted of new due allignment -->\\n    <!-- <div class=\\\"row\\\" *ngIf=\\\"check_Role_DP_REP != roles.planner3\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"row\\\">\\n          <ng-container >\\n           <div class=\\\"col-md-1 pr-0\\\">\\n             <div class=\\\"form-group\\\">\\n               <mat-form-field>\\n                 <input matInput placeholder=\\\"Insert User\\\" [(ngModel)]=\\\"insertUser\\\" name=\\\"insertUser\\\">\\n               </mat-form-field>\\n             </div>\\n           </div>\\n         </ng-container>\\n        </div>\\n      </div>\\n    </div> -->\\n  </div>\\n  <div class=\\\"ngx-table-custom-scroll ngx-table-tr-custom-scroll\\\">\\n    <ngx-datatable class='material' #table [rows]='clsDataList' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\n      [scrollbarH]=\\\"true\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [externalPaging]=\\\"true\\\" [limit]=\\\"page.limit\\\"\\n      [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\" (page)=\\\"datatablePageData($event)\\\">\\n      <ngx-datatable-column name=\\\"Source Loc\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"shipmentId\\\"\\n        [frozenLeft]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.sourceLoc}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Dest Loc\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"destLoc\\\"\\n        [frozenLeft]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.destLoc}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Shipment Id\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"shipmentId\\\"\\n        [frozenLeft]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.shipmentId}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Loadslip Id\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"loadslipId\\\"\\n        [frozenLeft]=\\\"freezeLeftValue\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.loadslipId}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Gate Out Date\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"gateouDateStr\\\" [frozenLeft]=\\\"false\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.gateouDateStr ? (row.gateouDateStr | customDateFormat | date:'dd-MMM-yyyy,HH:mm' ) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Container Num\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"containerNum\\\" [frozenLeft]=\\\"false\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.containerNum}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"STO/SO Num\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"stosoNum\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.stosoNum}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Delivery\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"delivery\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.delivery}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <!-- <ngx-datatable-column name=\\\"User\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"category\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.insertUser}}\\n        </ng-template>\\n      </ngx-datatable-column> -->\\n      <ngx-datatable-column name=\\\"SAP Invoice\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"sapInvoice\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.sapInvoice}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"SAP Inv Date\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"sapInvoiceDateStr\\\" [frozenLeft]=\\\"false\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.sapInvoiceDateStr ? (row.sapInvoiceDateStr | customDateFormat | date:'dd-MMM-yyyy' ) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Custom Inv Num\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"customInvNumber\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.customInvNumber}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"PI No\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"piNo\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.piNo}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Customer Name\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"customerName\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.customerName}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Inco Term\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"incoterm\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.incoterm}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"POL\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"pol\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.pol}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"POD\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"pod\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.pod}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Billing Party\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"billingParty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.billingParty}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Shipping Line\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"shippingLine\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.shippingLine}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Cont Pick Date\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"contPickDateStr\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.contPickDateStr ? (row.contPickDateStr | customDateFormat | date:'dd-MMM-yyyy' ) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Stuffing Date\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n        prop=\\\"stuffingDateStr\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.stuffingDateStr ? (row.stuffingDateStr | customDateFormat | date:'dd-MMM-yyyy' ) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Booking Num\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"bookingNum\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.bookingNum}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n       <ngx-datatable-column name=\\\"Pre Inv No\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"preInvNo\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.preInvNo}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Post Inv No\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"postInvNo\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.postInvNo}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"CHA\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"cha\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.cha}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Planned Vessel\\\" [width]='120' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"plannedVessel\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.plannedVessel}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Vessel Depart Pol Date\\\" [width]='150' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"vesselDepartPolDateStr\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.vesselDepartPolDateStr ? (row.vesselDepartPolDateStr | customDateFormat | date:'dd-MMM-yyyy' ) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Shipping Bill\\\" [width]='120' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"shippinBill\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.shippinBill}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Shipping Bill Date\\\" [width]='150' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"Volume\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.shippingBillDateStr ? (row.shippingBillDateStr | customDateFormat | date:'dd-MMM-yyyy' ) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Gate In Date\\\" [width]='150' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"gateInDateStr\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.gateInDateStr ? (row.gateInDateStr | customDateFormat | date:'dd-MMM-yyyy' ) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Customs Exam Date\\\" [width]='150' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"volume\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.customsExamDateStr ? (row.customsExamDateStr | customDateFormat | date:'dd-MMM-yyyy' ) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Gate Out CFS Date\\\" [width]='150' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"gateoutDateCfsStr\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.gateoutDateCfsStr ? (row.gateoutDateCfsStr | customDateFormat | date:'dd-MMM-yyyy' ) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Gate In Port Date\\\" [width]='150' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"gateinDatePortStr\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.gateinDatePortStr ? (row.gateinDatePortStr | customDateFormat | date:'dd-MMM-yyyy' ) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Actual Vessel\\\" [width]='120' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"actualVessel\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.actualVessel}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Shipped On-Board Date\\\" [width]='150' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"shippedOnboardDateStr\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.shippedOnboardDateStr ? (row.shippedOnboardDateStr | customDateFormat | date:'dd-MMM-yyyy' ) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Export Remark\\\" [width]='120' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"eportRemark\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.eportRemark}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Is Sync OTM\\\" [width]='120' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"isSyncOtm\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.isSyncOtm}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"COFD\\\" [width]='120' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"cofd\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.cofd}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"ETA POD\\\" [width]='150' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"etaPodStr\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.etaPodStr ? (row.etaPodStr | customDateFormat | date:'dd-MMM-yyyy') : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Forwarder\\\" [width]='120' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"forwarder\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.forwarder}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"LEO Date\\\" [width]='150' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"shippedOnboardDateStr\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.leoDateStr ? (row.leoDateStr | customDateFormat | date:'dd-MMM-yyyy' ) : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"INV Amount\\\" [width]='120' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"invAmount\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.invAmount}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Payment Terms\\\" [width]='120' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"paymentTerms\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.paymentTerms}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Status\\\" [width]='120' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"status\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.status}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Insert Date\\\" [width]='150' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"insertDateStr\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.insertDateStr ? (row.insertDateStr | customDateFormat | date:'dd-MMM-yyyy,HH:mm') : ''}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <!-- Footer Template starts -->\\n      <ngx-datatable-footer>\\n        <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n          let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n          <div class=\\\"page-count\\\">\\n            <span *ngIf=\\\"selectedCount\\\">\\n              {{selectedCount.toLocaleString()}} Selected |\\n            </span>\\n            Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n            (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n            {{(rowCount)}} records.\\n          </div>\\n          <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n            [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\"\\n            [size]=\\\"pageSize\\\" [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n            (change)=\\\"table.onFooterPage($event)\\\">\\n          </datatable-pager>\\n        </ng-template>\\n      </ngx-datatable-footer>\\n      <!-- Footer Template Ends -->\\n    </ngx-datatable>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zncy1vcGVyYXRpb25zL2Nscy1kYXRhL2Nscy1kYXRhLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, DoCheck } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiserviceService } from 'src/app/services/api/apiservice.service';\nimport * as moment from 'moment';\nimport { NgForm } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MatDialog, MatDatepickerInputEvent } from '@angular/material';\nimport * as XLSX from 'xlsx';\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/public/date.adapters';\nimport { HelperServiceService } from 'src/app/services/helper-service/helper-service.service';\nimport { constants } from 'src/app/constants';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-cls-data',\n  templateUrl: './cls-data.component.html',\n  styleUrls: ['./cls-data.component.scss'],\n  providers: [\n    {\n      provide: DateAdapter, useClass: AppDateAdapter\n    },\n    {\n      provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\n    }\n  ],\n})\nexport class ClsDataComponent implements OnInit, DoCheck {\n\n  page = {\n    limit: 100,\n    count: 0,\n    offset: 0,\n    pageSize: 50\n  };\n  clsDataList = [];\n  isLoading: boolean = false;\n  currentDate = this.helperService.getTodayDate();\n  currentDateAsString = this.helperService.getTodayDateASString();\n  roles: { \"planner1\": string; \"plannner2\": string; \"planner3\": string; \"transporter\": string; \"fgsOperations1\": string; \"fgsOperations2\": string; \"fgsOperations4\": string; \"gateSecurity\": string; \"rdc_PLN\": string; \"rdc_GAT\": string; \"JIT_OPERATION\": string; \"JIT_GATE_SECURITY\": string; \"EXPORT_CHA\": string; \"ABU_PLN\": string; \"L1MGR\": string; \"L2MGR\": string; \"FPL\":string };\n\n  shipmentId = '';\n  sourceLoc = '';\n  fromInsertDate = '';\n  toInsertDate = '';\n  fromShipmentOnboardDate = '';\n  toShipmentOnboardDate = '';\n  fromSapInvDate = '';\n  toSapInvDate = '';\n  fromGateOutDate = '';\n  toGateOutDate = '';\n  freezeLeftValue: boolean = true;\n\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  sourceCode: string;\n  sourceList: any[];\n  constructor(public service: ApiserviceService,\n    private toastr: ToastrService,\n    private helperService: HelperServiceService) { }\n    ngDoCheck(){\n      let width = $(window).width();\n      if(width < 1024) {\n        this.freezeLeftValue = false;\n      }\n      else {\n        this.freezeLeftValue = true;\n      }\n    }\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"fgs-truck-status\");\n    this.roles = constants.roles;\n    if (this.isSoureDisable()) {\n      this.sourceCode = localStorage.getItem(\"sourceID\");\n    }\n    let data = {};\n    this.getClsData(data);\n  }\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    console.log(event.value)\n    console.log(\"------>To Date\", this.toShipmentOnboardDate);\n    let checkToDate: any = this.toShipmentOnboardDate;\n    console.log(\"Check--->1\", checkToDate);\n    if (this.toShipmentOnboardDate == this.currentDateAsString) {\n      // on page load we are defaluting the  to date with string. Comparing string with date is not possible\n      // If toDate is equal to currentDate then chagetingthe checkDate to new Date() otherwise defaulting with toDate\n      checkToDate = new Date();\n      console.log(\"Check--->2\", checkToDate);\n\n    }\n    /* Checking if selected from date greater than to date.\n    Clearing the toDate field when from date greater than to date */\n    if (event.target.value) {\n      if (this.toShipmentOnboardDate && (this.fromShipmentOnboardDate > checkToDate)) {\n        this.toShipmentOnboardDate = '';\n      }\n    }\n    // this.toDate = '';\n  }\n\n  addEventInsertDate(type: string, event: MatDatepickerInputEvent<Date>) {\n    console.log(event.value)\n    console.log(\"------>To Date\", this.toInsertDate);\n    let checkToDate: any = this.toInsertDate;\n    console.log(\"Check--->1\", checkToDate);\n    if (this.toInsertDate == this.currentDateAsString) {\n      // on page load we are defaluting the  to date with string. Comparing string with date is not possible\n      // If toDate is equal to currentDate then chagetingthe checkDate to new Date() otherwise defaulting with toDate\n      checkToDate = new Date();\n      console.log(\"Check--->2\", checkToDate);\n\n    }\n    /* Checking if selected from date greater than to date.\n    Clearing the toDate field when from date greater than to date */\n    if (event.target.value) {\n      if (this.toInsertDate && (this.fromInsertDate > checkToDate)) {\n        this.toInsertDate = '';\n      }\n    }\n    // this.toDate = '';\n  }\n\n  addEventSapInvDate(type: string, event: MatDatepickerInputEvent<Date>) {\n    console.log(event.value)\n    console.log(\"------>To Date\", this.toSapInvDate);\n    let checkToDate: any = this.toSapInvDate;\n    console.log(\"Check--->1\", checkToDate);\n    if (this.toSapInvDate == this.currentDateAsString) {\n      // on page load we are defaluting the  to date with string. Comparing string with date is not possible\n      // If toDate is equal to currentDate then chagetingthe checkDate to new Date() otherwise defaulting with toDate\n      checkToDate = new Date();\n      console.log(\"Check--->2\", checkToDate);\n\n    }\n    /* Checking if selected from date greater than to date.\n    Clearing the toDate field when from date greater than to date */\n    if (event.target.value) {\n      if (this.toSapInvDate && (this.fromSapInvDate > checkToDate)) {\n        this.toSapInvDate = '';\n      }\n    }\n    // this.toDate = '';\n  }\n\n  addEventGateOut(type: string, event: MatDatepickerInputEvent<Date>) {\n    console.log(event.value)\n    console.log(\"------>To Date\", this.toGateOutDate);\n    let checkToDate: any = this.toGateOutDate;\n    console.log(\"Check--->1\", checkToDate);\n    if (this.toGateOutDate == this.currentDateAsString) {\n      // on page load we are defaluting the  to date with string. Comparing string with date is not possible\n      // If toDate is equal to currentDate then chagetingthe checkDate to new Date() otherwise defaulting with toDate\n      checkToDate = new Date();\n      console.log(\"Check--->2\", checkToDate);\n\n    }\n    /* Checking if selected from date greater than to date.\n    Clearing the toDate field when from date greater than to date */\n    if (event.target.value) {\n      if (this.toGateOutDate && (this.fromGateOutDate > checkToDate)) {\n        this.toGateOutDate = '';\n      }\n    }\n    // this.toDate = '';\n  }\n\n  // Filter source location\n  getfilterSource(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.sourceList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        console.log(\"respio\", response)\n        this.sourceList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  isSoureDisable() {\n    // source Not disable for DP_REP, L1_MGR, L2_MGR role & External warehouses, if roles not belongs to DP_REP & External wareHouse we are returning boolean value which makes  disable \n    if ((this.service.checkRole() !== this.roles.planner3 && this.service.checkRole() !== this.roles.L1MGR && this.service.checkRole() !== this.roles.L2MGR) && this.service.checkRole() !== this.roles.FPL) {\n      return true\n    } else {\n      return false\n    }\n  }\n  onFooterPage(pageInfo) {\n    console.log(pageInfo);\n\n  }\n\n  datatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    let offset = pageInfo.offset;\n    let bodyData = {\n      index: offset,\n      shipmentId: this.shipmentId,\n      sourceLoc: this.sourceCode,\n      fromInsertDate: this.fromInsertDate ? moment(new Date(this.fromInsertDate)).format(\"DD/MM/YYYY\") : null,\n      toInsertDate: this.toInsertDate ? moment(new Date(this.toInsertDate)).format(\"DD/MM/YYYY\") : null,\n      fromShipmentOnboardDate: this.fromShipmentOnboardDate ? moment(new Date(this.fromShipmentOnboardDate)).format(\"DD/MM/YYYY\") : null,\n      toShipmentOnboardDate: this.toShipmentOnboardDate ? moment(new Date(this.toShipmentOnboardDate)).format(\"DD/MM/YYYY\") : null,\n      fromGateOutDate: this.fromGateOutDate ? moment(new Date(this.fromGateOutDate)).format(\"DD/MM/YYYY\") : null,\n      toGateOutDate: this.toGateOutDate ? moment(new Date(this.toGateOutDate)).format(\"DD/MM/YYYY\") : null,\n      fromSapInvDate: this.fromSapInvDate ? moment(new Date(this.fromSapInvDate)).format(\"DD/MM/YYYY\") : null,\n      toSapInvDate: this.toSapInvDate ? moment(new Date(this.toSapInvDate)).format(\"DD/MM/YYYY\") : null,\n\n    }\n    this.getClsData(bodyData);\n  }\n\n  // clear the data what the user entered\n  clearAll() {\n    this.shipmentId = '';\n    this.sourceCode = '';\n    this.fromGateOutDate = '';\n    this.toGateOutDate = '';\n    this.fromInsertDate = '';\n    this.toInsertDate = '';\n    this.fromShipmentOnboardDate = '';\n    this.toShipmentOnboardDate = '';\n    this.fromSapInvDate = '';\n    this.toSapInvDate = ''\n      ;\n    // For DP_REP role user can change the source location but other user it can't changes\n    // That why we giving default selection\n    if (this.isSoureDisable()) {\n      this.sourceCode = localStorage.getItem(\"sourceID\");\n    }\n  }\n\n  // refresh page data\n  refreshData() {\n    this.table.offset = 0;\n    this.page.offset = 0;\n    this.clearAll();\n    let bodyData = {};\n    this.getClsData(bodyData);\n  }\n\n  clsSearch() {\n    this.table.offset = 0;\n    let bodyData = {\n      shipmentId: this.shipmentId,\n      sourceLoc: this.sourceCode,\n      fromInsertDate: this.fromInsertDate ? moment(new Date(this.fromInsertDate)).format(\"DD/MM/YYYY\") : null,\n      toInsertDate: this.toInsertDate ? moment(new Date(this.toInsertDate)).format(\"DD/MM/YYYY\") : null,\n      fromShipmentOnboardDate: this.fromShipmentOnboardDate ? moment(new Date(this.fromShipmentOnboardDate)).format(\"DD/MM/YYYY\") : null,\n      toShipmentOnboardDate: this.toShipmentOnboardDate ? moment(new Date(this.toShipmentOnboardDate)).format(\"DD/MM/YYYY\") : null,\n      fromGateOutDate: this.fromGateOutDate ? moment(new Date(this.fromGateOutDate)).format(\"DD/MM/YYYY\") : null,\n      toGateOutDate: this.toGateOutDate ? moment(new Date(this.toGateOutDate)).format(\"DD/MM/YYYY\") : null,\n      fromSapInvDate: this.fromSapInvDate ? moment(new Date(this.fromSapInvDate)).format(\"DD/MM/YYYY\") : null,\n      toSapInvDate: this.toSapInvDate ? moment(new Date(this.toSapInvDate)).format(\"DD/MM/YYYY\") : null,\n\n    }\n    let insertdate = false;\n    let gateOutDate = false;\n    let sipmentDate = false;\n    let sapInvDate = false;\n\n    if (this.fromShipmentOnboardDate != '' && this.fromShipmentOnboardDate != null) {\n      if (this.toShipmentOnboardDate != '' && this.toShipmentOnboardDate != null) {\n        sipmentDate = true;\n      } else {\n        sipmentDate = false;\n        this.toastr.error(\"Please select To Shipment On-Board Date\", \"!Error\")\n      }\n    } else {\n      sipmentDate = true;\n    }\n    if (this.fromGateOutDate != '' && this.fromGateOutDate != null) {\n      if (this.toGateOutDate != '' && this.toGateOutDate != null) {\n        gateOutDate = true;\n      } else {\n        gateOutDate = false;\n        this.toastr.error(\"Please select To Gate Out Date\", \"!Error\")\n      }\n    } else {\n      gateOutDate = true;\n    }\n    if (this.fromInsertDate != '' && this.fromInsertDate != null) {\n      if (this.toInsertDate != '' && this.toInsertDate != null) {\n        insertdate = true;\n      } else {\n        insertdate = false;\n        this.toastr.error(\"Please select To Insert Date\", \"!Error\")\n      }\n    } else {\n      insertdate = true;\n    }\n    if (this.fromSapInvDate != '' && this.fromSapInvDate != null) {\n      if (this.toSapInvDate != '' && this.toSapInvDate != null) {\n        sapInvDate = true;\n      } else {\n        sapInvDate = false;\n        this.toastr.error(\"Please select To Shipment On-Board Date\", \"!Error\")\n      }\n    } else {\n      sapInvDate = true;\n    }\n\n    if (insertdate && gateOutDate && sipmentDate && sapInvDate) {\n      this.getClsData(bodyData);\n    }\n  }\n  getClsData(data) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.getClsData, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.clsDataList = response['data'].content;\n        this.page.count = response['data'].totalElements;\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Something went wrong...', 'Error!');\n        this.isLoading = false;\n      }\n\n    }, err => {\n      this.toastr.error(err ? err : 'Something went wrong...', 'Error!');\n      this.isLoading = false;\n    })\n  }\n\n  //export excel data\n  export(): void {\n    if (this.clsDataList.length > 0) {\n      this.isLoading = true;\n\n      let data = {\n        shipmentId: this.shipmentId,\n        sourceLoc: this.sourceCode,\n        fromInsertDate: this.fromInsertDate ? moment(new Date(this.fromInsertDate)).format(\"DD/MM/YYYY\") : null,\n        toInsertDate: this.toInsertDate ? moment(new Date(this.toInsertDate)).format(\"DD/MM/YYYY\") : null,\n        fromShipmentOnboardDate: this.fromShipmentOnboardDate ? moment(new Date(this.fromShipmentOnboardDate)).format(\"DD/MM/YYYY\") : null,\n        toShipmentOnboardDate: this.toShipmentOnboardDate ? moment(new Date(this.toShipmentOnboardDate)).format(\"DD/MM/YYYY\") : null,\n        fromGateOutDate: this.fromGateOutDate ? moment(new Date(this.fromGateOutDate)).format(\"DD/MM/YYYY\") : null,\n        toGateOutDate: this.toGateOutDate ? moment(new Date(this.toGateOutDate)).format(\"DD/MM/YYYY\") : null,\n        fromSapInvDate: this.fromSapInvDate ? moment(new Date(this.fromSapInvDate)).format(\"DD/MM/YYYY\") : null,\n        toSapInvDate: this.toSapInvDate ? moment(new Date(this.toSapInvDate)).format(\"DD/MM/YYYY\") : null,\n\n        pageLength: this.page.count,\n      }\n      // this.service.post_service_DownLoadExcel(ApiserviceService.apisList.planinfo, data).subscribe(response => {\n      this.service.post_service(ApiserviceService.apisList.getClsData, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          // Uncomment when export excel is generated in backend\n          // var blob = new Blob([response.body], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n          //   var filename = 'viewDispatchPlans.xlsx';\n          //   const link = window.URL.createObjectURL(blob);\n          //   const a = document.createElement('a');\n          //   document.body.appendChild(a);\n          //   a.setAttribute('style', 'display: none');\n          //   a.href = link;\n          //   a.download = filename\n          //   a.click();\n          //   window.URL.revokeObjectURL(link);\n          //   a.remove();\n\n          let newViewPlanData = response['data'].content;\n          let excelRawData = newViewPlanData;\n          let newExcelData = []; let data;\n          for (let i = 0; i < excelRawData.length; i++) {\n\n            // For RDC: The Avail TTE and Truck count should be based on Plan Qty and not Available Qty\n            // For FGS : The Avail TTE and Truck count should be based on Available Qty\n            data = {\n              \"Source Loc\": excelRawData[i].sourceLoc,\n              \"Dest Loc\": excelRawData[i].destLoc,\n              \"Shipment Id\": excelRawData[i].shipmentId,\n              \"Loadslip Id\": excelRawData[i].loadslipId,\n              \"Gate Out Date\": excelRawData[i].gateouDateStr ? this.service.customDateTimeFormat(excelRawData[i].gateouDateStr) : '',\n              \"Container Num\": excelRawData[i].containerNum,\n              \"STO/SO Num\": excelRawData[i].stosoNum,\n              \"Delivery\": excelRawData[i].delivery,\n              \"SAP Invoice\": excelRawData[i].sapInvoice,\n              \"SAP Inv Date\": excelRawData[i].sapInvoiceDateStr ? this.service.customDateFormat(excelRawData[i].sapInvoiceDateStr) : '',\n              \"Custom Inv Num\": excelRawData[i].customInvNumber,\n              \"PI No\": excelRawData[i].piNo,\n              \"Customer Name\": excelRawData[i].customerName,\n              \"Inco Term\": excelRawData[i].incoterm,\n              \"POL\": excelRawData[i].pol,\n              \"POD\": excelRawData[i].pod,\n              \"Billing Party\": excelRawData[i].billingParty,\n              \"Shipping Line\": excelRawData[i].shippingLine,\n              \"Cont Pick Date\": excelRawData[i].contPickDateStr ? this.service.customDateFormat(excelRawData[i].contPickDateStr) : '',\n              \"Stuffing Date\": excelRawData[i].stuffingDateStr ? this.service.customDateFormat(excelRawData[i].stuffingDateStr) : '',\n              \"Booking Num\": excelRawData[i].bookingNum,\n              \"Pre Inv No\": excelRawData[i].preInvNo,\n              \"Post Inv No\": excelRawData[i].postInvNo,\n              \"CHA\": excelRawData[i].cha,\n              \"Planned Vessel\": excelRawData[i].plannedVessel,\n              \"Vessel Depart Pol Date\": excelRawData[i].vesselDepartPolDateStr ? this.service.customDateFormat(excelRawData[i].vesselDepartPolDateStr) : '',\n              \"Shipping Bill\": excelRawData[i].shippinBill,\n              \"Shipping Bill Date\": excelRawData[i].shippingBillDateStr ? this.service.customDateFormat(excelRawData[i].shippingBillDateStr) : '',\n              \"Gate In Date\": excelRawData[i].gateInDateStr ? this.service.customDateFormat(excelRawData[i].gateInDateStr) : '',\n              \"Customs Exam Date\": excelRawData[i].customsExamDateStr ? this.service.customDateFormat(excelRawData[i].customsExamDateStr) : '',\n              \"Gate Out CFS Date\": excelRawData[i].gateoutDateCfsStr ? this.service.customDateFormat(excelRawData[i].gateoutDateCfsStr) : '',\n              \"Gate In Port Date\": excelRawData[i].gateinDatePortStr ? this.service.customDateFormat(excelRawData[i].gateinDatePortStr) : '',\n              \"Actual Vessel\": excelRawData[i].actualVessel,\n              \"Shipped On-Board Date\": excelRawData[i].shippedOnboardDateStr ? this.service.customDateFormat(excelRawData[i].shippedOnboardDateStr) : '',\n              \"Export Remark\": excelRawData[i].eportRemark,\n              \"Is Sync OTM\": excelRawData[i].isSyncOtm,\n              \"COFD\": excelRawData[i].cofd,\n              \"ETA POD\": excelRawData[i].etaPodStr ? this.service.customDateFormat(excelRawData[i].etaPodStr) : '',\n              \"Forwarder\": excelRawData[i].forwarder,\n              \"LEO Date\": excelRawData[i].leoDateStr ? this.service.customDateFormat(excelRawData[i].leoDateStr) : '',\n              \"INV Amount\": excelRawData[i].invAmount,\n              \"Payment Terms\": excelRawData[i].paymentTerms,\n              \"Status\": excelRawData[i].status,\n              \"Insert Date\": excelRawData[i].insertDateStr ? this.service.customDateTimeFormat(excelRawData[i].insertDateStr) : '',\n              \n            }\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'ClsData.xlsx');\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.toastr.error(\"No records found to export\", \"Error!\");\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\nimport { ClsDataComponent } from './cls-data.component';\nimport { LoaderModule } from 'src/app/public/loader/loader-shared.module';\nimport { customMaterialModule } from 'src/app/angular-material';\n\nconst routes: Routes = [\n  { path: '', component: ClsDataComponent},\n];\n\n// const routes: Routes = [\n//   { path: '', component: CreateFreightComponent,canActivate:[PlannerAuthGuardService]},\n// ];\n\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    LoaderModule,\n    customMaterialModule,\n    FormsModule,\n    NgxDatatableModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    ClsDataComponent\n  ],\n  entryComponents:[\n    ClsDataComponent\n   ],\n  \n})\nexport class ClsDataModule { }"],"sourceRoot":""}