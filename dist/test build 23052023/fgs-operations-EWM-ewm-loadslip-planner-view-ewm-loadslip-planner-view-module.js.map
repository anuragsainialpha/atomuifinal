{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/fgs-operations/EWM/ewm-loadslip-planner-view/ewm-loadslip-planner-view.component.html","webpack:///./src/app/fgs-operations/EWM/ewm-loadslip-planner-view/ewm-loadslip-planner-view.component.scss","webpack:///./src/app/fgs-operations/EWM/ewm-loadslip-planner-view/ewm-loadslip-planner-view.component.ts","webpack:///./src/app/fgs-operations/EWM/ewm-loadslip-planner-view/ewm-loadslip-planner-view.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAoD;AACpD;;;;;;;;EAQE;AAEF;IAAA;IAyBA,CAAC;IAxBC,oCAAS,GAAT,UACE,KAAU,EACV,qBAA6B,EAC7B,SAAiB;QAEjB,IAAI,KAAK,EAAE;YACT,qBAAqB,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACzC,SAAS;gBACP,qBAAqB,CAAC,CAAC,CAAC;oBACxB,GAAG;oBACH,qBAAqB,CAAC,CAAC,CAAC;oBACxB,GAAG;oBACH,qBAAqB,CAAC,CAAC,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SACxB;QAED,IAAI,SAAS,EAAE;YACb,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC;YAC3C,OAAO,MAAM,CAAC;SACf;QACD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAEzB,CAAC;IAxBU,gBAAgB;QAD5B,0DAAI,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;OAClC,gBAAgB,CAyB5B;IAAD,uBAAC;CAAA;AAzB4B;;;;;;;;;;;;;;;;;;;;;;;ACXW;AACc;AAetD;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAZhC,8DAAQ,CAAC;YACR,OAAO,EAAE,EAER;YACD,YAAY,EAAE;gBACZ,kEAAgB;aACjB;YACD,OAAO,EAAC;gBACN,kEAAgB;aACjB;SACF,CAAC;OAEW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;AChBjC,g9BAAg9B,oBAAoB,kPAAkP,0CAA0C,0RAA0R,sCAAsC,0BAA0B,sGAAsG,gPAAgP,qBAAqB,mFAAmF,mCAAmC,0BAA0B,0FAA0F,sPAAsP,+BAA+B,wFAAwF,wCAAwC,0BAA0B,8GAA8G,0WAA0W,oBAAoB,sQAAsQ,4CAA4C,4BAA4B,8HAA8H,iPAAiP,qBAAqB,0OAA0O,+BAA+B,yRAAyR,wBAAwB,4bAA4b,2DAA2D,4SAA4S,gEAAgE,yQAAyQ,0DAA0D,wRAAwR,yBAAyB,yJAAyJ,yBAAyB,yJAAyJ,yBAAyB,2JAA2J,2BAA2B,wIAAwI,uBAAuB,6HAA6H,qCAAqC,8HAA8H,+BAA+B,6fAA6f,oBAAoB,sLAAsL,0BAA0B,mNAAmN,sBAAsB,+SAA+S,KAAK,aAAa,2EAA2E,wXAAwX,2DAA2D,4IAA4I,0EAA0E,iTAAiT,kEAAkE,4RAA4R,0FAA0F,+RAA+R,wFAAwF,sRAAsR,0EAA0E,wQAAwQ,yEAAyE,4TAA4T,qBAAqB,mKAAmK,gDAAgD,gNAAgN,mEAAmE,6LAA6L,iFAAiF,mNAAmN,2CAA2C,sBAAsB,0HAA0H,6NAA6N,wCAAwC,sBAAsB,8GAA8G,2KAA2K,kCAAkC,yDAAyD,iCAAiC,wBAAwB,gFAAgF,yWAAyW,OAAO,gcAAgc,uBAAuB,mSAAmS,gCAAgC,sQAAsQ,6BAA6B,sQAAsQ,0BAA0B,yQAAyQ,4BAA4B,0QAA0Q,sBAAsB,+TAA+T,mBAAmB,iRAAiR,2BAA2B,uQAAuQ,gBAAgB,uQAAuQ,yBAAyB,wXAAwX,eAAe,iRAAiR,kBAAkB,uQAAuQ,yBAAyB,wXAAwX,eAAe,iRAAiR,kBAAkB,yQAAyQ,0BAA0B,0QAA0Q,0BAA0B,2QAA2Q,mBAAmB,gG;;;;;;;;;;;ACAhqlB,oCAAoC,qBAAqB,EAAE,kCAAkC,yBAAyB,EAAE,0DAA0D,uCAAuC,EAAE,+EAA+E,2BAA2B,EAAE,qGAAqG,8CAA8C,yBAAyB,EAAE,gCAAgC,mBAAmB,gCAAgC,yBAAyB,EAAE,oCAAoC,wBAAwB,EAAE,qCAAqC,mBAAmB,gCAAgC,yBAAyB,EAAE,qDAAqD,iBAAiB,yBAAyB,EAAE,iCAAiC,mBAAmB,yBAAyB,yBAAyB,sBAAsB,EAAE,wCAAwC,yBAAyB,EAAE,oDAAoD,+BAA+B,oBAAoB,qBAAqB,EAAE,gCAAgC,wBAAwB,EAAE,8CAA8C,qBAAqB,kCAAkC,EAAE,wDAAwD,4BAA4B,6BAA6B,EAAE,qEAAqE,0CAA0C,EAAE,0CAA0C,mBAAmB,wBAAwB,gCAAgC,qBAAqB,uBAAuB,EAAE,uDAAuD,sBAAsB,uBAAuB,2BAA2B,EAAE,kBAAkB,yCAAyC,qBAAqB,oHAAoH,mBAAmB,iBAAiB,uBAAuB,qBAAqB,EAAE,uBAAuB,qBAAqB,qBAAqB,qBAAqB,EAAE,0BAA0B,qBAAqB,uBAAuB,qBAAqB,EAAE,+BAA+B,qBAAqB,yBAAyB,EAAE,kBAAkB,oBAAoB,EAAE,6BAA6B,qBAAqB,EAAE,sBAAsB,uBAAuB,EAAE,+CAA+C,uwN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA//E;AACO;AACd;AACG;AAEwB;AAC5B;AACkC;AAM5E;IAiFE,yCACS,OAA0B,EACzB,MAAc,EACd,cAA8B,EAC9B,MAAqB,EACrB,MAAiB,EACjB,QAAkB;QAN5B,iBAyBC;QAxBQ,YAAO,GAAP,OAAO,CAAmB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAW;QACjB,aAAQ,GAAR,QAAQ,CAAU;QAnF5B,cAAS,GAAY,KAAK,CAAC;QAQ3B,SAAI,GAAG;YACL,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,WAAW;YACpB,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,iBAAY,GAAe;YACzB,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;YACxB,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;YACxB,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;YACxB,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;YACxB,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;SAC3B,CAAC;QAEF,iBAAY,GAAG,EAAE,CAAC;QAClB,WAAM,GAAG,EAAE,CAAC;QACZ,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,EAAE,CAAC;QACf,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,YAAO,GAAG,EAAE,CAAC;QACb,0BAAqB,GAAY,KAAK,CAAC;QACvC,eAAU,GAAG,EAAE,CAAC;QAKhB,0BAAqB,GAAY,KAAK,CAAC;QAiCvC,qBAAgB,GAAW,CAAC,CAAC;QAK7B,uBAAkB,GAAC,EAAE;QAWnB,UAAU,CAAC,cAAQ,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChD,sDAAsD;QACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACpE,kEAAkE;QAClE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,2DAAS,CAAC,KAAK,CAAC;QAG7B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,qDAAqD;YACtD,qBAAqB;YACpB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC;SAGrE;IACH,CAAC;IAED,kDAAQ,GAAR;QAEE,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACzG,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjD;aAAM;YACL,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;SAC/C;IACH,CAAC;IACD,mEAAyB,GAAzB,UAA0B,UAAU;QAApC,iBAsEC;QArEC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,yFAAiB,CAAC,QAAQ,CAAC,sBAAsB,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC/G,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpC,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC;gBACtC,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC5C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC5C,KAAI,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;gBAC9B,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC;gBAC9C,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,CAAC;gBACtD,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;gBAClD,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,CAAC;gBACtD,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;gBAClD,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC,aAAa,CAAC;gBAChD,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;gBAC9C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC5C,KAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,kBAAkB;gBACzD,KAAI,CAAC,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC;gBAC5B,KAAI,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC1C,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,WAAW,CAAC;gBACrD,+CAA+C;gBAC/C,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;gBAC1C,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;gBAC1C,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;gBAC1C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;gBAC5C,KAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC;gBACtC,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,QAAQ,CAAC;gBAC9C,KAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;gBACpC,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,oBAAoB,CAAC;gBAC9D,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,cAAc,CAAC;gBAC/C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,QAAQ,CAAC;gBACzC,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC,MAAM,CAAC;gBACzC,wBAAwB;gBACxB,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,eAAe,CAAC;gBACrD,KAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,kBAAkB,CAAC;gBAC3D,KAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,kBAAkB,CAAC;gBACxD,KAAI,CAAC,kBAAkB,GAAC,YAAY,CAAC,sBAAsB,CAAC;gBAC5D,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,mBAAmB,CAAC;gBACvD,oBAAoB;gBACpB,+CAA+C;gBAC/C,iDAAiD;gBACjD,kDAAkD;gBAClD,KAAI,CAAC,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;gBAClD,KAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC,QAAQ,CAAC;gBAC/C,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,WAAW,CAAC;gBACrD,KAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,WAAW,CAAC;gBACrD,KAAI,CAAC,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC;gBACrC,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,QAAQ,CAAC;gBACzC,+BAA+B;gBAC/B,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,QAAQ,CAAC;gBACzC,KAAI,CAAC,eAAe,GAAG,YAAY,CAAC,eAAe,CAAC;gBACnD,sBAAsB;gBACvB,KAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;gBACpC,KAAI,CAAC,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC;gBACpC,0CAA0C;gBAC1C,KAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,uCAAuC;gBACvC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;gBACpC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,CAAC;aACvF;QACH,CAAC,EAAE,UAAC,GAAG;YACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,oDAAU,GAAV;QAAA,iBAQC;QAPC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,yFAAiB,CAAC,QAAQ,CAAC,UAAU,GAAG,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACnH,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE;gBAC5D,4BAA4B;gBAC5B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAW,GAAX;QACE,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YACnD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;aACI;YACH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IACH,CAAC;IAGD,wBAAwB;IACxB,6DAAmB,GAAnB;QAAA,iBAwBC;QAvBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,yFAAiB,CAAC,QAAQ,CAAC,gBAAgB,GAAG,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACzH,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC7B,IAAM,UAAU,GAAG,8BAA8B,GAAG,YAAY,CAAC;gBACjE,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAC1C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;gBACzC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;gBACvC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO,CAAC,KAAK,EAAE,CAAC;gBAChB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACnC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;aAC1C;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;aAClG;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IACD,0DAAgB,GAAhB,UAAiB,YAAY;QAA7B,iBA0DC;QAzDC,IAAI,YAAY,CAAC,qBAAqB,EAAE;YACtC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,YAAY,CAAC,qBAAqB,CAAC,OAAO,CAAC,cAAI;gBAC7C,IAAI,OAAO,GAAG;oBACZ,YAAY,EAAE,IAAI,CAAC,SAAS;oBAC5B,KAAK,EAAE,IAAI,CAAC,SAAS;oBACrB,YAAY,EAAE,IAAI,CAAC,UAAU;oBAC7B,kBAAkB,EAAE,IAAI,CAAC,QAAQ;oBACjC,SAAS,EAAE,IAAI,CAAC,MAAM;oBACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,QAAQ,EAAE,IAAI,CAAC,OAAO;oBACtB,KAAK,EAAE,IAAI,CAAC,GAAG;oBACf,SAAS,EAAE,IAAI,CAAC,YAAY;oBAC5B,eAAe,EAAE,IAAI,CAAC,YAAY;oBAClC,cAAc,EAAE,IAAI,CAAC,QAAQ;oBAC7B,aAAa,EAAE,IAAI,CAAC,WAAW;oBAC/B,KAAK,EAAE,IAAI,CAAC,SAAS;oBACrB,eAAe;oBACf,6BAA6B;oBAC7B,WAAW,EAAE,IAAI,CAAC,SAAS;oBAC3B,WAAW,EAAE,IAAI,CAAC,OAAO;oBACzB,eAAe,EAAE,IAAI,CAAC,WAAW;oBACjC,cAAc,EAAE,IAAI,CAAC,OAAO;oBAE5B,cAAc;oBACd,WAAW,EAAE,IAAI,CAAC,SAAS;oBAC3B,WAAW,EAAE,IAAI,CAAC,OAAO;oBACzB,eAAe,EAAE,IAAI,CAAC,WAAW;oBACjC,cAAc,EAAE,IAAI,CAAC,OAAO;oBAC5B,YAAY,EAAE,IAAI,CAAC,UAAU;oBAE7B,eAAe;oBACf,YAAY,EAAE,IAAI,CAAC,UAAU;oBAC7B,YAAY,EAAE,IAAI,CAAC,QAAQ;oBAC3B,gBAAgB,EAAE,IAAI,CAAC,YAAY;oBACnC,eAAe,EAAE,IAAI,CAAC,QAAQ;iBAC/B,CAAC;gBACF,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAChC,KAAI,CAAC,YAAY,GAAO,KAAI,CAAC,YAAY,QAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;YAC1C,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;YAC1C,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;YAC1C,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;YAC5C,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,OAAO,CAAC;YAC7C,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,UAAU,CAAC;YACnD,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,UAAU,CAAC;YAChD,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;YAClD,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC,QAAQ,CAAC;YAC/C,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,WAAW,CAAC;YACrD,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,WAAW,CAAC;SACtD;IACH,CAAC;IAED,gDAAgD;IAEhD,0DAAgB,GAAhB;QAAA,iBAuBC;QAtBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,yFAAiB,CAAC,QAAQ,CAAC,aAAa,GAAG,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACtH,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;gBACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAM,UAAU,GAAG,8BAA8B,GAAG,YAAY,CAAC;gBACjE,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAC1C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;gBACzC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;gBAClD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO,CAAC,KAAK,EAAE,CAAC;gBAChB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACnC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;aAC1C;iBAAM;gBACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC;aAClG;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,sDAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,qDAAW,GAAX;QACE,IAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAClJ,OAAO,IAAI,CAAC;SACb;aAAI;YACH,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,cAAc;IACd,gDAAM,GAAN;QAAA,iBAiCC;QAhCG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,yFAAiB,CAAC,QAAQ,CAAC,aAAa,GAAE,cAAc,GAAC,IAAI,CAAC,UAAU,GAAC,SAAS,GAAC,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAChJ,IAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,kBAAkB,EAAC;gBAC1C,iGAAiG;gBACjG,kCAAkC;gBACjC,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,EAAC,QAAQ,CAAC,CAAC;aAEjE;iBAAK,IAAI,QAAQ,EAAE;gBACnB,sDAAsD;gBACtD,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,mEAAmE,EAAE,CAAC,CAAC;gBAClH,yCAAyC;gBACzC,IAAI,QAAQ,GAAG,KAAI,CAAC,UAAU,GAAC,OAAO,CAAC;gBACvC,IAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC9C,IAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACtC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;gBACzC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;gBACd,CAAC,CAAC,QAAQ,GAAG,QAAQ;gBACrB,CAAC,CAAC,KAAK,EAAE,CAAC;gBACV,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACjC,CAAC,CAAC,MAAM,EAAE,CAAC;gBACb,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAM;gBACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;gBAClG,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC,EAAE,UAAC,GAAG;YACL,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;YAClE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;IAEN,CAAC;IAjXU,+BAA+B;QAL3C,+DAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;YACzC,kLAAyD;;SAE1D,CAAC;yCAmFkB,yFAAiB;YACjB,sDAAM;YACE,8DAAc;YACtB,wDAAa;YACb,2DAAS;YACP,wDAAQ;OAvFjB,+BAA+B,CAmX3C;IAAD,sCAAC;CAAA;AAnX2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbH;AACc;AACM;AACd;AACF;AACmB;AACO;AACiB;AACd;AAE1E,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,oGAA+B,EAAC;IACvD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,oGAA+B,EAAC;CACnE,CAAC;AAkBF;IAAA;IAA4C,CAAC;IAAhC,4BAA4B;QAhBxC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAC/B,4DAAY;gBACZ,0DAAW;gBACX,6EAAoB;gBACpB,uFAAY;gBACZ,0EAAkB;gBAClB,oFAAoB;aACrB;YACD,YAAY,EAAE;gBACZ,oGAA+B;aAEhC;SAEF,CAAC;OACW,4BAA4B,CAAI;IAAD,mCAAC;CAAA;AAAJ","file":"fgs-operations-EWM-ewm-loadslip-planner-view-ewm-loadslip-planner-view-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    Loadslip > <span>View Load Slip</span>\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" *ngIf=\\\"(confirmedDate != null || isDPREPRole())\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export Download\\\">\\n            <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"locationBack()\\\" matTooltip=\\\"Back\\\">\\n        <i class=\\\"fa fa-reply\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"loadslip-fields\\\">\\n    <div class=\\\"row margin-bottom-5\\\">\\n      <div class=\\\"col-md-7\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2\\\">\\n            <div class='inputbordered'>\\n              <div>Source</div>\\n              <div>\\n                <b>{{userSource || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pd-0 \\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Destination</div>\\n              <div>\\n                <b>{{destination?destination:'--' | uppercase}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 pr-0 \\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>\\n                Truck\\n              </div>\\n              <div [title]=\\\"truckType\\\" [ngClass]=\\\"{'cursor-pointer':truckType?.length>18}\\\">\\n                <b>{{truckType ? (((truckType?.length>18)? (truckType | slice:0:18)+'..':(truckType)) | uppercase) : '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Truck Type</div>\\n              <!-- <div>\\n                <b>{{truckT?truckT:'--' }}</b>\\n              </div> -->\\n              <div [title]=\\\"truckT\\\" [ngClass]=\\\"{'cursor-pointer':truckT?.length>20}\\\">\\n                <b>{{truckT ? (((truckT?.length>18)? (truckT | slice:0:18)+'..':(truckT)) | uppercase) : '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pd-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Transporter</div>\\n              <!-- <div>\\n                <b>{{transporter?transporter:'--' }}</b>\\n              </div> -->\\n              <div [title]=\\\"transporter\\\" [ngClass]=\\\"{'cursor-pointer':transporter?.length>11}\\\">\\n                <b>{{transporter ? (((transporter?.length>11)? (transporter | slice:0:11)+'..':(transporter)) | uppercase) : '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-5\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3 pr-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>\\n                Ship To\\n              </div>\\n              <div>\\n                <b>{{ShipTo?ShipTo:'--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Actual Truck Type</div>\\n                <div [title]=\\\"actualTruckType\\\" [ngClass]=\\\"{'cursor-pointer':actualTruckType?.length>11}\\\">\\n                  <b>{{actualTruckType ? (((actualTruckType?.length>11)? (actualTruckType | slice:0:11)+'..':(actualTruckType)) | uppercase) : '--'}}</b>\\n                </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 pd-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Variant 1</div>\\n              <div>\\n                <b>{{variant_ONE || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Frt Avail</div>\\n              <div>\\n                <b>{{ freightAvailableflag || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row margin-bottom-5\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <div class='bordered'>\\n          <div>Shipment No</div>\\n          <div>\\n            <b>{{shipmentNumber || '--'}}</b>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3 pd-0\\\">\\n        <div class=\\\"bordered-box\\\">\\n          <div class=\\\"row text-center\\\">\\n              <div class=\\\"col-md-4 text-center bordered-box-left-div\\\">\\n                  <div>\\n                    TTE Util\\n                  </div>\\n                  <div [ngClass]=\\\"(totalTTESeletecd > 100)?'text-danger':'color-green'\\\">\\n                    <b>{{totalTTESeletecd?(totalTTESeletecd | number : '1.2-2'):0 }}%</b>\\n                  </div>\\n                </div>\\n              <div class=\\\"col-md-4  bordered-box-left-div\\\">\\n              <div>\\n                Wt Util\\n              </div>\\n              <div [ngClass]=\\\"(totalMaterialWeight > 100)?'text-danger':'color-green'\\\">\\n                <b>{{totalMaterialWeight?(totalMaterialWeight | number : '1.2-2'):0}}%</b>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <div>\\n                Vol Util\\n              </div>\\n              <div [ngClass]=\\\"(totalTruckVolume > 100)?'text-danger':'color-green'\\\">\\n                <b>{{totalTruckVolume?(totalTruckVolume | number : '1.2-2'):0}}%</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-5\\\">\\n        <div class=\\\"row bg-theme\\\">\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Tyres</div>\\n            <div>\\n              {{totalTyres?totalTyres:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Tubes</div>\\n            <div>\\n              {{totalTubes?totalTubes:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Flaps</div>\\n            <div>\\n              {{totalFlaps?totalFlaps:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div> Valves</div>\\n            <div>\\n              {{totalValves?totalValves:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Pctr</div>\\n            <div>{{totalPctr?totalPctr:0}} </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Others</div>\\n            <div>{{totalOthersCount?totalOthersCount:0}} </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Tot Qty</div>\\n            <div>{{totalQuantity?totalQuantity:0}} </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns MD-MP\\\">\\n        <button mat-raised-button color=\\\"primary\\\">LS on Same Truck(MD)</button>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns\\\">\\n        <button mat-raised-button color=\\\"primary\\\">Share Truck(MP)</button>\\n      </div>\\n    </div>\\n    <div class=\\\"row margin-bottom-5\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <div class='bordered'>\\n          <div>Load Slip No </div>\\n          <div><b>{{loadslipID || '--'}}</b></div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1  pd-0\\\">\\n        <div class=\\\"bordered\\\">\\n          <div>LS Category</div>\\n          <div>\\n            <b>{{loadslipCategory || '--'}}</b>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1\\\">\\n        <div class=\\\"bordered\\\">\\n          <div>\\n            Drop Seq\\n          </div>\\n          <div>\\n            <b>{{dropSeq?dropSeq:'--'}}</b>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-1 flow-btns\\\">\\n        <button *ngIf=\\\"(bayArrivedDate == null)\\\" mat-raised-button class=\\\"mat-default\\\">Arrived Bay</button>\\n        <button *ngIf=\\\"(bayArrivedDate != null)\\\" class=\\\"greenButton\\\">Arrived Bay <b>: {{bay}}</b> <span>{{bayArrivedDate\\n            | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns\\\">\\n        <button mat-raised-button color=\\\"default\\\" class=\\\"mat-default\\\"\\n          *ngIf=\\\"(lsPrintDate == null) && (confirmedDate == null)\\\">Print\\n          LS</button>\\n        <button class=\\\"greenButton\\\" *ngIf=\\\"(lsPrintDate != null) && (confirmedDate == null)\\\">Print LS<span>\\n            ({{lsPrintDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}})</span></button>\\n        <button class=\\\"greenButton\\\" *ngIf=\\\"(confirmedDate != null)\\\" (click)=\\\"downloadLoadslip()\\\">Print Pdf<span> {{(lsPrintDate) | customDateFormat\\n            | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns\\\">\\n        <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(sendForBarcodeDate == null)\\\">Send for Barcode</button>\\n        <button class=\\\"greenButton\\\" *ngIf=\\\"(sendForBarcodeDate != null)\\\">Send for Barcode\\n          <span>{{sendForBarcodeDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns\\\">\\n        <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(loadingStartDate == null)\\\">Loading Start</button>\\n        <button *ngIf=\\\"(loadingStartDate != null)\\\" class=\\\"greenButton\\\">Loading Start <span>{{loadingStartDate |\\n            customDateFormat |\\n            date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns\\\">\\n        <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(loadingEndDate == null)\\\">Loading\\n          End</button>\\n        <button *ngIf=\\\"(loadingEndDate != null)\\\" class=\\\"greenButton\\\">Loading End <span>{{loadingEndDate |\\n            customDateFormat |\\n            date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns\\\">\\n        <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(confirmedDate == null)\\\">Confirm/Send To SAP</button>\\n        <button *ngIf=\\\"(confirmedDate != null)\\\" class=\\\"greenButton\\\">Confirm <span>{{confirmedDate | customDateFormat |\\n            date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns\\\">\\n        <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(releasedDate == null)\\\">Release</button>\\n        <button *ngIf=\\\"(releasedDate != null)\\\" class=\\\"greenButton\\\">Release <span>{{releasedDate | customDateFormat |\\n            date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns\\\">\\n        <button mat-raised-button color=\\\"primary\\\">SO/STO Delete</button>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <div class=\\\"bordered\\\">\\n          <div>STO/SO</div>\\n          <div><b>{{STOSONumber || '--'}}</b></div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pd-0\\\">\\n        <div class=\\\"bordered\\\">\\n          <div>TTE Qty</div>\\n          <div><b>{{totalTTEQty?(totalTTEQty | number : '1.2-2'):0}}</b></div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pr-0\\\">\\n          <div class=\\\"bordered\\\">\\n          <div>\\n              Wt (Kg)\\n          </div>\\n          <div >\\n            <b>{{itemLevelTotalWeight?(itemLevelTotalWeight | number : '1.2-2'):0 }}</b>\\n          </div>\\n          </div>\\n        </div>\\n      <div class=\\\"col-md-1\\\">\\n        <div class=\\\"bordered\\\">\\n          <div>Category</div>\\n          <div>\\n            <b>{{(selectedCategories.length>0)?(selectedCategories.toString() | uppercase):'--' }}</b>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pl-0\\\">\\n        <div class=\\\"bordered\\\">\\n          <div>Indt Cat</div>\\n          <div [title]=\\\"indentCategory\\\" [ngClass]=\\\"{'cursor-pointer':indentCategory?.length>15}\\\">\\n            <b>{{indentCategory ? (((indentCategory?.length>15)? (indentCategory | slice:0:15)+'..':(indentCategory)) | uppercase) : '--'}}</b>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 pd-0 \\\">\\n        <div class=\\\"form-group bordered\\\">\\n          <div>Dest Desc</div>\\n          <div [title]=\\\"description\\\" [ngClass]=\\\"{'cursor-pointer':description?.length>11}\\\">\\n            <b>{{description ? (((description?.length>11)? (description | slice:0:11)+'..':(description)) | uppercase) : '--'}}</b>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2  \\\">\\n        <div class=\\\"bordered\\\">\\n          <div>City</div>\\n            <!-- <b>{{city ? (city | uppercase) : '--'}}</b> -->\\n            <div [title]=\\\"city\\\" [ngClass]=\\\"{'cursor-pointer':city?.length>24}\\\">\\n              <b>{{city ? ((city?.length>24) ? (city | slice:0:24)+'..':(city)| uppercase) : '--'}}</b>\\n            </div>\\n        </div>\\n      </div>\\n      <div class=\\\" col-md-1 flow-btns\\\" *ngIf=\\\"elrFlag\\\">\\n        <!-- (click)=\\\"generateLrNum()\\\" -->\\n        <button class=\\\"greenButton\\\" *ngIf=\\\"generateLr\\\">Generate LR</button>\\n        <button (click)=\\\"downloadLoadReceipt()\\\" class=\\\"greenButton\\\" *ngIf=\\\"printLr\\\">Print\\n          LR<span>{{lrNum}}</span></button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"mb-3\\\">\\n    <ngx-datatable class='material' [rows]='loadSlipData' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\n       [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" >\\n      <ngx-datatable-column name=\\\"Material Code\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"ITEM_ID\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_ID || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Material Description\\\" [width]=\\\"250\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"ITEM_DESCRIPTION\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_DESCRIPTION || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Cat\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"ITEM_CATEGORY\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_CATEGORY || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Batch\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"BATCH_CODE\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.BATCH_CODE || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Priority\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"MIN_PRIORITY\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.MIN_PRIORITY || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Available Qty\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"SUM_QTY\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.SUM_QTY || \\\"0\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Qty\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"qty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span>{{row.QTY || \\\"--\\\"}} </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Scannable\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"isScannable\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.isScannable || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Scan Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"scannedQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.scannedQty}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Tube Code\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"TUBE_CODE\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.TUBE_CODE || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Tube Batch\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"tubeBatch\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <span *ngIf=\\\"(confirmedDate != null)  && (confirmedDate != '')\\\">{{row.tubeBatch}} </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Tube Qty\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalTubeQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.totalTubeQty}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Flap Code\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"FLAP_CODE\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.FLAP_CODE || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Flap Batch\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"flapBatch\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\">\\n          <span *ngIf=\\\"(confirmedDate != null)  && (confirmedDate != '')\\\">{{row.flapBatch}} </span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Flap Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalFlapQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.totalFlapQty}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Valve Code\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"VALVE_CODE\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.VALVE_CODE || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Valve Batch\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"VALVE_DESC\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.VALVE_DESC || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Valve Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalValueQty\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.totalValueQty}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n    </ngx-datatable>\\n  </div>\\n</div>\"","module.exports = \".loadslip-fields {\\n  box-shadow: none; }\\n  .loadslip-fields .form-group {\\n    margin-bottom: 0em; }\\n  .loadslip-fields .form-group .mat-form-field-wrapper {\\n      padding-bottom: 0em !important; }\\n  .loadslip-fields .form-group .mat-form-field-wrapper .mat-form-field-flex {\\n        padding-top: 0em; }\\n  .loadslip-fields .form-group .mat-form-field-wrapper .mat-form-field-flex .mat-form-field-infix {\\n          border-top: 0em solid transparent;\\n          padding: 0em; }\\n  .loadslip-fields .bordered {\\n    padding: 5px;\\n    border: 1px solid #dee2e6;\\n    text-align: center; }\\n  .loadslip-fields .bordered div {\\n      font-size: 12px; }\\n  .loadslip-fields .inputbordered {\\n    padding: 1px;\\n    border: 1px solid #dee2e6;\\n    text-align: center; }\\n  .loadslip-fields .inputbordered .mat-form-field {\\n      top: 8px;\\n      padding: 0px 8px; }\\n  .loadslip-fields .flow-btns {\\n    padding: 0px;\\n    text-align: center;\\n    margin-bottom: 5px;\\n    margin-top: 2px; }\\n  .loadslip-fields .flow-btns button {\\n      padding: 0px 7px; }\\n  .loadslip-fields .flow-btns button.mat-default {\\n      background-color: #aaa;\\n      color: #555;\\n      height: 34px; }\\n  .loadslip-fields .col-md-3 {\\n    padding: 0px 15px; }\\n  .loadslip-fields .col-md-3 .bordered-box {\\n      padding: 5px;\\n      border: 1px solid #dee2e6; }\\n  .loadslip-fields .col-md-3 .bordered-box .col-md-4 {\\n        padding: 0px 10px;\\n        text-align: center; }\\n  .loadslip-fields .col-md-3 .bordered-box .bordered-box-left-div {\\n        border-right: 1px solid #dee2e6; }\\n  .loadslip-fields .col-md-5 .bg-theme {\\n    padding: 5px;\\n    margin-right: 0px;\\n    background-color: #775899;\\n    color: #ffffff;\\n    margin-left: 0px; }\\n  .loadslip-fields .col-md-5 .bg-theme .col-wid-20p {\\n      flex: 0 0 20%;\\n      max-width: 20%;\\n      text-align: center; }\\n  .greenButton {\\n  background-color: #417505 !important;\\n  padding: 0px 5px;\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\\n  color: #ffffff;\\n  border: none;\\n  border-radius: 4px;\\n  min-height: 35px; }\\n  .greenButton span {\\n    font-size: 8px;\\n    color: #ffffff;\\n    display: block; }\\n  .manulal-plan-header {\\n  padding: 5px 0px;\\n  margin-bottom: 0px;\\n  font-weight: 600; }\\n  .manulal-plan-header span {\\n    color: #3F2B53;\\n    margin-right: 15px; }\\n  .source-text {\\n  margin-top: 5px; }\\n  .ngx-datatable.material {\\n  margin-top: 10px; }\\n  .margin-bottom-5 {\\n  margin-bottom: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmdzLW9wZXJhdGlvbnMvRVdNL2V3bS1sb2Fkc2xpcC1wbGFubmVyLXZpZXcvQzpcXFVzZXJzXFxBYmhleVNvb2RcXE9uZURyaXZlIC0gQWNjZWxhbHBoYSBTb2Z0d2FyZSBQdnQuIEx0ZFxcRGVza3RvcFxcYXRvbSBhcG9sbG9cXEFwb2xsb1xcTmV3LSBBbnVyYWdcXGF0b20tdWkvc3JjXFxhcHBcXGZncy1vcGVyYXRpb25zXFxFV01cXGV3bS1sb2Fkc2xpcC1wbGFubmVyLXZpZXdcXGV3bS1sb2Fkc2xpcC1wbGFubmVyLXZpZXcuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Zncy1vcGVyYXRpb25zL0VXTS9ld20tbG9hZHNsaXAtcGxhbm5lci12aWV3L0M6XFxVc2Vyc1xcQWJoZXlTb29kXFxPbmVEcml2ZSAtIEFjY2VsYWxwaGEgU29mdHdhcmUgUHZ0LiBMdGRcXERlc2t0b3BcXGF0b20gYXBvbGxvXFxBcG9sbG9cXE5ldy0gQW51cmFnXFxhdG9tLXVpL3NyY1xcYXNzZXRzXFxzdHlsZXNcXF92YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGdCQUFnQixFQUFBO0VBRHBCO0lBR1Esa0JBQWtCLEVBQUE7RUFIMUI7TUFLWSw4QkFBOEIsRUFBQTtFQUwxQztRQU9nQixnQkFBZ0IsRUFBQTtFQVBoQztVQVNvQixpQ0FBZ0M7VUFDaEMsWUFBWSxFQUFBO0VBVmhDO0lBZ0JRLFlBQVc7SUFDWCx5QkNBb0I7SURFcEIsa0JBQWtCLEVBQUE7RUFuQjFCO01BcUJZLGVBQWUsRUFBQTtFQXJCM0I7SUF5QlEsWUFBVztJQUNYLHlCQ1RvQjtJRFdwQixrQkFBa0IsRUFBQTtFQTVCMUI7TUE4QlksUUFBUTtNQUNSLGdCQUFnQixFQUFBO0VBL0I1QjtJQW1DUSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixlQUFlLEVBQUE7RUF0Q3ZCO01Bd0NZLGdCQUFlLEVBQUE7RUF4QzNCO01BMkNZLHNCQ3pDSTtNRDBDSixXQUFXO01BQ1gsWUFBWSxFQUFBO0VBN0N4QjtJQWlEUSxpQkFBaUIsRUFBQTtFQWpEekI7TUFtRFksWUFBVztNQUNYLHlCQ25DZ0IsRUFBQTtFRGpCNUI7UUF1RGdCLGlCQUFpQjtRQUNqQixrQkFBa0IsRUFBQTtFQXhEbEM7UUEyRGdCLCtCQzFDWSxFQUFBO0VEakI1QjtJQWlFWSxZQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLHlCQ2xFZ0I7SURtRWhCLGNDaEVRO0lEa0VSLGdCQUFnQixFQUFBO0VBdEU1QjtNQXdFZ0IsYUFBYTtNQUNiLGNBQWM7TUFDZCxrQkFBa0IsRUFBQTtFQUtsQztFQUNJLG9DQUErQztFQUMvQyxnQkFBZ0I7RUFDaEIsK0dBQW1HO0VBQ25HLGNBQWM7RUFDZCxZQUFZO0VBQ1osa0JBQWtCO0VBRWxCLGdCQUFnQixFQUFBO0VBUnBCO0lBVVEsY0FBYztJQUNkLGNBQWM7SUFDZCxjQUFjLEVBQUE7RUFLdEI7RUFDSSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGdCQUFnQixFQUFBO0VBSHBCO0lBS1EsY0N2R2lCO0lEd0dqQixrQkFBa0IsRUFBQTtFQUsxQjtFQUNJLGVBQWUsRUFBQTtFQUVuQjtFQUNJLGdCQUFnQixFQUFBO0VBSXBCO0VBQ0ksa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9mZ3Mtb3BlcmF0aW9ucy9FV00vZXdtLWxvYWRzbGlwLXBsYW5uZXItdmlldy9ld20tbG9hZHNsaXAtcGxhbm5lci12aWV3LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vLi4vYXNzZXRzL3N0eWxlcy92YXJpYWJsZXMnO1xuQGltcG9ydCAnLi4vLi4vLi4vLi4vYXNzZXRzL3N0eWxlcy9taXhpbnMnO1xuXG4ubG9hZHNsaXAtZmllbGRzIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIC5mb3JtLWdyb3Vwe1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwZW07XG4gICAgICAgIC5tYXQtZm9ybS1maWVsZC13cmFwcGVye1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDBlbSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgLm1hdC1mb3JtLWZpZWxkLWZsZXh7XG4gICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDBlbTtcbiAgICAgICAgICAgICAgICAubWF0LWZvcm0tZmllbGQtaW5maXh7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci10b3A6MGVtIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwZW07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC5ib3JkZXJlZCB7XG4gICAgICAgIHBhZGRpbmc6NXB4O1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkdGFibGUtYm9yZGVyLWNvbG9yO1xuICAgICAgICAvLyBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgZGl2e1xuICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC5pbnB1dGJvcmRlcmVke1xuICAgICAgICBwYWRkaW5nOjFweDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHRhYmxlLWJvcmRlci1jb2xvcjtcbiAgICAgICAgLy8gYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC5tYXQtZm9ybS1maWVsZHtcbiAgICAgICAgICAgIHRvcDogOHB4O1xuICAgICAgICAgICAgcGFkZGluZzogMHB4IDhweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAuZmxvdy1idG5ze1xuICAgICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgICAgICBtYXJnaW4tdG9wOiAycHg7XG4gICAgICAgIGJ1dHRvbntcbiAgICAgICAgICAgIHBhZGRpbmc6MHB4IDdweDtcbiAgICAgICAgfVxuICAgICAgICBidXR0b24ubWF0LWRlZmF1bHR7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGhlbWUtZ3JleTtcbiAgICAgICAgICAgIGNvbG9yOiAjNTU1O1xuICAgICAgICAgICAgaGVpZ2h0OiAzNHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC5jb2wtbWQtM3tcbiAgICAgICAgcGFkZGluZzogMHB4IDE1cHg7XG4gICAgICAgIC5ib3JkZXJlZC1ib3h7XG4gICAgICAgICAgICBwYWRkaW5nOjVweDtcbiAgICAgICAgICAgIGJvcmRlcjoxcHggc29saWQgJHRhYmxlLWJvcmRlci1jb2xvcjtcbiAgICAgICAgICAgIC8vIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgICAgIC5jb2wtbWQtNHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwcHggMTBweDtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuYm9yZGVyZWQtYm94LWxlZnQtZGl2e1xuICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICR0YWJsZS1ib3JkZXItY29sb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmNvbC1tZC01IHtcbiAgICAgICAgLmJnLXRoZW1le1xuICAgICAgICAgICAgcGFkZGluZzo1cHg7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtZWRpdW0tY29sb3ItdGhlbWU7XG4gICAgICAgICAgICBjb2xvcjokdGhlbWUtd2hpdGU7XG4gICAgICAgICAgICAvLyBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4O1xuICAgICAgICAgICAgLmNvbC13aWQtMjBwe1xuICAgICAgICAgICAgICAgIGZsZXg6IDAgMCAyMCU7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAyMCU7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuLmdyZWVuQnV0dG9ue1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR0aGVtZS1ncmVlbi1jb2xvciAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmc6IDBweCA1cHg7XG4gICAgYm94LXNoYWRvdzogMCAzcHggMXB4IC0ycHggcmdiYSgwLDAsMCwuMiksIDAgMnB4IDJweCAwIHJnYmEoMCwwLDAsLjE0KSwgMCAxcHggNXB4IDAgcmdiYSgwLDAsMCwuMTIpO1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgLy8gbWluLXdpZHRoOiAxMTBweDsgICBcbiAgICBtaW4taGVpZ2h0OiAzNXB4O1xuICAgIHNwYW57XG4gICAgICAgIGZvbnQtc2l6ZTogOHB4O1xuICAgICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxufVxuXG5cbi5tYW51bGFsLXBsYW4taGVhZGVye1xuICAgIHBhZGRpbmc6IDVweCAwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgc3BhbntcbiAgICAgICAgY29sb3I6ICRkYXJrLWNvbG9yLXRoZW1lO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gICAgfVxufVxuXG5cbi5zb3VyY2UtdGV4dHtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG59XG4ubmd4LWRhdGF0YWJsZS5tYXRlcmlhbHtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG5cbi5tYXJnaW4tYm90dG9tLTV7XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4iLCIkdGhlbWUtcHVycGxlLWJhY2tncm91bmQtY29sb3I6I0ZBRjlGRTtcbiRkYXJrLWNvbG9yLXRoZW1lOiMzRjJCNTM7XG4kdGhlbWUtcHVycGxlLWNvbG9yOiM1QTMwOTQ7XG4kbGlnaHQtY29sb3ItdGhlbWU6I2Q0YjZmZjtcbiRtZWRpdW0tY29sb3ItdGhlbWU6ICM3NzU4OTk7XG4kdGhlbWUtZ3JleTojYWFhO1xuJHRoZW1lLWxpZ2h0LWdyZXk6ICNjY2M7XG4kdGhlbWUtd2hpdGU6I2ZmZmZmZjtcbiR0aGVtZS1ibGFjazojMDAwO1xuJHRoZW1lLWJsdWUtY29sb3I6IzIxOTZmMztcbiR0aGVtZS1ncmVlbi1jb2xvcjojNDE3NTA1O1xuJHRoZW1lLWxpZ2h0LWdyZWVuLWNvbG9yOiNCOEU5ODY7XG4kdGhlbWUtbGlnaHQtYnJvd24tY29sb3I6I0VDRTE1NSA7XG4kdGhlbWUtYnJvd24tY29sb3I6IzlCOTMyQjtcbiR0aGVtZS1icm93bi1ib3JkZXI6I0NGQzMyRDtcbiR0aGVtZS1zZWFyY2hib3gtYmFja2dyb3VuZC1jb2xvcjojRjlGNEZGO1xuJHRoZW1lLW9wYWN0aXR5LWJvcmRlcjojYmU5NmY1O1xuJHRoZW1lLXJlZC10ZXh0OiNDNzNEM0Q7XG4kdGhlbWUtcmVkLWJhY2tncm91bmQtY29sb3I6ICNGQ0FFQUU7XG4kdGhlbWVuLXJlZC1ib3JkZXItY29sb3I6I0VENzM3MztcbiR0YWJsZS1ib3JkZXItY29sb3I6ICNkZWUyZTY7XG4kc2Vjb25kYXJ5LXRoZW1lOiAjYzI1NjNmO1xuJHNlY29uZGFyeS1saWdodC10aGVtZTogI2VmY2NjNTsiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog } from '@angular/material';\nimport { LoadslipCancelPopupComponent } from 'src/app/public/loadslip-cancel-popup/loadslip-cancel-popup.component';\nimport { constants, loadslipEventsTriggers } from 'src/app/constants';\nimport { Location } from '@angular/common'\nimport { ApiserviceService } from 'src/app/services/api/apiservice.service';\n@Component({\n  selector: 'app-ewm-loadslip-planner-view',\n  templateUrl: './ewm-loadslip-planner-view.component.html',\n  styleUrls: ['./ewm-loadslip-planner-view.component.scss']\n})\nexport class EwmLoadslipPlannerViewComponent implements OnInit {\n\n  eventTriggers: any;\n  destinationList: any;\n  isLoading: boolean = false;\n  totalTTESeletecd: any;\n  totalTruckVolume: any;\n  totalTyres: any;\n  totalTubes: any;\n  totalFlaps: any;\n  totalValves: any;\n  ShipTo: any;\n  page = {\n    limit: 10,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n  limitOptions: Array<any> = [\n    { key: '10', value: 10 },\n    { key: '20', value: 20 },\n    { key: '30', value: 30 },\n    { key: '50', value: 50 },\n    { key: '100', value: 100 }\n  ];\n  pageSize: number;\n  loadSlipData = [];\n  source = '';\n  destination = '';\n  truckType = '';\n  minDate = new Date();\n  editing = {};\n  createLoadSlipSuccess: boolean = false;\n  truckTypes = [];\n  loadslipUtilizationData: any;\n  totalMaterialWeight: any;\n  shiptoPlaceList: any;\n  userSource: string;\n  isLoadslipIdAvaliable: boolean = false;\n  setDefaultCurrency: string;\n  totalPctr: any;\n  viewType: string;\n  loadslipID: any;\n  bayArrivedDate: any;\n  loadingStartDate: any;\n  loadingEndDate: any;\n  confirmedDate: any;\n  releasedDate: any;\n  lsPrintDate: any;\n  shipmentNumber: any;\n  bay: any;\n  totalLoadedQty: any;\n  loadslipCategory: any;\n  marketSegmentMap: any;\n  roles: any;\n  itemLevelTotalTTE: any;\n  itemLevelTotalWeight: any;\n  itemLevelTotalVolume: any;\n  sendForBarcodeDate: string;\n  dropSeq: string;\n  freightAvailableflag: string;\n  multistopTruckNumber: string;\n  variant_ONE: string;\n  actualTruckType: string;\n  truckT: string;\n  transporter: string;\n  description:string;\n  city:string;\n  STOSONumber: any;\n  totalTTEQty: any;\n  totalQuantity: any;\n  totalOthersCount: number = 0;\n  elrFlag: boolean;\n  lrNum: any;\n  printLr: boolean;\n  generateLr: boolean;\n  selectedCategories=[]\n  indentCategory: any;\n  menuName: string;\n  constructor(\n    public service: ApiserviceService,\n    private router: Router,\n    private ActivatedRoute: ActivatedRoute,\n    private toastr: ToastrService,\n    private dialog: MatDialog,\n    private location: Location\n  ) {\n    setTimeout(() => { this.isLoading = true; }, 0);\n    // this.userSource = localStorage.getItem(\"sourceID\");\n    this.loadslipID = this.ActivatedRoute.snapshot.params['loadslipId'];\n    // this.viewType = this.ActivatedRoute.snapshot.params['viewType']\n    console.log(this.ActivatedRoute.snapshot.params);\n    this.roles = constants.roles;\n\n\n    if (this.loadslipID) {\n      // Get If Transpoter is registered for e-load receipt\n     // this.getElrFlag();\n      this.isLoadslipIdAvaliable = true;\n      this.getLoadSlipByIdFromServer(this.loadslipID);\n      this.menuName = this.ActivatedRoute.snapshot.queryParams['menuName']\n\n\n    }\n  }\n\n  ngOnInit() {\n\n    if (this.service.checkRole() == this.roles.gateSecurity || this.service.checkRole() == this.roles.rdc_GAT) {\n      localStorage.setItem(\"userMenu\", this.menuName);\n    } else {\n      localStorage.setItem(\"userMenu\", \"load-slip\");\n    }\n  }\n  getLoadSlipByIdFromServer(loadslipID) {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getLoadSlipDetailsByID + \"/\" + loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        this.userSource = responseData.source;\n        this.destination = responseData.destination;\n        this.description = responseData.description;\n        this.city = responseData.city;\n        this.shipmentNumber = responseData.shipmentID;\n        this.loadslipCategory = responseData.loadslipCategory;\n        this.bayArrivedDate = responseData.bayArrivedDate;\n        this.loadingStartDate = responseData.loadingStartDate;\n        this.loadingEndDate = responseData.loadingEndDate;\n        this.confirmedDate = responseData.confirmedDate;\n        this.releasedDate = responseData.releasedDate;\n        this.lsPrintDate = responseData.lsPrintDate;\n        this.sendForBarcodeDate = responseData.sendForBarcodeDate\n        this.bay = responseData.bay;\n        this.ShipTo = responseData.shipTo;\n        this.truckType = responseData.truckNumber;\n        this.multistopTruckNumber = responseData.truckNumber;\n        // this.IS_MULTI_STOP = responseData.multiStop;\n        this.totalTyres = responseData.totalTyres;\n        this.totalTubes = responseData.totalTubes;\n        this.totalFlaps = responseData.totalFlaps;\n        this.totalValves = responseData.totalValves;\n        this.totalPctr = responseData.totPctr;\n        this.totalOthersCount = responseData.otherQty;\n        this.dropSeq = responseData.dropSeq;\n        this.freightAvailableflag = responseData.freightAvailableflag;\n        this.STOSONumber = responseData.sostoNumberVal;\n        this.totalTTEQty = responseData.totalTTE;\n        this.totalQuantity = responseData.totQty;\n        // Shipment level values\n        this.totalTTESeletecd = responseData.shipmentTTEUtil;\n        this.totalMaterialWeight = responseData.shipmentWeightUtil;\n        this.totalTruckVolume = responseData.shipmentVolumeUtil;\n        this.selectedCategories=responseData.selectedItemCategories;\n        this.indentCategory = responseData.truckIndentCategory;\n        //Loads slip values \n        // this.loadslipTteUtil = responseData.tteUtil;\n        // this.loadslipWtUtil = responseData.weightUtil;\n        // this.loadslipVolUtil = responseData.volumeUtil;\n        this.totalLoadedQty = responseData.totalLoadedQty;\n        this.itemLevelTotalTTE = responseData.totalTTE;\n        this.itemLevelTotalWeight = responseData.totalWeight;\n        this.itemLevelTotalVolume = responseData.totalVolume;\n        this.truckT = responseData.truckType;\n        this.transporter = responseData.servprov;\n        // variants & Actual Truck Type\n        this.variant_ONE = responseData.variant1;\n        this.actualTruckType = responseData.actualTruckType;\n         // ELR Flag, LR Number\n        this.elrFlag = responseData.elrFlag;\n        this.lrNum = responseData.elrNumber;\n        // Set if LR is to be Generated or Printed\n        this.setLrButton();\n        //get the loadslip plans & truckdetails\n        this.isLoading = false;\n        this.setLoadSlipValue(responseData);\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\")\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  getElrFlag() {\n    this.service.get_service(ApiserviceService.apisList.getElrFlag + \"?loadslipId=\" + this.loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200 && response[\"data\"] == 'Y') {\n        //|| response[\"data\"] == 'N'\n        this.elrFlag = true;\n        this.lrNum = response['opsId'];\n      }\n    });\n  }\n\n  setLrButton() {\n    if (this.lrNum !== null && this.lrNum !== undefined) {\n      this.printLr = true;\n      this.generateLr = false;\n    }\n    else {\n      this.printLr = false;\n      this.generateLr = true;\n    }\n  }\n\n\n  // download load receipt\n  downloadLoadReceipt() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.printLoadReceipt + \"?loadslipId=\" + this.loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        let lrNo = response['opsId'];\n        const linkSource = 'data:application/pdf;base64,' + responseData;\n        var element = document.createElement('a');\n        element.setAttribute('href', linkSource);\n        element.setAttribute('download', lrNo);\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n        this.isLoading = false;\n        this.toastr.success(response['message']);\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n  setLoadSlipValue(responseData) {\n    if (responseData.loadslipDraftDataDtos) {\n      this.totalTyres = 0;\n      this.totalTubes = 0;\n      this.totalFlaps = 0;\n      this.totalValves = 0;\n      this.totalPctr = 0;\n      responseData.loadslipDraftDataDtos.forEach(data => {\n        let newData = {\n          \"BATCH_CODE\": data.batchCode,\n          \"qty\": data.loadedQty,\n          \"lineNumber\": data.lineNumber,\n          \"ITEM_DESCRIPTION\": data.itemDesc,\n          \"ITEM_ID\": data.itemId,\n          \"VOLUME\": data.grossVol,\n          \"WEIGHT\": data.grossWt,\n          \"TTE\": data.tte,\n          \"SUM_QTY\": data.availableQty,\n          \"ITEM_CATEGORY\": data.itemCategory,\n          \"MIN_PRIORITY\": data.priority,\n          \"isScannable\": data.isScannable,\n          \"QTY\": data.loadedQty,\n          // flap details\n          // \"FLAP_DESC\": data.flapSKU,\n          \"flapBatch\": data.flapBatch,\n          \"FLAP_CODE\": data.flapSKU,\n          \"FLAP_COMP_QTY\": data.flapCompQty,\n          \"totalFlapQty\": data.falpQty,\n\n          //tube details\n          \"tubeBatch\": data.tubeBatch,\n          \"TUBE_CODE\": data.tubeSKU,\n          \"TUBE_COMP_QTY\": data.tubeCompQty,\n          \"totalTubeQty\": data.tubeQty,\n          \"scannedQty\": data.scannedQty,\n\n          //value details\n          \"VALVE_DESC\": data.valveBatch,\n          \"VALVE_CODE\": data.valveSKU,\n          \"VALVE_COMP_QTY\": data.valveCompQty,\n          \"totalValueQty\": data.valveQty,\n        };\n        this.loadSlipData.push(newData);\n        this.loadSlipData = [...this.loadSlipData];\n      });\n      this.totalTyres = responseData.totalTyres;\n      this.totalTubes = responseData.totalTubes;\n      this.totalFlaps = responseData.totalFlaps;\n      this.totalValves = responseData.totalValves;\n      this.totalPctr = responseData.totPctr;\n      this.totalTTESeletecd = responseData.tteUtil;\n      this.totalMaterialWeight = responseData.weightUtil;\n      this.totalTruckVolume = responseData.volumeUtil;\n      this.totalLoadedQty = responseData.totalLoadedQty;\n      this.itemLevelTotalTTE = responseData.totalTTE;\n      this.itemLevelTotalWeight = responseData.totalWeight;\n      this.itemLevelTotalVolume = responseData.totalVolume;\n    }\n  }\n\n  // Download loadslip after trigger CONFIRM event\n\n  downloadLoadslip() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.printLoadslip + \"?loadslipId=\" + this.loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        const linkSource = 'data:application/pdf;base64,' + responseData;\n        var element = document.createElement('a');\n        element.setAttribute('href', linkSource);\n        element.setAttribute('download', this.loadslipID);\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n        this.isLoading = false;\n        this.toastr.success(response['message']);\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  locationBack() {\n    this.location.back();\n  }\n\n  isDPREPRole(){\n    if(this.service.checkRole() == this.roles.planner3 || this.service.checkRole() == this.roles.L1MGR || this.service.checkRole() == this.roles.L2MGR ){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  // Print Excel\n  export(): void {\n      this.isLoading = true;\n      this.service.get_service_DownLoadExcel(ApiserviceService.apisList.printLoadslip +'?loadslipId='+this.loadslipID+'&excel='+true).subscribe(response => {\n        if(response.body.type == 'application/json'){\n          //  When user requests for excel for cancelled LS then the return type will be 'application/json'\n          // Other wise it will of type blob\n           this.isLoading=false;\n           this.toastr.error(\"Loadslip is found as cancelled...\",\"Error!\");\n    \n         }else if (response) {\n          // Uncomment when export excel is generated in backend\n          var blob = new Blob([response.body], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n            // var filename = 'LoadslipDetails.xlsx';\n            var filename = this.loadslipID+'.xlsx';\n            const link = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            document.body.appendChild(a);\n            a.setAttribute('style', 'display: none');\n            a.href = link;\n            a.download = filename\n            a.click();\n            window.URL.revokeObjectURL(link);\n            a.remove();\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n  \n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { customMaterialModule } from 'src/app/angular-material';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\nimport { EwmLoadslipPlannerViewComponent } from './ewm-loadslip-planner-view.component';\nimport { LoaderModule } from 'src/app/public/loader/loader-shared.module';\n\nconst routes: Routes = [\n  { path: '', component: EwmLoadslipPlannerViewComponent},\n  { path: ':loadslipId', component: EwmLoadslipPlannerViewComponent},\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    FormsModule,\n    customMaterialModule,\n    LoaderModule,\n    NgxDatatableModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    EwmLoadslipPlannerViewComponent\n   \n  ]\n  \n})\nexport class EwmLoadslipPlannerViewModule { }\n"],"sourceRoot":""}