{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/gate-security/truck-history-shipping/truck-history-shipping.component.html","webpack:///./src/app/gate-security/truck-history-shipping/truck-history-shipping.component.scss","webpack:///./src/app/gate-security/truck-history-shipping/truck-history-shipping.component.ts","webpack:///./src/app/gate-security/truck-history-shipping/truck-history-shipping.module.ts"],"names":[],"mappings":"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","file":"gate-security-truck-history-shipping-truck-history-shipping-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\">\\n</app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\"><b>Truck status > Truck History > Shipping</b>\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"Filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"manualplan-fields\\\" *ngIf=\\\"isShow\\\">\\n      <form (submit)=\\\"truckstatusIndetsFilter()\\\">\\n    <div class=\\\"col-md-12 row\\\">\\n      <div class=\\\"col-md-12 padding-right-40\\\">\\n        <div class=\\\"row tab-loadslip-fields\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-2 pl-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput aria-label=\\\"Source\\\" placeholder=\\\"Source\\\"\\n                      (keyup)=\\\"getfilterDestination($event,'source', isIntransitTruck)\\\" autocomplete=\\\"off\\\"\\n                      [matAutocomplete]=\\\"sourceAutocomplete\\\" [(ngModel)]=\\\"source\\\" name=\\\"source\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                    <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n                        <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"col-md-3 pr-0\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <mat-form-field>\\n                        <input matInput aria-label=\\\"Destination\\\" placeholder=\\\"Destination\\\" (keyup)=\\\"getfilterDestination($event,'destination')\\\" autocomplete=\\\"off\\\"\\n                          [matAutocomplete]=\\\"destinationAutocomplete\\\" [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\">\\n                        <mat-autocomplete #destinationAutocomplete=\\\"matAutocomplete\\\">\\n                          <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\">\\n                            <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                          </mat-option>\\n                        </mat-autocomplete>\\n                      </mat-form-field>\\n                    </div>\\n                  </div> -->\\n\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Destination\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n                      [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\"\\n                      (keyup)=\\\"getfilterDestination($event,'destination', !isIntransitTruck)\\\">\\n                    <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\"\\n                        (click)=\\\"setDestDescription(list.description)\\\"\\n                        (onSelectionChange)=\\\"setDestDescription(list.description)\\\">\\n                        <span>{{list.value}}</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"destinationDesc\\\"\\n                      [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destinationDesc\\\"\\n                      (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                    <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                        (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                        <span>({{list.description}})</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-md-4 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <mat-select placeholder=\\\"Truck/Container Type\\\" [(ngModel)]=\\\"truckType\\\" name=\\\"truckType\\\" multiple>\\n                      <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                      <mat-option *ngFor=\\\"let truck of truckList\\\" [value]=\\\"truck.value\\\"> {{truck.value}} </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <mat-select placeholder=\\\"Select Status\\\" name=\\\"status\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"statusType\\\" multiple>\\n                    <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                    <mat-option *ngFor=\\\"let status of truckStatusList\\\" [value]=\\\"status.value\\\">\\n                      {{status.key}}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <input matInput [(ngModel)]=\\\"trckNumber\\\" name=\\\"truck number\\\" autocomplete=\\\"off\\\"\\n                    placeholder=\\\"Truck Number\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput aria-label=\\\"transporter\\\" placeholder=\\\"Transporter\\\"\\n                      (keyup)=\\\"getfilterTransporter($event)\\\" autocomplete=\\\"off\\\"\\n                      [matAutocomplete]=\\\"transporterAutocomplete\\\" [(ngModel)]=\\\"transporter\\\" name=\\\"transporter\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                    <mat-autocomplete #transporterAutocomplete=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let list of transporterList\\\" [value]=\\\"list.value\\\">\\n                        <span>{{list.value}}</span>\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <mat-form-field>\\n                  <input matInput [(ngModel)]=\\\"shipmentId\\\" name=\\\"shipment\\\" autocomplete=\\\"off\\\" placeholder=\\\"Shipment Id\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                </mat-form-field>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row tab-loadslip-fields\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-3 pl-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [(ngModel)]=\\\"indentId\\\" name=\\\"indentid\\\" placeholder=\\\"Indent Id\\\" autocomplete=\\\"off\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [min]=\\\"minDate\\\" placeholder=\\\"Gate In From Date\\\" disabled\\n                      [matDatepicker]=\\\"gateInFromDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateInFromDate\\\"\\n                      (dateChange)=\\\"addEvent('gateInDate', $event)\\\" name=\\\"gateInToDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"gateInFromDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #gateInFromDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <input matInput [min]=\\\"gateInFromDate\\\" placeholder=\\\"Gate In To Date\\\" disabled\\n                    [matDatepicker]=\\\"gateInToDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateInToDate\\\"\\n                    name=\\\"gateInToDate\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"gateInToDatePicker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #gateInToDatePicker [disabled]=\\\"!gateInFromDate\\\"></mat-datepicker>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [min]=\\\"minDate\\\" placeholder=\\\"Gate Out From Date\\\" disabled\\n                      [matDatepicker]=\\\"gateOutFromDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateOutFromDate\\\"\\n                      (dateChange)=\\\"addEvent('gateOutDate', $event)\\\" name=\\\"gateoutFromDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"gateOutFromDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #gateOutFromDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-3 pr-0\\\">\\n                <mat-form-field>\\n                  <input matInput [min]=\\\"gateOutFromDate\\\" placeholder=\\\"Gate Out To Date\\\" disabled\\n                    [matDatepicker]=\\\"gateOutToDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateOutToDate\\\"\\n                    name=\\\"gateoutToDate\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"gateOutToDatePicker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #gateOutToDatePicker [disabled]=\\\"!gateOutFromDate\\\"></mat-datepicker>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [min]=\\\"minDate\\\" placeholder=\\\"Rep From Date\\\" disabled\\n                      [matDatepicker]=\\\"reportFromDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"reportFromDate\\\"\\n                      (dateChange)=\\\"addEvent('repFromDate', $event)\\\" name=\\\"reportfromDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"reportFromDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #reportFromDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <input matInput [min]=\\\"reportFromDate\\\" placeholder=\\\"Rep To Date\\\" disabled\\n                      [matDatepicker]=\\\"reportToDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"reportToDate\\\"\\n                      name=\\\"reportToDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"reportToDatePicker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #reportToDatePicker [disabled]=\\\"!reportFromDate\\\"></mat-datepicker>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <mat-form-field>\\n                  <mat-select placeholder=\\\"Rejection\\\" [(ngModel)]=\\\"rejection\\\" name=\\\"rejection\\\" multiple>\\n                    <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                    <mat-option *ngFor=\\\"let item of rejectionList\\\" [value]=\\\"item\\\"> {{item}} </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <mat-form-field>\\n                    <mat-select placeholder=\\\"Ind Cat\\\" [(ngModel)]=\\\"materialGrp\\\" name=\\\"materialGrp\\\" multiple>\\n                      <mat-option *ngFor=\\\"let category of categoryList\\\" [value]=\\\"category\\\">{{category}}</mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"pull-right\\\">\\n        <div class=\\\"search-fileds\\\">\\n          <button class=\\\"theme-small-button\\\" type=\\\"submit\\\" matTooltip=\\\"Search\\\">\\n            <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <button class=\\\"theme-delete-button\\\" type=\\\"button\\\" (click)=\\\"clearData()\\\" matTooltip=\\\"Clear All\\\">\\n            <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n      </form>\\n  </div>\\n  <ngx-datatable #table class='material  ngx-table-custom-scroll ngx-table-tr-custom-scroll'\\n    [rows]='fgsReportedTrucksIndents' [scrollbarH]=\\\"true\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"30\\\"\\n    [rowHeight]=\\\"'auto'\\\" [limit]=\\\"fgPage.limit\\\" [scrollbarH]=\\\"true\\\" [count]=\\\"fgPage.count\\\" [offset]=\\\"fgPage.offset\\\"\\n    (page)=\\\"FgsDatatablePageData($event)\\\" [externalPaging]=\\\"true\\\">\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Truck Number\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"truckNumber\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.truckNumber | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Source\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.source}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"ShipmentId\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n      prop=\\\"shipmentId\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.shipmentId | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Dest\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"destination\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destination | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Dest Description\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"destDis\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destDis}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Container\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"containerNum\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.containerNum | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Truck Type\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"truckType\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.truckType | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Transporter\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"transporter\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.transporter | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"LR Num\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.lrNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"LR Date\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.lrDate ? (row.lrDate | customDateFormat | date:'dd-MMM-yyyy') : '--'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Indent Cat\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.indentCategory}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SAP Invoice\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvoice}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tot Tyre\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totTyre}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tot Tube\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totTube}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tot Flap\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totFlap }}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tot Valve\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totValve}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tot PCTR\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totPctr}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Other Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.otherQty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tot Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"source\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totQty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Country of Destination\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"destCountryName\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destCountryName}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Indent Id\\\" [width]=\\\"170\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"indentId\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.indentId}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Driver Name\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"indentId\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.driverName}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Driver Number\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"indentId\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.driverContact}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Report Date\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"reportedDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.reportedDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Gate In\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"gateInDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        {{row.gateInDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Gate Out\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"gateOutDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <span>{{row.gateOutDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm' || '--'}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"ETA\\\" [width]=\\\"110\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"etaDest\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <span>{{row.etaDest | customDateFormat | date:'dd-MMM-yyyy' || '--'}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Bay\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"bayAssigned\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <span>{{row.bayAssigned?row.bayAssigned:'--'}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Rejection\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"rejectionStatus\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.rejectionStatus}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Rejection Desc\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"rejectionDesc\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.rejectionDesc}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Status\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"status\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.status}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"In weight (Kg)\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"inWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <span>{{row.inWeight || '--'}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Out Weight (Kg)\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"outWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <span>{{row.outWeight || '--'}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Net Weight (Kg)\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"netWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.netWeight || '--'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SAP invoice weight(Kg)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvWeight}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Weight Diff (Kg)\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"netWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <span [ngClass]=\\\"(row.weightDiffStatus)?'text-danger':''\\\">{{row.diffInvWeight}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SAP invoice value(INR)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvValue}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Eway bill No\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.ewayBillNo}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Loadslip Comments\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"loadslipComments\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <!-- <button class=\\\"theme-small-button\\\" matTooltip=\\\"loadslipComments\\\" (click)=\\\"ShowComments(row.loadslipComments,'loadslip')\\\" *ngIf=\\\"(row.loadslipComments)\\\">\\n          <i class=\\\"fa fa-commenting-o\\\" aria-hidden=\\\"true\\\"></i>\\n        </button> -->\\n        <div [title]=\\\"row.loadslipComments\\\" [ngClass]=\\\"{'cursor-pointer':row.loadslipComments?.length>12}\\\"\\n          (click)=\\\"ShowComments(row.loadslipComments,'loadslip')\\\" *ngIf=\\\"(row.loadslipComments)\\\">\\n          {{(row.loadslipComments?.length>12) ? (row.loadslipComments | slice:0:12)+'..':(row.loadslipComments)}}\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Gate Comments\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"comments\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <!-- <button class=\\\"theme-small-button\\\" matTooltip=\\\"Comments\\\" (click)=\\\"ShowComments(row.comments,'comments')\\\" *ngIf=\\\"row.comments\\\">\\n          <i class=\\\"fa fa-commenting-o\\\" aria-hidden=\\\"true\\\"></i>\\n        </button> -->\\n        <div class=\\\"edit-field\\\" [title]=\\\"row.comments\\\" [ngClass]=\\\"{'cursor-pointer':row.comments?.length>10}\\\"\\n          (click)=\\\"ShowComments(row.comments,'comments')\\\" *ngIf=\\\"row.comments\\\">\\n          <span class=\\\"edit-label\\\">{{(row.comments?.length>9)? (row.comments | slice:0:9)+'..':(row.comments)}}\\n          </span>\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"PUC\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"puc\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.puc)?'Yes':'No'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Insurance\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"insurance\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.insurance)?'Yes':'No'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Seat Belt\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"seatBelt\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.seatBelt)?'Yes':'No'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"First Aid\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"firstAid\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.firstAid)?'Yes':'No'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Fire Extenguisher\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"fireExtenguisher\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.fireExtenguisher)?'Yes':'No'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Emergency Card\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"emergencyCard\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.emergencyCard)?'Yes':'No'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Spark Arrestor\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"sparKArrestor\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.sparKArrestor)?'Yes':'No'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Fitness Certificate\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"fitnessCert\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.fitnessCert)?'Yes':'No'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"insertUser\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.insertUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Update User\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"updateUser\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.updateUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"FT Trip ID\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"ftTripId\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.ftTripId}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Loadslips\\\" [width]=\\\"220\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"report\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!row.shipmentId\\\"\\n          (click)=\\\"viewLoadslip(row.shipmentId,'loadslipView')\\\" class=\\\"table-btn mr-10\\\">View\\n          Loadslips\\n        </button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!row.shipmentId\\\"\\n          (click)=\\\"viewLoadslip(row.shipmentId,'invoiceView')\\\" class=\\\"table-btn\\\">LoadSlip\\n          Invoice\\n        </button>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <!-- Footer Template starts -->\\n    <ngx-datatable-footer>\\n      <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n        let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n        <div class=\\\"page-count\\\">\\n          <span *ngIf=\\\"selectedCount\\\">\\n            {{selectedCount.toLocaleString()}} Selected |\\n          </span>\\n          Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n          (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n          {{(rowCount)}} records.\\n        </div>\\n        <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n          [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\"\\n          [size]=\\\"pageSize\\\" [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n          (change)=\\\"table.onFooterPage($event)\\\">\\n        </datatable-pager>\\n      </ng-template>\\n    </ngx-datatable-footer>\\n    <!-- Footer Template Ends -->\\n  </ngx-datatable>\\n</div>\\n\\n\\n\\n\\n<!-- View Loadslips  for coorsponding shipment -->\\n<div class=\\\"modal\\\" id=\\\"loadslipsModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Loadslip List</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <ul>\\n          <li *ngFor=\\\"let item of loadslipList;let i=index\\\">\\n            <span>\\n              {{i+1}})\\n              <span class=\\\"link\\\" style=\\\"margin-left: 10px;margin-right: 50px\\\"\\n                (click)=\\\"viewLoadslipnavigation(item)\\\">{{item.loadlipId}}\\n              </span>\\n              <span>\\n                {{item.type}}\\n              </span>\\n            </span>\\n          </li>\\n        </ul>\\n      </div>\\n\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n<!-- View Loadslips  for coorsponding shipment -->\\n<div class=\\\"modal\\\" id=\\\"commentModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">{{commentHeader}}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <p>{{commentMsg}}</p>\\n      </div>\\n      <!-- Modal footer -->\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdGUtc2VjdXJpdHkvdHJ1Y2staGlzdG9yeS1zaGlwcGluZy90cnVjay1oaXN0b3J5LXNoaXBwaW5nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { HelperServiceService } from 'src/app/services/helper-service/helper-service.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { constants } from 'src/app/constants';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/public/date.adapters';\nimport * as XLSX from 'xlsx';\nimport * as moment from 'moment'\nimport { Router } from '@angular/router';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\ndeclare var $: any;\n@Component({\n  selector: 'app-truck-history-shipping',\n  templateUrl: './truck-history-shipping.component.html',\n  styleUrls: ['./truck-history-shipping.component.scss'],\n  providers: [\n    {\n      provide: DateAdapter, useClass: AppDateAdapter\n    },\n    {\n      provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\n    }\n  ]\n})\nexport class TruckHistoryShippingComponent implements OnInit {\n  fgsReportedTrucksIndents = [];\n  gateSeuReportedTrucksIndents = [];\n  isLoading: boolean = false;\n  commentMsg: string;\n  commentHeader: string;\n  comment: string;\n  editing = {};\n  editingFgs = {};\n  gateSecurityIndents = [];\n  fgPage = {\n    limit: 10,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 100\n  }\n  userRoles: any;\n  plantBayList: any;\n  isShow: boolean = true;\n  destinationList: any[];\n  transporterList: any[];\n  indentId: any;\n  transporter: any;\n  truckType=[];\n  destination: any;\n  destinationDesc: any;\n  descriptionList = [];\n  typeOfTruckReport = {};\n  truckStatusList = [];\n  statusType=[];\n  trckNumber: any;\n  RDCgateSeuReportedTrucksIndents: any;\n  sourceList: any;\n  source: any;\n  reportLocation: string;\n  truckList = [];\n  gateInFromDate: string;\n  gateInToDate: string;\n  gateOutFromDate: string;\n  gateOutToDate: string;\n  reportFromDate: string;\n  reportToDate: string;\n  shipmentId: string;\n  loadSlipType: any;\n  loadslipList: any;\n  isIntransitTruck:boolean = true;\n  categoryList = [];\n  materialGrp = [];\n  currentDateAsString = this.helperService.getTodayDateASString();\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  // rejectionList = [\"NORMAL\", \"REJECTED\"]\n  rejection=[];\n  rejectionList: string[];\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService,\n    private helperService: HelperServiceService,\n    private router: Router\n  ) {\n    this.userRoles = constants.roles;\n    this.typeOfTruckReport = constants.truckReportTypes;\n    this.truckStatusList = constants.truckHistoryStatusList;\n    this.reportLocation = localStorage.getItem('sourceID');\n    this.isLoading = true;\n    this.gateOutFromDate = this.currentDateAsString;\n    this.gateOutToDate = this.gateOutFromDate;\n    // for FGS operations and FGS gate security\n    let data = {\n      type: this.typeOfTruckReport['history'],\n      activity: \"P\",\n      reportLocation: this.reportLocation,\n      fromGateOutDate: this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n      toGateOutDate: this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n    }\n    this.service.post_service(ApiserviceService.apisList.getTruckData, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        this.fgsReportedTrucksIndents = response['data'].truckReportsData;\n        this.fgsReportedTrucksIndents = [...this.fgsReportedTrucksIndents];\n        this.fgPage.limit = response['data'].pageLength;\n        this.fgPage.count = response['data'].total;\n        this.isLoading = false;\n\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong\", \"!Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n    // get the list of available Bay in the plant \n    this.service.get_service(ApiserviceService.apisList.getPlanByInfo).subscribe(response => {\n      console.log(response);\n      this.plantBayList = response['data'];\n    })\n  }\n  onFooterPage(pageInfo){\n    console.log(pageInfo);\n    \n  }\n\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"fgs-truck-status\");\n    this.rejectionList = constants.rejectionList;\n\n    // for getting truck type master\n    this.getTruckTypeMasterData();\n    this.getCategoryMasterData();\n  }\n  // for getting truck type master\n  getTruckTypeMasterData() {\n    this.service.get_service(ApiserviceService.apisList.truckTypeMasterData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.truckList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    });\n  }\n  //clear data\n  clearData() {\n    this.destination = '';\n    this.indentId = \"\";\n    this.statusType = [];\n    this.transporter = \"\";\n    this.trckNumber = \"\";\n    this.truckType = [];\n    this.destinationDesc = \"\";\n    this.descriptionList = [];\n    this.destinationList = [];\n    this.transporterList = [];\n    this.source = '';\n    this.gateInFromDate = '';\n    this.gateInToDate = '';\n    this.gateOutFromDate = '';\n    this.gateOutToDate = '';\n    this.reportFromDate = '';\n    this.reportToDate = '';\n    this.shipmentId = '';\n    this.rejection = [];\n    this.materialGrp = [];\n  }\n\n\n  //refersh data \n  refreshData() {\n    this.table.offset = 0;\n    this.clearData();\n    this.isLoading = true;\n    this.currentDateAsString = this.helperService.getTodayDateASString();\n    this.gateOutFromDate = this.currentDateAsString;\n    this.gateOutToDate = this.gateOutFromDate;\n    let data = {\n      type: this.typeOfTruckReport['history'],\n      activity: \"P\",\n      reportLocation: this.reportLocation,\n      fromGateOutDate: this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n      toGateOutDate: this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n    }\n    this.service.post_service(ApiserviceService.apisList.getTruckData, data).subscribe(response => {\n      console.log(response);\n      if (response['statusCode'] == 200) {\n        this.fgsReportedTrucksIndents = response['data'].truckReportsData;\n        this.fgsReportedTrucksIndents = [...this.fgsReportedTrucksIndents];\n        this.fgPage.limit = response['data'].pageLength;\n        this.fgPage.count = response['data'].total;\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong\", \"!Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  // truck status filter creteria\n  truckstatusIndetsFilter() {\n    if (this.helperService.getDateValidations(this.gateInFromDate, this.gateInToDate, this.gateOutFromDate, this.gateOutToDate, this.reportFromDate, this.reportToDate)) {\n      this.table.offset = 0;\n      this.isLoading = true;\n      let data = {\n        destination: this.destination,\n        source: this.source,\n        indentID: this.indentId,\n        status: this.statusType.toString(),\n        transporter: this.transporter,\n        truckNumber: this.trckNumber,\n        truckType: this.truckType,\n        type: this.typeOfTruckReport['history'],\n        activity: \"P\",\n        reportLocation: this.reportLocation,\n        \"shipmentID\": this.shipmentId,\n        // Gate In Dates\n        \"fromGateInDate\": this.gateInFromDate ? (moment(this.gateInFromDate).format('DD/MM/YYYY')) : '',\n        \"toGateInDate\": this.gateInToDate ? (moment(this.gateInToDate).format('DD/MM/YYYY')) : '',\n        // Gate Out Dates\n        \"fromGateOutDate\": this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n        \"toGateOutDate\": this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n        // Report Dates\n        \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n        \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : '',\n        \"rejection\": this.rejection,\n        \"indentCategoryList\":this.materialGrp\n      }\n      this.service.post_service(ApiserviceService.apisList.getTruckData, data).subscribe(response => {\n        console.log(response);\n        if (response['statusCode'] == 200) {\n          this.fgsReportedTrucksIndents = response['data'].truckReportsData;\n          this.fgsReportedTrucksIndents = [...this.fgsReportedTrucksIndents];\n          this.fgPage.limit = response['data'].pageLength;\n          this.fgPage.count = response['data'].total;\n          this.isLoading = false;\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Some thing Went Wrong\", \"!Error\")\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n  // datatables with server side pagination for FGS Role\n  FgsDatatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    this.isLoading = true;\n    console.log(\"page info\", pageInfo);\n    let datatabledata = {\n      index: pageInfo.offset,\n      pageLength: pageInfo.pageSize,\n      destination: this.destination,\n      source: this.source,\n      indentID: this.indentId,\n      status: this.statusType.toString(),\n      transporter: this.transporter,\n      truckNumber: this.trckNumber,\n      truckType: this.truckType,\n      type: this.typeOfTruckReport['history'],\n      activity: \"P\",\n      reportLocation: this.reportLocation,\n      \"shipmentID\": this.shipmentId,\n      // Gate In Dates\n      \"fromGateInDate\": this.gateInFromDate ? (moment(this.gateInFromDate).format('DD/MM/YYYY')) : '',\n      \"toGateInDate\": this.gateInToDate ? (moment(this.gateInToDate).format('DD/MM/YYYY')) : '',\n      // Gate Out Dates\n      \"fromGateOutDate\": this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n      \"toGateOutDate\": this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n      // Report Dates\n      \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n      \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : '',\n      \"rejection\": this.rejection,\n      \"indentCategoryList\":this.materialGrp\n    }\n    this.service.post_service(ApiserviceService.apisList.getTruckData, datatabledata).subscribe(response => {\n      this.fgsReportedTrucksIndents = response['data'].truckReportsData;\n      this.fgsReportedTrucksIndents = [...this.fgsReportedTrucksIndents]\n      this.fgPage.limit = response['data'].pageLength;\n      this.fgPage.count = response['data'].total;\n      this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n\n  }\n\n  showFilter() {\n    this.isShow = !this.isShow;\n  }\n\n  //get filter destination result\n  getfilterDestination(event, typeofFilter, isIntransitTruck) {\n    this.destinationDesc = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.destinationList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue +'&isIntransitTruck='+isIntransitTruck).subscribe(response => {\n        if (typeofFilter === 'destination') {\n          this.destinationList = response['data'].searchResult;\n        } else {\n          this.sourceList = response['data'].searchResult;\n        }\n        console.log(\"this.destinationList\", this.destinationList)\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // filter Transporter details\n  getfilterTransporter(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.transporterList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?transporter=' + filtervalue).subscribe(response => {\n        this.transporterList = response['data'].searchResult;\n        console.log(\"this.transporterList\", this.transporterList)\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //set value destination\n  setDestination(value) {\n    //  this.destinationDesc = value;\n    this.destination = value;\n  }\n\n  //set value to destination description\n  setDestDescription(value) {\n    this.destinationDesc = value;\n  }\n\n  getUserDestinationList(event) {\n    this.destination = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.getDestinationDescriptionDataList + event.target.value).subscribe(response => {\n        if (response['data']) {\n          this.descriptionList = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n\n  //export excel data\n  export(): void {\n    if (this.fgsReportedTrucksIndents.length > 0) {\n      this.isLoading = true;\n      let data = {\n        destination: this.destination,\n        indentID: this.indentId,\n        status: this.statusType.toString(),\n        transporter: this.transporter,\n        truckNumber: this.trckNumber,\n        truckType: this.truckType,\n        type: this.typeOfTruckReport['history'],\n        activity: \"P\",\n        reportLocation: this.reportLocation,\n        pageLength: this.fgPage.count,\n        source: this.source,\n        \"shipmentID\": this.shipmentId,\n        // Gate In Dates\n        \"fromGateInDate\": this.gateInFromDate ? (moment(this.gateInFromDate).format('DD/MM/YYYY')) : '',\n        \"toGateInDate\": this.gateInToDate ? (moment(this.gateInToDate).format('DD/MM/YYYY')) : '',\n        // Gate Out Dates\n        \"fromGateOutDate\": this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n        \"toGateOutDate\": this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n        // Report Dates\n        \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n        \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : '',\n        \"rejection\": this.rejection,\n        \"indentCategoryList\":this.materialGrp,\n\n      }\n      // for FGS role \n      this.service.post_service(ApiserviceService.apisList.getTruckData, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          let newViewPlanData = response['data'].truckReportsData;\n          console.log(\"newViewPlanData\", newViewPlanData);\n          let excelRawData = newViewPlanData;\n          let newExcelData = [];\n          for (let i = 0; i < excelRawData.length; i++) {\n            let data = {\n              \"Truck Number\": excelRawData[i].truckNumber,\n              \"Source\": excelRawData[i].source,\n              \"Shipment Id\": excelRawData[i].shipmentId,\n              \"Destination\": excelRawData[i].destination,\n              \"Dest Description\": excelRawData[i].destDis,\n              \"Container\": excelRawData[i].containerNum,\n              \"Truck Type\": excelRawData[i].truckType,\n              \"Transporter\": excelRawData[i].transporter,\n              \"LR Num\":excelRawData[i].lrNum,\n              \"LR Date\":excelRawData[i].lrDate != null ? this.service.customDateFormat(excelRawData[i].lrDate) : null,\n              \"Indent Cat\":excelRawData[i].indentCategory,\n              \"SAP Invoice\":excelRawData[i].sapInvoice,\n              \"Tot Tyre\":excelRawData[i].totTyre,\n              \"Tot Tube\":excelRawData[i].totTube,\n              \"Tot Flap\":excelRawData[i].totFlap,\n              \"Tot Valve\":excelRawData[i].totValve,\n              \"Tot PCTR\": excelRawData[i].totPctr,\n              \"Other Qty\": excelRawData[i].otherQty,\n              \"Tot Qty\": excelRawData[i].totQty,\n              \"Country of Destination\": excelRawData[i].destCountryName,\n              \"Indent Id\": excelRawData[i].indentId,\n              \"Driver Name\": excelRawData[i].driverName,\n              \"Driver Number\": excelRawData[i].driverContact,\n              \"Report Date\": this.service.customDateTimeFormat(excelRawData[i].reportedDate),\n              \"Gate In\": this.service.customDateTimeFormat(excelRawData[i].gateInDate),\n              \"Gate Out\": this.service.customDateTimeFormat(excelRawData[i].gateOutDate),\n              \"ETA\": this.service.customDateFormat(excelRawData[i].etaDest),\n              \"Bay Assigned\": excelRawData[i].bayAssigned,\n              \"Rejection Desc\": excelRawData[i].rejectionDesc,\n              \"Rejection\": excelRawData[i].rejectionStatus,\n              \"Status\": excelRawData[i].status,\n              \"In weight (Kg)\": excelRawData[i].inWeight,\n              \"Out weight (Kg)\": excelRawData[i].outWeight,\n              \"Net weight (Kg)\": excelRawData[i].netWeight,\n              \"SAP invoice weight (Kg)\": excelRawData[i].sapInvWeight,\n              \"Weight Diff (Kg)\": excelRawData.diffInvWeight,\n              \"SAP invoice value (INR)\": excelRawData[i].sapInvValue,\n              \"Eway bill No\": excelRawData[i].ewayBillNo,\n              \"Loadslip Comments\": excelRawData[i].loadslipComments,\n              \"Gate Commnets\": excelRawData[i].comments,\n              \"PUC\": (excelRawData[i].puc) ? 'Yes' : 'No',\n              \"Insurance\": (excelRawData[i].insurance) ? 'Yes' : 'No',\n              \"Seat Belt\": (excelRawData[i].seatBelt) ? 'Yes' : 'No',\n              \"First Aid\": (excelRawData[i].firstAid) ? 'Yes' : 'No',\n              \"Fire Extenguisher\": (excelRawData[i].fireExtenguisher) ? 'Yes' : 'No',\n              \"Emergency Card\": (excelRawData[i].emergencyCard) ? 'Yes' : 'No',\n              \"Spark Arrestor\": (excelRawData[i].sparKArrestor) ? 'Yes' : 'No',\n              \"Fitness Certificate\": (excelRawData[i].fitnessCert) ? 'Yes' : 'No',\n              \"Insert User\": excelRawData[i].insertUser,\n              \"Update User\": excelRawData[i].updateUser,\n              \"FT Trip ID\":excelRawData[i].ftTripId,\n            }\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'truckHistoryShipping.xlsx');\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.toastr.error(\"No records found to export\", \"Error!\");\n    }\n\n  }\n\n  //show Comments in Modal\n  ShowComments(comments, type) {\n    if (type == 'loadslip') {\n      this.commentHeader = 'Loadslip Comments'\n    }\n    else {\n      this.commentHeader = 'Comments'\n    }\n    this.commentMsg = comments;\n    $('#commentModal').modal('show');\n  }\n\n  addEvent(type, event) {\n    console.log(event.target.value);\n    if (event.target.value) {\n      switch (type) {\n        /* Checking if selected from date greater than to date.\n     Clearing the toDate field when from date greater than to date */\n       case \"gateInDate\":\n           if(this.gateInToDate && (this.gateInFromDate > this.gateInToDate)){\n             this.gateInToDate = '';\n           }\n         // this.gateInToDate = '';\n         break;\n       case \"gateOutDate\":\n          let checkToDate: any = this.gateOutToDate;\n          console.log(\"Check--->1\", checkToDate);\n          if (this.gateOutToDate == this.currentDateAsString) {\n            // on page load we are defaluting the  to date with string. Comparing string with date is not possible\n            // If toDate is equal to currentDate then chagetingthe checkDate to new Date() otherwise defaulting with toDate\n            checkToDate = new Date();\n            console.log(\"Check--->2\", checkToDate);\n      \n          }\n        if (this.gateOutToDate && (this.gateOutFromDate > checkToDate)) {\n          this.gateOutToDate = '';\n        }\n         // this.gateOutToDate = '';\n         break;\n       case \"repFromDate\":\n           if(this.reportToDate && (this.reportFromDate > this.reportToDate)){\n             this.reportToDate = '';\n           }\n         // this.reportToDate = '';\n         break;\n       default:\n         break;\n     }\n    }\n  }\n  // Navigate to loadslip view\n  viewLoadslipnavigation(item) {\n    $(\"#loadslipsModal\").modal('hide');\n    let loadSlipId = item['loadlipId'];\n    let type = item.type;\n    if (this.loadSlipType == 'loadslipView') {\n      if (type == 'FGS_EXP') {\n        this.router.navigateByUrl('/load-slip-view-for-export/' + loadSlipId);\n      } else if (type == 'JIT_OEM') {\n        this.router.navigateByUrl('/load-slip-view-for-jit/' + loadSlipId);\n      } else {\n        this.router.navigateByUrl('/load-slip-view/' + loadSlipId);\n      }\n    }\n    else {\n      this.router.navigateByUrl('/load-slip-qty-view/' + loadSlipId);\n    }\n  }\n\n  // view loadslips for cooresponding shipment Id\n  viewLoadslip(shipmentNumber, view) {\n    this.isLoading = true;\n    this.loadSlipType = view;\n    this.service.get_service(ApiserviceService.apisList.openLoadslipDetails + \"?shipmentId=\" + shipmentNumber).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        if (response[\"data\"]) {\n          this.loadslipList = response[\"data\"];\n          if (this.loadslipList.length == 1) {\n            this.viewLoadslipnavigation(this.loadslipList[0]);\n          } else if (this.loadslipList.length > 1) {\n            $(\"#loadslipsModal\").modal(\"show\");\n          }\n        }\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n   //for getting category master data\n   getCategoryMasterData() {\n    this.service.get_service(ApiserviceService.apisList.categoryMasterData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.categoryList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { customMaterialModule } from '../../angular-material';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\nimport { TruckHistoryShippingComponent } from './truck-history-shipping.component';\n\nconst routes: Routes = [\n    { path: '', component: TruckHistoryShippingComponent },\n];\n\n@NgModule({\n    imports: [\n        [RouterModule.forChild(routes)],\n        CommonModule,\n        FormsModule,\n        customMaterialModule,\n        LoaderModule,\n        NgxDatatableModule,\n        CustomDatePipeModule\n    ],\n    declarations: [\n        TruckHistoryShippingComponent\n    ]\n})\n\nexport class truckHistoryShippingModule { }\n"],"sourceRoot":""}