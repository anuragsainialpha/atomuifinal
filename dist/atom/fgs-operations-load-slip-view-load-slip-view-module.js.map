{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/fgs-operations/load-slip-view/load-slip-view.component.html","webpack:///./src/app/fgs-operations/load-slip-view/load-slip-view.component.ts","webpack:///./src/app/fgs-operations/load-slip-view/load-slip-view.module.ts"],"names":[],"mappings":"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","file":"fgs-operations-load-slip-view-load-slip-view-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    Loadslip > <span>View Load Slip</span>\\n    <span class=\\\"pull-right refresh-span\\\">\\n        <!-- <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export Download\\\">\\n            <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n          </button> -->\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"locationBack()\\\" matTooltip=\\\"Back\\\">\\n        <i class=\\\"fa fa-reply\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"loadslip-fields\\\">\\n    <div class=\\\"row margin-bottom-5\\\">\\n      <div class=\\\"col-md-7\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2\\\">\\n            <div class='bordered'>\\n              <div>Source</div>\\n              <div>\\n                <b>{{userSource || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pd-0 \\\">\\n            <div class=\\\"form-group bordered\\\">\\n              <div>Destination</div>\\n              <div>\\n                <b>{{destination?destination:'--' | uppercase}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n              <div class=\\\"form-group bordered\\\">\\n                <div>Dest Desc</div>\\n                <div [title]=\\\"description\\\" [ngClass]=\\\"{'cursor-pointer':description?.length>9}\\\" >\\n                    <b>{{description ? (description?.length>9) ? (description | slice:0:9)+'..':(description) : '--'}}</b>\\n                </div>\\n              </div>\\n            </div>\\n          <div class=\\\"col-md-2 pr-0 \\\">\\n            <div class=\\\"form-group bordered\\\">\\n              <div>\\n                Truck\\n              </div>\\n              <!-- <div>\\n                <b>{{truckT?truckT:'--' }} \\n                  <span *ngIf = \\\"truckIndentCategory\\\"> &nbsp; - &nbsp;({{truckIndentCategory}})</span>\\n                </b>\\n              </div> -->\\n              <div [title]=\\\"fullTruckNumCat\\\" [ngClass]=\\\"{'cursor-pointer':fullTruckNumCat?.length>9}\\\" >\\n                <b>{{fullTruckNumCat ? (fullTruckNumCat?.length>9) ? (fullTruckNumCat | slice:0:9)+'..':(fullTruckNumCat) : '--'}}</b>\\n            </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"form-group bordered\\\">\\n              <div>Truck Type</div>\\n              <div>\\n                <b>{{truckType?truckType:'--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"form-group bordered\\\">\\n              <div>Transporter</div>\\n              <div>\\n                <b>{{transporter?transporter:'--' }}</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-5\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"form-group bordered\\\">\\n              <div>Indt Cat</div>\\n              <div>\\n                <b>{{truckIndentCategory?truckIndentCategory:'--' }}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 \\\">\\n            <div class=\\\"form-group bordered\\\">\\n              <div>\\n                Ship To\\n              </div>\\n              <div>\\n                <b>{{ShipTo?ShipTo:'--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 pl-0\\\">\\n            <div class=\\\"form-group bordered\\\">\\n              <div>Actual Truck Type</div>\\n              <div>\\n                <b>{{actualTruckType || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <div class=\\\"form-group bordered\\\">\\n              <div>Variant 1</div>\\n              <div>\\n                <b>{{variant_ONE || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <div class=\\\"form-group bordered\\\">\\n              <div>Frt Avail</div>\\n              <div>\\n                <b>{{ freightAvailableflag || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row margin-bottom-5\\\">\\n     <div class=\\\"col-md-7\\\">\\n       <div class=\\\"row\\\">\\n         <div class=\\\"col-md-5\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class='bordered'>\\n                <div>Shipment No</div>\\n                <!-- <div [title]=\\\"shipmentNumber\\\" [ngClass]=\\\"{'cursor-pointer':shipmentNumber?.length>13}\\\">\\n                    <b>{{shipmentNumber ? (((shipmentNumber?.length>13)? (shipmentNumber | slice:0:13)+'..':(shipmentNumber)) | uppercase) : '--'}}</b>\\n                  </div> -->\\n                  <b>{{shipmentNumber ? (shipmentNumber| uppercase) : '--'}}</b>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 pd-0\\\">\\n              <div class='bordered'>\\n                <div>Load Slip No </div>\\n                <div><b>{{loadslipID || '--'}}</b></div>\\n              </div>\\n            </div>\\n          </div>\\n         </div>\\n          <div class=\\\"col-md-6\\\">\\n              <div class=\\\"row text-center\\\">\\n                  <div class=\\\"col-md-3 pr-0\\\">\\n                      <div class='bordered'>\\n                        <div> Wt (Kg)</div>\\n                        <div >\\n                          <b>{{totalWeight?(totalWeight | number : '1.2-2'):0}}</b>\\n                        </div>\\n                      </div>\\n                    </div>\\n                <div class=\\\"col-md-3 pr-0\\\">\\n                      <div class='bordered'>\\n                        <div> TTE Util</div>\\n                        <div [ngClass]=\\\"(totalTTESelected > 100)?'text-danger':'color-green'\\\">\\n                          <b>{{totalTTESelected?(totalTTESelected | number : '1.2-2'):0 }}%</b>\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-md-3 pr-0\\\">\\n                      <div class='bordered'>\\n                        <div> Wt Util</div>\\n                        <div [ngClass]=\\\"(totalMaterialWeight > 100)?'text-danger':'color-green'\\\">\\n                          <b>{{totalMaterialWeight?(totalMaterialWeight | number : '1.2-2'):0}}%</b>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-md-3 \\\">\\n                      <div class='bordered'>\\n                        <div> Vol Util</div>\\n                        <div [ngClass]=\\\"(totalTruckVolume > 100)?'text-danger':'color-green'\\\">\\n                          <b>{{totalTruckVolume?(totalTruckVolume | number : '1.2-2'):0}}%</b>\\n                        </div>\\n                      </div>\\n                    </div>\\n              </div>\\n          </div>\\n            <div class=\\\"col-md-1 pd-0\\\">\\n              <div class='bordered'>\\n                <div>Tyres</div>\\n                <div>\\n                  <b>\\n                    {{totalTyres?totalTyres:0}}\\n                  </b>\\n                </div>\\n              </div>\\n            </div>\\n       </div>\\n      \\n     </div>\\n      <div class=\\\"col-md-5\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 pr-0\\\">\\n                <div class='bordered'>\\n                  <div>Tubes</div>\\n                  <div>\\n                    <b>\\n                      {{totalTubes?totalTubes:0}}\\n                    </b>\\n                  </div>\\n                </div>\\n              </div>\\n            <div class=\\\"col-md-2 pr-0\\\">\\n                <div class='bordered'>\\n                  <div>Flaps</div>\\n                  <div>\\n                    <b>\\n                      {{totalFlaps?totalFlaps:0}}\\n                    </b>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <div class='bordered'>\\n                  <div> Valves</div>\\n                  <div>\\n                    <b>\\n                      {{totalValves?totalValves:0}}\\n                    </b>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <div class='bordered'>\\n                  <div>Pctr</div>\\n                  <div><b>{{totalPctr?totalPctr:0}}</b> </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-2 pr-0\\\">\\n                <div class='bordered'>\\n                  <div>Tot Qty</div>\\n                  <div><b>{{totalQty?totalQty:0}}</b></div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-2\\\">\\n                <div class=\\\"bordered\\\">\\n                  <div>DSeq</div>\\n                  <div>\\n                    <b>{{dropSeq?dropSeq:'--'}}</b>\\n                  </div>\\n                </div>\\n              </div>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n    <div class=\\\"row margin-bottom-5\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class='bordered'>\\n              <div>Other Qty</div>\\n              <div>\\n                <b>{{otherQty?otherQty:0}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>Category</div>\\n              <div>\\n                <b>{{loadslipCategory || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>\\n                Arrived Bay\\n              </div>\\n              <!-- <div>\\n                <b> {{bayArrivedDate ? (bayArrivedDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm') : '--'}} </b>\\n              </div> -->\\n              <div [title]=\\\"bayArrivedDate\\\" [ngClass]=\\\"{'cursor-pointer':bayArrivedDate?.length>9}\\\" >\\n                <b>{{bayArrivedDate ? (bayArrivedDate?.length>9) ? (bayArrivedDate | slice:0:9)+'..':(bayArrivedDate) : '--'}}</b>\\n            </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>\\n                Print LS\\n              </div>\\n             <!--  <div>\\n                <b> {{lsPrintDate ? (lsPrintDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm') : '--'}} </b>\\n              </div> -->\\n              <div [title]=\\\"lsPrintDate\\\" [ngClass]=\\\"{'cursor-pointer':lsPrintDate?.length>9}\\\" >\\n                <b>{{lsPrintDate ? (lsPrintDate?.length>9) ? (lsPrintDate | slice:0:9)+'..':(lsPrintDate) : '--'}}</b>\\n            </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>\\n                Send Barcode\\n              </div>\\n              <!-- <div>\\n                <b> {{sendForBarcodeDate ? (sendForBarcodeDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm') : '--'}}\\n                </b>\\n              </div> -->\\n              <div [title]=\\\"sendForBarcodeDate\\\" [ngClass]=\\\"{'cursor-pointer':sendForBarcodeDate?.length>9}\\\" >\\n                <b>{{sendForBarcodeDate ? (sendForBarcodeDate?.length>9) ? (sendForBarcodeDate | slice:0:9)+'..':(sendForBarcodeDate) : '--'}}</b>\\n            </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>\\n                Loading Start\\n              </div>\\n              <!-- <div>\\n                <b> {{loadingStartDate ? (loadingStartDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm') : '--'}} </b>\\n              </div> -->\\n              <div [title]=\\\"loadingStartDate\\\" [ngClass]=\\\"{'cursor-pointer':loadingStartDate?.length>9}\\\" >\\n                <b>{{loadingStartDate ? (loadingStartDate?.length>9) ? (loadingStartDate | slice:0:9)+'..':(loadingStartDate) : '--'}}</b>\\n            </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"row\\\">\\n          \\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>\\n                Loading End\\n              </div>\\n              <!-- <div>\\n                <b> {{loadingEndDate ? (loadingEndDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm') : '--'}} </b>\\n              </div> -->\\n              <div [title]=\\\"loadingEndDate\\\" [ngClass]=\\\"{'cursor-pointer':loadingEndDate?.length>9}\\\" >\\n                <b>{{loadingEndDate ? (loadingEndDate?.length>9) ? (loadingEndDate | slice:0:9)+'..':(loadingEndDate) : '--'}}</b>\\n            </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>\\n                Conf Time\\n              </div>\\n              <!-- <div>\\n                <b> {{confirmedDate ? (confirmedDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm') : '--'}} </b>\\n              </div> -->\\n              <div [title]=\\\"confirmedDate\\\" [ngClass]=\\\"{'cursor-pointer':confirmedDate?.length>9}\\\" >\\n                <b>{{confirmedDate ? (confirmedDate?.length>9) ? (confirmedDate | slice:0:9)+'..':(confirmedDate) : '--'}}</b>\\n            </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>\\n                Release Time\\n              </div>\\n              <!-- <div>\\n                <b> {{releasedDate ? (releasedDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm') : '--'}} </b>\\n              </div> -->\\n              <div [title]=\\\"releasedDate\\\" [ngClass]=\\\"{'cursor-pointer':releasedDate?.length>9}\\\" >\\n                <b>{{releasedDate ? (releasedDate?.length>9) ? (releasedDate | slice:0:9)+'..':(releasedDate) : '--'}}</b>\\n            </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>\\n                STO/SO\\n              </div>\\n              <!-- <div>\\n                <b> {{stoso ? stoso : '--'}} </b>\\n              </div> -->\\n              <div [title]=\\\"stoso\\\" [ngClass]=\\\"{'cursor-pointer':stoso?.length>9}\\\" >\\n                <b>{{stoso ? (stoso?.length>9) ? (stoso | slice:0:9)+'..':(stoso) : '--'}}</b>\\n            </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>\\n                TTE QTY\\n              </div>\\n              <div>\\n                <b> {{tteQty ? (tteQty | number : '1.2-2') : '--'}} </b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <div class='bordered'>\\n              <div>City</div>\\n              <div [title]=\\\"city\\\" [ngClass]=\\\"{'cursor-pointer':city?.length>8}\\\">\\n                <b>{{city ? (((city?.length>8)? (city | slice:0:8)+'..':(city)) | uppercase) : '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n\\n          \\n          \\n          \\n\\n        </div>\\n        \\n      </div>\\n    </div>\\n  </div>\\n  <ngx-datatable class='material ' #table [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [rows]=\\\"invoiceData\\\"\\n    [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [scrollbarH]=\\\"horizontalScroll()\\\">\\n    <ngx-datatable-column name=\\\"STO SO Number\\\" [width]=\\\"140\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.stoSoNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Invoice Number\\\" [width]=\\\"140\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.invoieNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"GRN Number\\\" [width]=\\\"140\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.grnNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Item Id\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.itemId}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Item Description\\\" [width]=\\\"220\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.itemDesc}} </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Source\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.souceLoc}} </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Destination\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destLoc}} </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Load Slip QTY\\\" [width]=\\\"170\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.loadslipQty}} </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Invoice QTY\\\" [width]=\\\"170\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.invoiceQty}} </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"GRN QTY\\\" [width]=\\\"170\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.grnQty}} </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"DIT QTY\\\" [width]=\\\"170\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.ditQty}} </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Short QTY\\\" [width]=\\\"170\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.shotQty}} </ng-template>\\n    </ngx-datatable-column>\\n  </ngx-datatable>\\n</div>\"","import { InvoiceData } from './../../models/InvoiceData';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiserviceService } from './../../services/api/apiservice.service';\nimport { Component, OnInit } from '@angular/core';\nimport {Location} from '@angular/common';\ndeclare var $: any;\n\n\n@Component({\n  selector: 'app-load-slip-view',\n  templateUrl: './load-slip-view.component.html',\n  styles: []\n})\nexport class LoadSlipViewComponent implements OnInit {\n  isLoading: boolean = false;\n  invoiceData = new Array<InvoiceData>();\n  totalTTESelected: number;\n  totalTruckVolume: number;\n  totalTyres: number;\n  totalTubes: number;\n  totalFlaps: number;\n  totalValves: number;\n  ShipTo: string;\n  destination: string;\n  truckType: string;\n  totalMaterialWeight: number;\n  userSource: string;\n  totalPctr: number;\n  loadslipID: string;\n  bayArrivedDate: any;\n  loadingStartDate: any;\n  loadingEndDate: any;\n  confirmedDate: any;\n  releasedDate: any;\n  lsPrintDate: any;\n  totalWeight:number;\n  totalQty:any;\n  otherQty:any;\n  shipmentNumber: any;\n  bay: any;\n  totalLoadedQty: any;\n  loadslipCategory: any;\n  marketSegmentMap: any;\n  roles: any;\n  itemLevelTotalTTE: any;\n  itemLevelTotalWeight: any;\n  itemLevelTotalVolume: any;\n  sendForBarcodeDate: string;\n  dropSeq: string;\n  freightAvailableflag: string;\n  multistopTruckNumber: string;\n  variant_ONE: string;\n  actualTruckType: string;\n  truckT: string;\n  transporter: string;\n  truckIndentCategory:string;\n  fullTruckNumCat:string;\n  tteQty:any;\n  stoso:any;\n  description: any;\n  city:any;\n  constructor(\n    public service: ApiserviceService,\n    private router: Router,\n    private ActivatedRoute: ActivatedRoute,\n    private toastr: ToastrService,\n    private location: Location\n  ) {\n    this.loadslipID = this.ActivatedRoute.snapshot.params['loadslipId'];\n   }\n\n  ngOnInit() {\n    if(this.loadslipID){\n      this.getLoadslipDataById(this.loadslipID);\n    }\n  }\n\n  horizontalScroll(){\n    let width = $(window).width();\n    if(width < 1280) {\n      return true;\n    }\n    return false;\n}\n\n  getLoadslipDataById(loadSlipId){\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getInvoiceDetailsById + loadSlipId).subscribe(response => {\n      this.isLoading = false;\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        this.invoiceData = responseData.invoiceDataDtos;\n        this.userSource = responseData.loadslipDraftDto.source;\n        this.destination = responseData.loadslipDraftDto.destination;\n        this.description = responseData.loadslipDraftDto.description;\n        this.truckType = responseData.loadslipDraftDto.truckType;\n        this.truckT = responseData.loadslipDraftDto.truckNumber;\n        this.transporter = responseData.loadslipDraftDto.servprov;\n        this.ShipTo = responseData.loadslipDraftDto.shipTo;\n        this.actualTruckType = responseData.loadslipDraftDto.actualTruckType;\n        this.variant_ONE = responseData.loadslipDraftDto.variant1;\n        this.freightAvailableflag = responseData.loadslipDraftDto.freightAvailableflag;\n        this.shipmentNumber = responseData.loadslipDraftDto.shipmentID;\n        this.loadslipID = responseData.loadslipDraftDto.loadSlipId;\n        this.totalTTESelected = responseData.loadslipDraftDto.tteUtil;\n        this.totalMaterialWeight = responseData.loadslipDraftDto.weightUtil;\n        this.totalTruckVolume = responseData.loadslipDraftDto.volumeUtil;\n        this.totalTyres = responseData.loadslipDraftDto.totalTyres;\n        this.totalTubes = responseData.loadslipDraftDto.totalTubes;\n        this.totalFlaps = responseData.loadslipDraftDto.totalFlaps;\n        this.totalValves = responseData.loadslipDraftDto.totalValves;\n        this.totalPctr = responseData.loadslipDraftDto.totPctr;\n        this.dropSeq = responseData.loadslipDraftDto.dropSeq;\n        this.loadslipCategory = responseData.loadslipDraftDto.loadslipCategory;\n        this.bayArrivedDate = responseData.loadslipDraftDto.bayArrivedDate;\n        this.lsPrintDate = responseData.loadslipDraftDto.lsPrintDate;\n        this.sendForBarcodeDate = responseData.loadslipDraftDto.sendForBarcodeDate;\n        this.loadingStartDate = responseData.loadslipDraftDto.loadingStartDate;\n        this.loadingEndDate = responseData.loadslipDraftDto.loadingEndDate;\n        this.stoso = responseData.loadslipDraftDto.sostoNumberVal;\n        this.tteQty = responseData.loadslipDraftDto.totalTTE;\n        this.totalQty = responseData.loadslipDraftDto.totQty;\n        this.otherQty = responseData.loadslipDraftDto.otherQty;\n        this.releasedDate = responseData.loadslipDraftDto.releasedDate;\n        this.confirmedDate = responseData.loadslipDraftDto.confirmedDate;\n        this.truckIndentCategory = responseData.loadslipDraftDto.truckIndentCategory;\n        this.city = responseData.loadslipDraftDto.city;\n        this.totalWeight = responseData.loadslipDraftDto.totalWeight;\n\n        this.fullTruckNumCat = this.truckIndentCategory ? this.truckT + ' - ('+this.truckIndentCategory+')' : this.truckT;\n\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\")\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n\n  }\n\n  locationBack(){\n    this.location.back();\n  }\n\n    // Print Excel\n    export(): void {\n      this.isLoading = true;\n      this.service.get_service_DownLoadExcel(ApiserviceService.apisList.printLoadslip + '?loadslipId=' + this.loadslipID + '&excel=' + true).subscribe(response => {\n        if (response) {\n          // Uncomment when export excel is generated in backend\n          var blob = new Blob([response.body], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n          // var filename = 'LoadslipDetails.xlsx';\n          var filename = this.loadslipID+'.xlsx';\n          const link = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          document.body.appendChild(a);\n          a.setAttribute('style', 'display: none');\n          a.href = link;\n          a.download = filename\n          a.click();\n          window.URL.revokeObjectURL(link);\n          a.remove();\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n  \n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { customMaterialModule } from '../../angular-material';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { LoadSlipViewComponent } from './load-slip-view.component';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nconst routes: Routes = [\n  { path: '', component: LoadSlipViewComponent },\n  { path: ':loadslipId', component: LoadSlipViewComponent },\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    customMaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n    LoaderModule,\n    CustomDatePipeModule,\n    NgxDatatableModule,\n  ],\n  declarations: [\n    LoadSlipViewComponent\n  ],\n  providers:\n    [\n    ],\n})\nexport class LoadSlipViewModule { }\n"],"sourceRoot":""}