{"version":3,"sources":["webpack:///./src/app/fgs-operations/create-indent-excel-upload/create-indent-excel-upload.component.html","webpack:///./src/app/fgs-operations/create-indent-excel-upload/create-indent-excel-upload.component.scss","webpack:///./src/app/fgs-operations/create-indent-excel-upload/create-indent-excel-upload.component.ts","webpack:///./src/app/fgs-operations/create-indent-excel-upload/create-indent.module.ts"],"names":[],"mappings":"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","file":"fgs-operations-create-indent-excel-upload-create-indent-module.js","sourcesContent":["module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    <b>Create Indent > Upload Indent</b>\\n  </h6>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"create-plan\\\">\\n        <div class=\\\"uploadfile\\\">\\n          <img src=\\\"./assets/images/Upload.png\\\" alt=\\\"upload image\\\" class=\\\"img-fluid\\\" />\\n          <h5>\\n            <label for=\\\"plan-file\\\">\\n              <u>Click here</u> to Upload Files</label>\\n          </h5>\\n          <input type=\\\"file\\\" (change)=\\\"onFileChange($event)\\\" value=\\\"\\\" id=\\\"plan-file\\\" accept=\\\".xls,.xlsx\\\" (click)=\\\"itemsImportInput.value = null\\\"\\n            #itemsImportInput />\\n          <a download href=\\\"./assets/excel/Indent_template.xlsx\\\">\\n            <p>Download Indent Template</p>\\n          </a>\\n          <div class=\\\"error-log\\\" *ngIf=\\\"IsErrorLog\\\">\\n            <mat-card>\\n              <mat-list role=\\\"list\\\">\\n                <mat-list-item *ngFor=\\\"let data of ErrorData\\\">{{data}}</mat-list-item>\\n\\n              </mat-list>\\n            </mat-card>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<!--  Freight Availble or Not Show Modal After creation of Indent -->\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"freightModal\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n  \\n        <!-- Modal Header -->\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title text-center\\\">Message !!</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n  \\n        <!-- Modal body -->\\n        <div class=\\\"modal-body\\\">\\n          <p class=\\\"text-primary text-center \\\">{{responseData}}</p>\\n        </div>\\n  \\n        <!-- Modal footer -->\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        </div>\\n  \\n      </div>\\n    </div>\\n  </div>\\n  \"","module.exports = \"#freightModal p {\\n  word-break: break-all !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmdzLW9wZXJhdGlvbnMvY3JlYXRlLWluZGVudC1leGNlbC11cGxvYWQvQzpcXFVzZXJzXFxBYmhleVNvb2RcXE9uZURyaXZlIC0gQWNjZWxhbHBoYSBTb2Z0d2FyZSBQdnQuIEx0ZFxcRGVza3RvcFxcYXRvbSBhcG9sbG9cXEFwb2xsb1xcTmV3LSBBbnVyYWdcXGF0b20tdWkvc3JjXFxhcHBcXGZncy1vcGVyYXRpb25zXFxjcmVhdGUtaW5kZW50LWV4Y2VsLXVwbG9hZFxcY3JlYXRlLWluZGVudC1leGNlbC11cGxvYWQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQ0FBZ0MsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2Zncy1vcGVyYXRpb25zL2NyZWF0ZS1pbmRlbnQtZXhjZWwtdXBsb2FkL2NyZWF0ZS1pbmRlbnQtZXhjZWwtdXBsb2FkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2ZyZWlnaHRNb2RhbCBwe1xuICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbCAhaW1wb3J0YW50O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport * as XLSX from 'xlsx';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { MatDialog } from '@angular/material/dialog';\ndeclare var $: any;\n@Component({\n  selector: 'app-create-indent-excel-upload',\n  templateUrl: './create-indent-excel-upload.component.html',\n  styleUrls: ['./create-indent-excel-upload.component.scss']\n})\nexport class CreateIndentExcelUploadComponent implements OnInit {\n  ErrorData: any;\n  file: File;\n  arrayBuffer: any;\n  isLoading: boolean = false;\n  responseData = '';\n  planData = '';\n  data = [];\n  IsErrorLog: boolean = false;\n  planId: number;\n  constructor(\n    private router: Router,\n    private acitvatedRoute: ActivatedRoute,\n    private toastr: ToastrService,\n    private service: ApiserviceService,\n    public dialog: MatDialog,\n  ) { }\n\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"fgs-indents\")\n  }\n  onFileChange(event) {\n    this.isLoading = true;\n    this.IsErrorLog=false;\n    this.file = event.target.files[0];\n    let excelIndentsList = [];\n    if ((this.file['type'] == 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') || (this.file['type'] == 'application/vnd.ms-excel')) {\n      let fileReader = new FileReader();\n      fileReader.onload = (e) => {\n        this.arrayBuffer = fileReader.result;\n        var data = new Uint8Array(this.arrayBuffer);\n        var arr = new Array();\n        for (var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);\n        var bstr = arr.join(\"\");\n        var workbook = XLSX.read(bstr, { type: 'binary', cellDates: true, cellNF: false, cellText: false });\n        var first_sheet_name = workbook.SheetNames[0];\n        var worksheet = workbook.Sheets[first_sheet_name];\n        // console.log(XLSX.utils.sheet_to_json(worksheet, { raw: false }));\n        excelIndentsList = XLSX.utils.sheet_to_json(worksheet, { dateNF: \"DD/MM/YYYY\", raw: false });\n        let postData = {\n          indents: excelIndentsList\n        }\n        let ValidData = true;\n        excelIndentsList.forEach(item =>{\n          item.Count = Number(item.Count);\n            if(isNaN(item.Count) || (item.Count <=0)){\n              ValidData = false;\n            }\n        })\n        console.log(\"importedItemFileList\", excelIndentsList)\n        if(ValidData){\n          this.service.post_service(ApiserviceService.apisList.manualIndent, postData).subscribe(response => {\n            if (response['statusCode'] == 200) {\n              this.responseData = response['data'];\n              // If freight no availble we will show modal otherwise not showing\n              if (this.responseData) {\n                $('#freightModal').modal('show');\n              }\n              this.isLoading = false;\n              this.toastr.success(response['message'])\n              console.log(\"resposne\", this.responseData);\n            } else {\n              this.isLoading = false;\n              this.ErrorData = response['data'];\n              this.IsErrorLog = true\n            }\n  \n          },\n            (err) => {\n              console.log(\"Error\", err);\n              this.toastr.error(\"Something went wrong..\", \"Error!\");\n              this.isLoading = false;\n            })\n        }\n        else{\n          this.isLoading = false;\n          this.toastr.error('Please enter only Numbers/Non Zeros/Non Negative values for Count');\n        }\n        console.log(JSON.stringify(postData))\n      }\n      fileReader.readAsArrayBuffer(this.file);\n    } else {\n      this.isLoading = false;\n      this.toastr.error(\"upload only Xlsx files ..\", \"Error!\");\n    }\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { customMaterialModule } from '../../angular-material';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { CreateIndentExcelUploadComponent } from './create-indent-excel-upload.component';\n\nconst routes: Routes = [\n  { path: '', component: CreateIndentExcelUploadComponent},\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    FormsModule,\n    customMaterialModule,\n    LoaderModule,\n    NgxDatatableModule\n  ],\n  declarations: [\n    CreateIndentExcelUploadComponent\n  ],\n  entryComponents:[\n   \n  ]\n})\nexport class CreateIndentExcelUpload { }\n"],"sourceRoot":""}