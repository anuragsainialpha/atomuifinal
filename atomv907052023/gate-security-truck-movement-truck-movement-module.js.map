{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/gate-security/truck-movement/truck-movement.component.html","webpack:///./src/app/gate-security/truck-movement/truck-movement.component.ts","webpack:///./src/app/gate-security/truck-movement/truck-movement.module.ts"],"names":[],"mappings":"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","file":"gate-security-truck-movement-truck-movement-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    <b> Truck status > Truck Movement</b>\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n  <div class=\\\"manualplan-fields\\\">\\n      <form (submit)=\\\"filterTruckMovement()\\\">\\n    <div class=\\\"col-md-12 row\\\" *ngIf=\\\"isShow\\\">\\n        \\n      <div class=\\\"col-md-12 padding-right-40\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 pl-0\\\" *ngIf=\\\"service.isDPREPRole()\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Source\\\" (keyup)=\\\"getfilterSource($event)\\\" autocomplete=\\\"off\\\"\\n                [matAutocomplete]=\\\"sourceAutocomplete\\\" [(ngModel)]=\\\"sourceCode\\\" name=\\\"source\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\">\\n                <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n                  <span matTooltip={{list.value}}>{{list.value}} - ({{list.description}})</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Destination\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n                  [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\" (keyup)=\\\"getDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\"\\n                    (click)=\\\"setDestDescription(list.description)\\\"\\n                    (onSelectionChange)=\\\"setDestDescription(list.description)\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"pl-0\\\" [ngClass]=\\\"(service.isDPREPRole())?'col-md-1':'col-md-2'\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"destinationDesc\\\"\\n                  [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destinationDesc\\\"\\n                  (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                    (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                    <span>({{list.description}})</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"pl-0 col-md-1\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Truck\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"truckNumber\\\" name=\\\"truckNumber\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Truck/Container Type\\\" [(ngModel)]=\\\"truckType\\\" name=\\\"trcktype\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let truck of truckList\\\" [value]=\\\"truck.value\\\"> {{truck.value}} </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput aria-label=\\\"Transporter\\\" placeholder=\\\"Transporter\\\"\\n                  (keyup)=\\\"getfilterTransporter($event)\\\" autocomplete=\\\"off\\\" [matAutocomplete]=\\\"transporterAutocomplete\\\"\\n                  [(ngModel)]=\\\"transporter\\\" name=\\\"transporter\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #transporterAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of transporterList\\\" [value]=\\\"list.value\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1  pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Container\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"container\\\" name=\\\"container\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1  pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Material Code\\\" autocomplete=\\\"off\\\" aria-label=\\\"Material Code\\\"\\n                  [matAutocomplete]=\\\"materialCodeAutocomplete\\\" [(ngModel)]=\\\"materialCode\\\" name=\\\"materialCode\\\"\\n                  (keyup)=\\\"filterMaterialCode($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #materialCodeAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of materilcodelist\\\" [value]=\\\"list.value\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1  pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"MKT Segment\\\" [(ngModel)]=\\\"mktsegment\\\" name=\\\"mktsegment\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let mktsegment of mktsegmentList\\\" [value]=\\\"mktsegment\\\">\\n                    {{mktsegment}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Type\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"stopType\\\" name=\\\"type\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"loadslipstatustype\\\" name=\\\"status\\\" multiple>\\n                <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                <mat-option *ngFor=\\\"let item of statusList\\\" [value]=\\\"item\\\"> {{item}} </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Bay Status\\\" [(ngModel)]=\\\"bayStatus\\\" name=\\\"bayStatus\\\" multiple>\\n                <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                <mat-option *ngFor=\\\"let item of baystatusList\\\" [value]=\\\"item\\\"> {{item}} </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"pull-right\\\">\\n          <div class=\\\"search-fileds\\\">\\n            <button class=\\\"theme-small-button\\\" type=\\\"submit\\\"  matTooltip=\\\"Search\\\">\\n              <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n            <button class=\\\"theme-delete-button\\\" type=\\\"button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear\\\">\\n              <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n            </button>\\n          </div>\\n        </div>\\n      <div class=\\\"col-md-12 padding-right-40\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Load Slip Id\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"loadSlipId\\\"\\n                  name=\\\"loadslipID\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Shipment Id\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"shipmentId\\\" name=\\\"shipmentId\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Indent Id\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"indentID\\\" name=\\\"indentID\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <mat-form-field>\\n              <input matInput aria-label=\\\"Country of Destination\\\" placeholder=\\\"Country of Destination\\\"\\n                (keyup)=\\\"countryOfDestinationFilter($event,'destCountrySearch')\\\" autocomplete=\\\"off\\\"\\n                [matAutocomplete]=\\\"dischargeAutocomplete\\\" [(ngModel)]=\\\"destCountryName\\\" name=\\\"destCountryName\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              <mat-autocomplete #dischargeAutocomplete=\\\"matAutocomplete\\\">\\n                <mat-option *ngFor=\\\"let country of countryList\\\" [value]=\\\"country.description\\\">\\n                  <span matTooltip={{country.description}}>{{country.value}} - ({{country.description}})</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Invoice\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"invoice\\\" name=\\\"Invoice\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput [min]=\\\"minDate\\\" placeholder=\\\"Rep From Date\\\" disabled\\n                  [matDatepicker]=\\\"reportFromDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"reportFromDate\\\"\\n                  (dateChange)=\\\"addEvent('repFromDate', $event)\\\" name=\\\"reportfromDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"reportFromDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #reportFromDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput [min]=\\\"reportFromDate\\\" placeholder=\\\"Rep To Date\\\" disabled\\n                  [matDatepicker]=\\\"reportToDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"reportToDate\\\"\\n                  name=\\\"reportToDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"reportToDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #reportToDatePicker [disabled]=\\\"!reportFromDate\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput [min]=\\\"minDate\\\" placeholder=\\\"Gate In From Date\\\" disabled\\n                  [matDatepicker]=\\\"gateInFromDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateInFromDate\\\"\\n                  (dateChange)=\\\"addEvent('gateInDate', $event)\\\" name=\\\"gateInToDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"gateInFromDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #gateInFromDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <mat-form-field>\\n              <input matInput [min]=\\\"gateInFromDate\\\" placeholder=\\\"Gate In To Date\\\" disabled\\n                [matDatepicker]=\\\"gateInToDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateInToDate\\\" name=\\\"gateInToDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"gateInToDatePicker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #gateInToDatePicker [disabled]=\\\"!gateInFromDate\\\"></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput [min]=\\\"minDate\\\" placeholder=\\\"Gate Out From Date\\\" disabled\\n                  [matDatepicker]=\\\"gateOutFromDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateOutFromDate\\\"\\n                  (dateChange)=\\\"addEvent('gateOutDate', $event)\\\" name=\\\"gateoutFromDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"gateOutFromDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #gateOutFromDatePicker disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1\\\">\\n            <mat-form-field>\\n              <input matInput [min]=\\\"gateOutFromDate\\\" placeholder=\\\"Gate Out To Date\\\" disabled\\n                [matDatepicker]=\\\"gateOutToDatePicker\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"gateOutToDate\\\"\\n                name=\\\"gateoutToDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"gateOutToDatePicker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #gateOutToDatePicker [disabled]=\\\"!gateOutFromDate\\\"></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n         \\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"Rejection\\\" [(ngModel)]=\\\"rejection\\\" name=\\\"rejection\\\" multiple>\\n                <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                <mat-option *ngFor=\\\"let item of rejectionList\\\" [value]=\\\"item\\\"> {{item}} </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Ind Cat\\\" [(ngModel)]=\\\"materialGrp\\\" name=\\\"materialGrp\\\" multiple>\\n                  <mat-option *ngFor=\\\"let category of categoryList\\\" [value]=\\\"category\\\">{{category}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"pr-0 col-md-1\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Insert User\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"insertUser\\\" name=\\\"insertUser\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n     \\n    </div>\\n  </form>\\n  </div>\\n  <div class=\\\"clearfix\\\"></div>\\n  <ngx-datatable #table class='material ngx-table-custom-scroll  ngx-table-tr-custom-scroll' #table\\n    [rows]='truckMovementData' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\"\\n    [externalPaging]=\\\"true\\\" [scrollbarH]=\\\"true\\\" [limit]=\\\"page.limit\\\" (page)=\\\"datatablePageData($event)\\\"\\n    [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\">\\n    <ngx-datatable-column name=\\\"Source\\\" [width]=\\\"70\\\" [frozenLeft]=\\\"true\\\" [resizeable]=\\\"false\\\" prop=\\\"sourceLoc\\\"\\n      [sortable]=\\\"true\\\" [frozenLeft]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sourceLoc}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Report Location\\\" [width]=\\\"70\\\" [frozenLeft]=\\\"true\\\" [resizeable]=\\\"false\\\"\\n      prop=\\\"reportingLoc\\\" [sortable]=\\\"true\\\" [frozenLeft]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.reportingLoc}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Indent Id\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" prop=\\\"indentId\\\"\\n      [sortable]=\\\"true\\\" [frozenLeft]=\\\"freezeLeftValue\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.indentId}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Transporter Code\\\" [width]=\\\"70\\\" [frozenLeft]=\\\"true\\\" [resizeable]=\\\"false\\\"\\n      prop=\\\"transporterSapCode\\\" [sortable]=\\\"true\\\" [frozenLeft]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.transporterSapCode}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Transporter\\\" [width]=\\\"70\\\" [frozenLeft]=\\\"true\\\" [resizeable]=\\\"false\\\" prop=\\\"servprov\\\"\\n      [sortable]=\\\"true\\\" [frozenLeft]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.servprov}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Truck Number\\\" [width]=\\\"120\\\" [frozenLeft]=\\\"true\\\" [resizeable]=\\\"false\\\" prop=\\\"truckNumber\\\"\\n      [sortable]=\\\"true\\\" [frozenLeft]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.truckNumber}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Container\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"containerNum\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.containerNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Load Slip Id\\\" [width]=\\\"170\\\" [resizeable]=\\\"false\\\" prop=\\\"loadslipId\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.loadslipId}}\\n        <!-- <a (click)=\\\"viewDraftLoadSlipData(row)\\\">{{row.loadslipId}}</a> -->\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Shipment ID\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" prop=\\\"shipmentId\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.shipmentId}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Dest\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"destLoc\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destLoc}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Dest Description\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"destDis\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destDis}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Truck/Cont Type\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"truckType\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.truckType}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Actual TruckType\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"truckType\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.actualTruckType}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Order Type\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"type\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.type || '--'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"MKT Seg\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" prop=\\\"marketSegment\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.marketSegment}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"LS Cat\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" prop=\\\"itemCategory\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.itemCategory}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Freight Avail\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"transhipment\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.isFreightAvailable}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Transhipment\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"transhipment\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.transhipment}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Driver Name\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"driverName\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.driverName}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Driver Mobile\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"driverMobile\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.driverMobile}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Driver License\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"driverLicense\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.driverLicense}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Indent Creation Date\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"indentCreationDate\\\"\\n    [sortable]=\\\"true\\\">\\n    <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n      {{row.indentCreationDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n    </ng-template>\\n  </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"ReportDate\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"reportDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.reportDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"GateInDate\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"gateInDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.gateInDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Arrived Bay\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"bayArrivedDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.bayArrivedDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Print LS\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"lsPrintDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.lsPrintDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Send For Barcode\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"sendForBarcodeDate\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sendForBarcodeDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Loading Start\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"loadingStartDate\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.loadingStartDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Loading End\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"loadingEndDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.loadingEndDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Confirm\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"confirmedDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.confirmedDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Release\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"releaseDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.releaseDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"GateOutDate\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"gateOutDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.gateOutDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Bay Status\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"bayStatus\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.bayStatus}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Loadslip Status\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"loadslipStatus\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.loadslipStatus}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Truck Status\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"status\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.status}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"TAT (Rep-Gate Out)(Hrs)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"repGoHrs\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.repGoHrs}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"TAT2(Gate In-Gate Out)(Hrs)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"giGoHrs\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.giGoHrs}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"TAT3(Gate In-Release)(Hrs)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"giRelHrs\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.giRelHrs}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"TAT4(Loading-Release)(Hrs)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"loRelHrs\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.loRelHrs}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"TAT-5(Release-Gate Out)(Hrs)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"relGoHrs\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.relGoHrs}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <!-- <ngx-datatable-column name=\\\"TAT (FGS Call-Release)(Hrs)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"callRelHrs\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.callRelHrs}}\\n      </ng-template>\\n    </ngx-datatable-column> -->\\n    <ngx-datatable-column name=\\\"TAT6 (Rep-Gate In)(Hrs)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"repGiHrs\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.repGiHrs}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"STO/SO\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"stoSoNum\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.stoSoNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Delivery\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"delivery\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.delivery}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Invoice\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"sapInvoice\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvoice}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Invoice Dt.\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"sapInvoiceDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvoiceDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"LR\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"lrNum\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.lrNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"LR Date\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"lrDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.lrDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Indent Cat\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"lrDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.indentCategory}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tyre\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"totTyres\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totTyres}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Tube\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"totTubes\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totTubes}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Flap\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"totFlaps\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totFlaps}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Valve\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"totValve\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totValve}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"PCTR\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"pctr\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totPctr}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Other Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"otherQty\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.otherQty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Total Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"totQty\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totQty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"TTE Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"tteQty\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.tteQty | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"TTE Util\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"tteUtil\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.tteUtil | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Wt Util\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"weightUtil\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.weightUtil | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Vol Util\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"volumeUtil\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.volumeUtil | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"In Weight(Kg)\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"inWeight\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.inWeight}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Out Weight(Kg)\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"outWeight\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.outWeight}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Net Weight(Kg)\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"netWeight\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.netWeight}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SAP invoice weight(Kg)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvWeight}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Weight Diff (Kg)\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"diffInvWeight\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <span [ngClass]=\\\"(row.weightDiffStatus)?'text-danger':''\\\">{{row.diffInvWeight}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SAP invoice value(INR)\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvValue}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Eway bill No\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"ewayBillNo\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.ewayBillNo}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Reporting Date At Dest\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"reportingDateAtDest\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.reportingDateAtDest | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Unloading Date At Dest\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"unloadingDateAtDest\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.unloadingDateAtDest | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Std TT\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"stdTT\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.stdTT}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Delayed Days\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"delayedDays\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.delayedDays}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"GRN\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"grn\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.grn}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"GRN Date\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" prop=\\\"grnDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.grnDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"DIT_QTY\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"ditQty\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.ditQty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"SHORTAGE_QTY\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" prop=\\\"shortQty\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.shortQty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"DSeq\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\" prop=\\\"dropSeq\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.dropSeq}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Loadslip Comments\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"comments\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <div class=\\\"edit-field\\\" [title]=\\\"row.loadslipcomments\\\"\\n          [ngClass]=\\\"{'cursor-pointer':row.loadslipComments?.length>9}\\\"\\n          (click)=\\\"showIntegrationMessage(row,'loadslipcomments')\\\" *ngIf=\\\"(row.loadslipcomments)\\\">\\n          {{(row.loadslipcomments?.length>9)?(row.loadslipcomments | slice:0:9)+'..':(row.loadslipcomments)}}\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Gate Comments\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"comments\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <div class=\\\"edit-field\\\" [title]=\\\"row.comments\\\" [ngClass]=\\\"{'cursor-pointer':row.comments?.length>9}\\\"\\n          (click)=\\\"showIntegrationMessage(row,'comments')\\\" *ngIf=\\\"(row.comments)\\\">\\n          {{(row.comments?.length>9)?(row.comments | slice:0:9)+ '..':(row.comments)}}\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Rejection\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"rejectionStatus\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.rejectionStatus}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Rejection Desc\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"rejectionDesc\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.rejectionDesc}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"insertUser\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.insertUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Update User\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"updateUser\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.updateUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Type\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\" prop=\\\"stopType\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.stopType || '--'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Loadslip Creation Date\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" prop=\\\"createdDate\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.createdDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Country of Destination\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"destCountryName\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.destCountryName}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Total Loaded\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" prop=\\\"qty\\\" [sortable]=\\\"true\\\"\\n      [flexGrow]=\\\"1\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.qty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Integration Status\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" prop=\\\"integrationStatus\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.integrationStatus}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Integration Msg\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" prop=\\\"integrationMsg\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <div class=\\\"edit-field\\\" [title]=\\\"row.integrationMsg\\\" [ngClass]=\\\"{'cursor-pointer':row.integrationMsg?.length>9}\\\"\\n          (click)=\\\"showIntegrationMessage(row,'integrationMsg')\\\" *ngIf=\\\"(row.integrationMsg)\\\">\\n          {{(row.integrationMsg?.length>9)?(row.integrationMsg | slice:0:9)+'..':(row.integrationMsg)}}\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"FT TRIP ID\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"ftTripId\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.ftTripId}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Cust Inv Num\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"custInvNum\\\" [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.customInvNumber}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <!-- <ngx-datatable-column name=\\\"MKT Seg\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"marketSegment\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.marketSegment}}\\n      </ng-template>\\n    </ngx-datatable-column> -->\\n    <!-- Footer Template starts -->\\n    <ngx-datatable-footer>\\n      <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n        let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n        <div class=\\\"page-count\\\">\\n          <span *ngIf=\\\"selectedCount\\\">\\n            {{selectedCount.toLocaleString()}} Selected |\\n          </span>\\n          Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n          (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n          {{(rowCount)}} records.\\n        </div>\\n        <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n          [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\"\\n          [size]=\\\"pageSize\\\" [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n          (change)=\\\"table.onFooterPage($event)\\\">\\n        </datatable-pager>\\n      </ng-template>\\n    </ngx-datatable-footer>\\n    <!-- Footer Template Ends -->\\n  </ngx-datatable>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"integrationMsgModal\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"msgType == 'integrationMsg'\\\">Message !!!</h4>\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"msgType == 'comments'\\\">Comments !!!</h4>\\n        <h4 class=\\\"modal-title\\\" *ngIf=\\\"msgType == 'loadslipcomments'\\\">Loadslip Comments !!!</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p [ngClass]=\\\"{'text-center text-danger': msgType == 'integrationMsg'}\\\">{{integrationMsg}}</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <!-- <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"saveComments()\\\">Save</button> -->\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, DoCheck } from '@angular/core';\nimport { ApiserviceService } from 'src/app/services/api/apiservice.service';\nimport { constants } from 'src/app/constants';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport * as  moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/public/date.adapters';\nimport { HelperServiceService } from 'src/app/services/helper-service/helper-service.service';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\ndeclare var $: any;\n@Component({\n  selector: 'app-truck-movement',\n  templateUrl: './truck-movement.component.html',\n  styles: [],\n  providers: [\n    {\n      provide: DateAdapter, useClass: AppDateAdapter\n    },\n    {\n      provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS\n    }\n  ]\n})\nexport class TruckMovementComponent implements OnInit, DoCheck {\n  // rejectionList = [\"NORMAL\", \"REJECTED\"];\n  check_Role_DP_REP: string;\n  isLoading: boolean;\n  page = {\n    limit: 10,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n  truckMovementData = [];\n  roles: any;\n  msgType: any;\n  integrationMsg: any;\n  destination: any;\n  invoice: any;\n  materialCode: any;\n  loadSlipId: any;\n  truckType: any;\n  type: any;\n  statusList = [\n    \"GATED_IN\",\n    \"REPORTED\",\n    \"ASSIGN_LS\",\n    \"LOADING\",\n    \"LOADED\",\n    \"UNLOADING\",\n    \"DELIVERED\",\n    \"INTRANSIT\",\n    \"COMPLETED\"\n  ];\n  gateInFromDate: string;\n  gateInToDate: string;\n  gateOutFromDate: string;\n  gateOutToDate: string;\n  reportFromDate: string;\n  reportToDate: string;\n  loadslipstatustype: any;\n  truckNumber: any;\n  container: any;\n  sourceCode: any;\n  destinationDesc: string;\n  destinationList: any[];\n  descriptionList: any[];\n  shipmentId: string;\n  stopType: string;\n  mktsegment=[];\n  sourceList: any[];\n  materilcodelist: any[];\n  isShow: boolean = true;\n  truckList: any;\n  mktsegmentList = [];\n  baystatusList = [];\n  bayStatus: any;\n  transporterList: any[];\n  countryList: any[];\n  transporter: any;\n  destCountryName: any;\n  indentID: any;\n  categoryList = [];\n  materialGrp = [];\n  currentDateAsString = this.helperService.getTodayDateASString();\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  rejection: any;\n  rejectionList: string[];\n  freezeLeftValue: boolean = true;\n  insertUser = '';\n  constructor(\n    private service: ApiserviceService,\n    private toastr: ToastrService,\n    private router: Router,\n    private helperService: HelperServiceService,\n  ) { }\n  ngDoCheck(){\n    let width = $(window).width();\n    if(width < 1024) {\n      this.freezeLeftValue = false;\n    }\n    else {\n      this.freezeLeftValue = true;\n    }\n  }\n  ngOnInit() {\n    this.roles = constants.roles;\n    //Activation of Tabs\n    if (this.service.checkRole() == this.roles.rdc_PLN || (this.service.checkRole() == this.roles.JIT_OPERATION)) {\n      localStorage.setItem(\"userMenu\", \"RDC-GAT-REPORT\");\n    } else if ((this.service.checkRole() == this.roles.gateSecurity) || (this.service.checkRole() == this.roles.rdc_GAT) ||\n      (this.service.checkRole() == this.roles.JIT_GATE_SECURITY)) {\n      localStorage.setItem(\"userMenu\", \"GAT-TRUCK-MOVEMENT\");\n    } else {\n      localStorage.setItem(\"userMenu\", \"fgs-truck-status\");\n    }\n    this.baystatusList = constants.bayStatusList;\n    this.rejectionList = constants.rejectionList;\n    this.check_Role_DP_REP = this.service.checkRole();\n    this.getTruckTypeMasterData();\n    this.reportFromDate = this.currentDateAsString;\n    this.reportToDate = this.reportFromDate;\n    let data = {\n      \"statusList\": this.statusList,\n      // Report Dates\n      \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n      \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : ''\n    }\n    this.truckMovementApiSerivce(data);\n    this.getMarketSegment();\n    this.getCategoryMasterData();\n  }\n\n\n  truckMovementApiSerivce(data) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.truckMovement, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.truckMovementData = response['data'].trucksMetaDatas;\n        this.truckMovementData = [...this.truckMovementData];\n        this.page.count = response['data'].total;\n        this.page.limit = response['data'].pageLength;\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went Wrong\", \"! Error\");\n      }\n    }, (err) => {\n      this.isLoading = false;\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    })\n  }\n\n\n  getMarketSegment() {\n    this.service.get_service(ApiserviceService.apisList.getMarketSegment).subscribe(response => {\n      if (response['statusCode'] == '200') {\n        this.mktsegmentList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Some Thing Went Wrong !!!')\n      }\n    })\n  }\n\n\n  //set value destination\n  setDestination(value) {\n    //  this.destinationDesc = value;\n    this.destination = value;\n  }\n\n  //set value to destination description\n  setDestDescription(value) {\n    this.destinationDesc = value;\n  }\n  // for getting truck type master\n  getTruckTypeMasterData() {\n    this.service.get_service(ApiserviceService.apisList.truckTypeMasterData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.truckList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    });\n  }\n\n  //show the filter\n  showFilter() {\n    this.isShow = !this.isShow\n  }\n\n  addEvent(type, event) {\n    console.log(event.target.value);\n    if (event.target.value) {\n      switch (type) {\n        /* Checking if selected from date greater than to date.\n     Clearing the toDate field when from date greater than to date */\n       case \"gateInDate\":\n           if(this.gateInToDate && (this.gateInFromDate > this.gateInToDate)){\n             this.gateInToDate = '';\n           }\n         // this.gateInToDate = '';\n         break;\n       case \"gateOutDate\":\n           if(this.gateOutToDate && (this.gateOutFromDate > this.gateOutToDate)){\n             this.gateOutToDate = '';\n           }\n         // this.gateOutToDate = '';\n         break;\n       case \"repFromDate\":\n          let checkToDate: any = this.reportToDate;\n          console.log(\"Check--->1\", checkToDate);\n          if (this.reportToDate == this.currentDateAsString) {\n            // on page load we are defaluting the  to date with string. Comparing string with date is not possible\n            // If toDate is equal to currentDate then chagetingthe checkDate to new Date() otherwise defaulting with toDate\n            checkToDate = new Date();\n            console.log(\"Check--->2\", checkToDate);\n      \n          }\n        if (this.reportToDate && (this.reportFromDate > checkToDate)) {\n          this.reportToDate = '';\n        }\n         // this.reportToDate = '';\n         break;\n       default:\n         break;\n     }\n    }\n  }\n\n\n  refreshData() {\n    this.table.offset = 0;\n    this.clearAll();\n    this.currentDateAsString = this.helperService.getTodayDateASString();\n    this.reportFromDate = this.currentDateAsString;\n    this.reportToDate = this.reportFromDate;\n    let bodyData = {\n      \"statusList\": this.statusList,\n      // Report Dates\n      \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n      \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : ''\n    }\n    this.truckMovementApiSerivce(bodyData);\n  }\n  //server side pagination\n  datatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n    let data = {\n      'index': pageInfo.offset,\n      'pageLength': pageInfo.pageSize,\n      'destination': this.destination,\n      'invoice': this.invoice,\n      'itemId': this.materialCode,\n      'loadslipId': this.loadSlipId,\n      'truckType': this.truckType,\n      \"transporter\": this.transporter,\n      \"destCountry\": obj ? (obj.value) : '',\n      \"type\": this.type,\n      'statuses': this.loadslipstatustype,\n      \"statusList\": this.statusList,\n      \"truckNumber\": this.truckNumber,\n      \"containerNum\": this.container,\n      \"source\": this.sourceCode,\n      \"bayStatus\": this.bayStatus,\n      \"marketSegment\": this.mktsegment,\n      \"shipmentID\": this.shipmentId,\n      \"stopType\": this.stopType,\n      // Gate In Dates\n      \"fromGateInDate\": this.gateInFromDate ? (moment(this.gateInFromDate).format('DD/MM/YYYY')) : '',\n      \"toGateInDate\": this.gateInToDate ? (moment(this.gateInToDate).format('DD/MM/YYYY')) : '',\n      // Gate Out Dates\n      \"fromGateOutDate\": this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n      \"toGateOutDate\": this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n      // Report Dates\n      \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n      \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : '',\n      \"rejection\": this.rejection,\n      \"indentCategoryList\": this.materialGrp,\n      \"insertUser\": this.insertUser\n    }\n    this.truckMovementApiSerivce(data);\n\n  }\n\n  clearAll() {\n    this.gateInFromDate = '';\n    this.gateInToDate = '';\n    this.gateOutFromDate = '';\n    this.gateOutToDate = '';\n    this.reportFromDate = '';\n    this.reportToDate = '';\n    this.destination = '';\n    this.destinationDesc = '';\n    this.destinationList = [];\n    this.descriptionList = [];\n    this.invoice = '';\n    this.materialCode = '';\n    this.loadSlipId = '';\n    this.shipmentId = '';\n    this.truckType =[];\n    this.stopType = '';\n    this.loadslipstatustype = [];\n    this.mktsegment = [];\n    this.container = \"\";\n    this.truckNumber = \"\";\n    this.sourceCode = '';\n    this.sourceList = [];\n    this.bayStatus = [];\n    this.transporter = '';\n    this.transporterList = [];\n    this.countryList = [];\n    this.destCountryName = '';\n    this.indentID = '';\n    this.rejection = [];\n    this.materialGrp = [];\n    this.insertUser = '';\n  }\n\n  showIntegrationMessage(rowdata, type) {\n    this.msgType = type;\n    if (type == 'integrationMsg') {\n      this.integrationMsg = rowdata.integrationMsg;\n    } else if (type == 'comments') {\n      this.integrationMsg = rowdata.comments;\n    } else {\n      this.integrationMsg = rowdata.loadslipcomments;\n    }\n    $('#integrationMsgModal').modal('show');\n  }\n\n  // Filter source location\n  getfilterSource(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.sourceList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        console.log(\"respio\", response)\n        this.sourceList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n  // get destaination list on search\n  getDestinationList(event) {\n    this.destinationDesc = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.destinationList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        this.destinationList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // filter Transporter details\n  getfilterTransporter(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.transporterList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?transporter=' + filtervalue).subscribe(response => {\n        this.transporterList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //get filter destination result\n  countryOfDestinationFilter(event, type) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?' + type + '=' + filtervalue).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.countryList = [];\n          this.countryList = response['data'].searchResult;\n          this.isLoading = false;\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        }\n\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n  getUserDestinationList(event) {\n    this.destination = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.getDestinationDescriptionDataList + event.target.value).subscribe(response => {\n        if (response['data']) {\n          this.descriptionList = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //filter material code \n  filterMaterialCode(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.materilcodelist = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?materialCode=' + filtervalue).subscribe(response => {\n        this.materilcodelist = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n\n  filterTruckMovement() {\n    this.table.offset = 0;\n    let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n    let bodyData = {\n      'destination': this.destination,\n      'invoice': this.invoice,\n      'itemId': this.materialCode,\n      'loadslipId': this.loadSlipId,\n      'truckType': this.truckType,\n      \"transporter\": this.transporter,\n      \"destCountry\": obj ? (obj.value) : '',\n      \"type\": this.type,\n      'statuses': this.loadslipstatustype,\n      \"statusList\": this.statusList,\n      \"truckNumber\": this.truckNumber,\n      \"containerNum\": this.container,\n      \"source\": this.sourceCode,\n      \"bayStatus\": this.bayStatus,\n      \"marketSegment\": this.mktsegment,\n      \"shipmentID\": this.shipmentId,\n      \"stopType\": this.stopType,\n      \"indentID\": this.indentID,\n      // Gate In Dates\n      \"fromGateInDate\": this.gateInFromDate ? (moment(this.gateInFromDate).format('DD/MM/YYYY')) : '',\n      \"toGateInDate\": this.gateInToDate ? (moment(this.gateInToDate).format('DD/MM/YYYY')) : '',\n      // Gate Out Dates\n      \"fromGateOutDate\": this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n      \"toGateOutDate\": this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n      // Report Dates\n      \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n      \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : '',\n      \"rejection\": this.rejection,\n      \"indentCategoryList\": this.materialGrp,\n      \"insertUser\" : this.insertUser\n    }\n    if (this.helperService.getDateValidations(this.gateInFromDate, this.gateInToDate, this.gateOutFromDate, this.gateOutToDate, this.reportFromDate, this.reportToDate)) {\n      this.truckMovementApiSerivce(bodyData);\n    } else {\n      this.isLoading = false;\n    }\n\n  }\n  onFooterPage(pageInfo){\n    console.log(pageInfo);\n    \n  }\n\n  export() {\n    if (this.truckMovementData.length > 0) {\n      this.isLoading = true;\n      let obj = this.countryList ? (this.countryList.find(a => a.description == this.destCountryName)) : {};\n      let data = {\n        'marketSegment': this.mktsegment,\n        'invoice': this.invoice,\n        'loadslipId': this.loadSlipId,\n        'stopType': this.stopType,\n        'shipmentID': this.shipmentId,\n        'truckType': this.truckType,\n        \"transporter\": this.transporter,\n        \"destCountry\": obj ? (obj.value) : '',\n        'type': this.type,\n        'itemId': this.materialCode,\n        'statuses': this.loadslipstatustype,\n        \"statusList\": this.statusList,\n        \"destination\": this.destination,\n        \"truckNumber\": this.truckNumber,\n        \"containerNum\": this.container,\n        \"source\": this.sourceCode,\n        \"bayStatus\": this.bayStatus,\n        'pageLength': this.page.count,\n        \"indentID\": this.indentID,\n\n        // Gate In Dates\n        \"fromGateInDate\": this.gateInFromDate ? (moment(this.gateInFromDate).format('DD/MM/YYYY')) : '',\n        \"toGateInDate\": this.gateInToDate ? (moment(this.gateInToDate).format('DD/MM/YYYY')) : '',\n        // Gate Out Dates\n        \"fromGateOutDate\": this.gateOutFromDate ? (moment(this.gateOutFromDate).format('DD/MM/YYYY')) : '',\n        \"toGateOutDate\": this.gateOutToDate ? (moment(this.gateOutToDate).format('DD/MM/YYYY')) : '',\n        // Report Dates\n        \"fromReportDate\": this.reportFromDate ? (moment(this.reportFromDate).format('DD/MM/YYYY')) : '',\n        \"toReportDate\": this.reportToDate ? (moment(this.reportToDate).format('DD/MM/YYYY')) : '',\n        \"rejection\": this.rejection,\n        \"indentCategoryList\": this.materialGrp,\n        \"insertUser\": this.insertUser\n      }\n      this.service.post_service(ApiserviceService.apisList.truckMovement, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          let newtruckMovementData = response['data'].trucksMetaDatas;\n          let excelRawData = newtruckMovementData;\n          let newExcelData = [];\n          for (let i = 0; i < excelRawData.length; i++) {\n            let data = {\n              \"Source\": excelRawData[i].sourceLoc,\n              \"Report Location\": excelRawData[i].reportingLoc,\n              \"Indent Id\": excelRawData[i].indentId,\n              \"Transporter Code\": excelRawData[i].transporterSapCode,\n              \"Transporter\": excelRawData[i].servprov,\n              \"Truck Number\": excelRawData[i].truckNumber,\n              \"Container\": excelRawData[i].containerNum,\n              \"Load Slip Id\": excelRawData[i].loadslipId,\n              \"Shipment ID\": excelRawData[i].shipmentId,\n              \"Dest\": excelRawData[i].destLoc,\n              \"Dest Description\": excelRawData[i].destDis,\n              \"Truck/Cont Type\": excelRawData[i].truckType,\n              \"Actual TruckType\": excelRawData[i].actualTruckType,\n              \"Order Type\": excelRawData[i].type,\n              \"MKT Seg\": excelRawData[i].marketSegment,\n              \"Category\":excelRawData[i].itemCategory,\n              \"Freight Avail\": excelRawData[i].isFreightAvailable,\n              \"Transhipment\": excelRawData[i].transhipment,\n              \"Driver Name\": excelRawData[i].driverName,\n              \"Driver Mobile\": excelRawData[i].driverMobile,\n              \"Driver License\": excelRawData[i].driverLicense,\n              \"Indent Creation Date\": excelRawData[i].indentCreationDate,\n              \"ReportDate\": this.service.customDateTimeFormat(excelRawData[i].reportDate),\n              \"GateInDate\": this.service.customDateTimeFormat(excelRawData[i].gateInDate),\n              \"Arrived Bay\": this.service.customDateTimeFormat(excelRawData[i].bayArrivedDate),\n              \"Print LS\": this.service.customDateTimeFormat(excelRawData[i].lsPrintDate),\n              \"Send For Barcode\": this.service.customDateTimeFormat(excelRawData[i].sendForBarcodeDate),\n              \"Loading Start\": this.service.customDateTimeFormat(excelRawData[i].loadingStartDate),\n              \"Loading End\": this.service.customDateTimeFormat(excelRawData[i].loadingEndDate),\n              \"Confirm\": this.service.customDateTimeFormat(excelRawData[i].confirmedDate),\n              \"Release\": this.service.customDateTimeFormat(excelRawData[i].releaseDate),\n              \"GateOutDate\": this.service.customDateTimeFormat(excelRawData[i].gateOutDate),\n              \"Bay Status\": excelRawData[i].bayStatus,\n              \"Loadslip Status\": excelRawData[i].loadslipStatus,\n              \"Truck Status\": excelRawData[i].status,\n              \"TAT (Rep-Gate Out)(Hrs)\": excelRawData[i].repGoHrs,\n              \"TAT2(Gate In-Gate Out)(Hrs)\": excelRawData[i].giGoHrs,\n              \"TAT3(Gate In-Release)(Hrs)\": excelRawData[i].giRelHrs,\n              \"TAT4(Loading-Release)(Hrs)\": excelRawData[i].loRelHrs,\n              \"TAT-5(Release-Gate Out)(Hrs)\": excelRawData[i].relGoHrs,\n              // \"TAT (FGS Call-Release)\": excelRawData[i].callRelHrs,\n              \"TAT6 (Rep-Gate In)(Hrs)\": excelRawData[i].repGiHrs,\n              \"STO/SO\": excelRawData[i].stoSoNum,\n              \"Delivery\": excelRawData[i].delivery,\n              \"Invoice\": excelRawData[i].sapInvoice,\n              \"Invoice Date\": this.service.customDateTimeFormat(excelRawData[i].sapInvoiceDate),\n              \"LR\": excelRawData[i].lrNum,\n              \"LR Date\": this.service.customDateTimeFormat(excelRawData[i].lrDate),\n              \"Indent Cat\": excelRawData[i].indentCategory,\n              \"Tyre\": +excelRawData[i].totTyres,\n              \"Tube\": +excelRawData[i].totTubes,\n              \"Flap\": +excelRawData[i].totFlaps,\n              \"Valve\": +excelRawData[i].totValve,\n              \"PCTR\": (excelRawData[i].totPctr) ? (+excelRawData[i].totPctr) : 0,\n              \"Other Qty\": +excelRawData[i].otherQty,\n              \"Total Qty\": +excelRawData[i].totQty,\n              \"TTE Qty\": excelRawData[i].tteQty ? +excelRawData[i].tteQty.toFixed(2) : 0,\n              \"TTE Util\": excelRawData[i].tteUtil ? +excelRawData[i].tteUtil.toFixed(2) : 0,\n              \"Wt Util\": excelRawData[i].weightUtil ? +excelRawData[i].weightUtil.toFixed(2) : 0,\n              \"Vol Util\": excelRawData[i].volumeUtil ? +excelRawData[i].volumeUtil.toFixed(2) : 0,\n              \"In Weight (Kg)\": +excelRawData[i].inWeight,\n              \"Out Weight (Kg)\": +excelRawData[i].outWeight,\n              \"Net Weight(Kg)\": +excelRawData[i].netWeight,\n              \"SAP invoice weight(Kg)\": +excelRawData[i].sapInvWeight,\n              \"Weight Diff (Kg)\": +excelRawData[i].diffInvWeight,\n              \"SAP invoice value(INR)\": excelRawData[i].sapInvValue,\n              \"Eway bill No\": excelRawData[i].ewayBillNo,\n              \"Reporting Date At Dest\":this.service.customDateTimeFormat(excelRawData[i].reportingDateAtDest),\n              \"Unloading Date At Dest\":this.service.customDateTimeFormat(excelRawData[i].unloadingDateAtDest),\n              \"Std TT\": excelRawData[i].stdTT,\n              \"Delayed Days\": excelRawData[i].delayedDays,\n              \"GRN\": excelRawData[i].grn,\n              \"GRN Date\": this.service.customDateTimeFormat(excelRawData[i].grnDate),\n              \"DIT_QTY\": excelRawData[i].ditQty,\n              \"SHORTAGE_QTY\": excelRawData[i].shortQty,\n              \"DSeq\": excelRawData[i].dropSeq,\n              \"Loadslip Comments\": excelRawData[i].loadslipcomments,\n              \"Gate Comments\": excelRawData[i].comments,\n              \"Rejection\": excelRawData[i].rejectionStatus,\n              \"Rejection Desc\": excelRawData[i].rejectionDesc,\n              \"Insert User\": excelRawData[i].insertUser,\n              \"Update User\": excelRawData[i].updateUser,\n              \"Type\": excelRawData[i].stopType,\n              \"Loadslip Creation Date\": this.service.customDateTimeFormat(excelRawData[i].createdDate),\n              \"Country of Destination\": excelRawData[i].destCountryName,\n              \"Total Loaded\": excelRawData[i].qty,\n              \"Integration Status\": excelRawData[i].integrationStatus,\n              // \"MKT Seg\": excelRawData[i].marketSegment\n              \"Ft Trip ID\": excelRawData[i].ftTripId,\n              \"Cust Inv Num\": excelRawData[i].customInvNumber\n\n            }\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'TruckMovement.xlsx');\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.toastr.error(\"No records found to export\", \"Error!\");\n    }\n  }\n\n     //for getting category master data\n     getCategoryMasterData() {\n      this.service.get_service(ApiserviceService.apisList.categoryMasterData).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.categoryList = response['data'];\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"!Error\");\n        }\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      })\n    }\n\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { customMaterialModule } from '../../angular-material';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\nimport { TruckMovementComponent } from './truck-movement.component';\nconst routes: Routes = [\n  { path: '', component: TruckMovementComponent },\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    FormsModule,\n    customMaterialModule,\n    LoaderModule,\n    NgxDatatableModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    TruckMovementComponent\n  ]\n})\n\nexport class truckMovementModule { }\n"],"sourceRoot":""}