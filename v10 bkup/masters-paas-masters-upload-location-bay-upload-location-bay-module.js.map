{"version":3,"sources":["webpack:///./src/app/masters/paas-masters/upload-location-bay/upload-location-bay.component.html","webpack:///./src/app/masters/paas-masters/upload-location-bay/upload-location-bay.component.scss","webpack:///./src/app/masters/paas-masters/upload-location-bay/upload-location-bay.component.ts","webpack:///./src/app/masters/paas-masters/upload-location-bay/upload-location-bay.module.ts"],"names":[],"mappings":"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","file":"masters-paas-masters-upload-location-bay-upload-location-bay-module.js","sourcesContent":["module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n      <b>PaaS Masters &gt;</b><a class=\\\"\\\" [routerLink]=\\\"['/admin/paas-masters/mt-location-bay']\\\">Location Bay</a>\\n  </h6>\\n</div>\\n\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-1\\\"></div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"create-freight \\\">\\n        <div class=\\\"uploadfile create-freight\\\">\\n          <img src=\\\"./assets/images/Upload.png\\\" alt=\\\"upload image\\\" class=\\\"img-fluid\\\" />\\n          <h5>\\n            <label for=\\\"plan-file\\\">\\n              <u>Click here</u> to Upload Files</label>\\n          </h5>\\n          <input type=\\\"file\\\" (change)=\\\"onFileChange($event)\\\" value=\\\"\\\" id=\\\"plan-file\\\" accept=\\\".xls,.xlsx\\\" (click)=\\\"itemsImportInput.value = null\\\"\\n            #itemsImportInput/>\\n          <a download href=\\\"./assets/excel/LocationBay_template.xlsx\\\">\\n            <p>Download Location Bay Template</p>\\n          </a>\\n          <h5 class=\\\"color-green\\\" *ngIf=\\\"gotResponse\\\">Uploaded Total Records {{totalRecords}} </h5>\\n        </div>\\n        </div>\\n    </div>\\n  </div>\\n</div>\\n\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2\\\"></div>\\n        <div class=\\\"col-md-8\\\">\\n            <div class=\\\"error-log\\\" *ngIf=\\\"IsErrorLog\\\">\\n             \\n              <mat-card>\\n                  <br>\\n                <h5 class=\\\"error-log\\\">Total Error Records  {{totalErrorRecords}} </h5>\\n                <mat-list role=\\\"list\\\">\\n                  <mat-list-item *ngFor=\\\"let data of ErrorData\\\">\\n                    Error Record Id {{data.recId}}, Error Message {{data.errorMessage}}</mat-list-item>\\n                </mat-list>\\n            \\n              </mat-card>\\n            </div>\\n            </div>\\n\\n       \\n          </div>\\n        </div>\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hc3RlcnMvcGFhcy1tYXN0ZXJzL3VwbG9hZC1sb2NhdGlvbi1iYXkvdXBsb2FkLWxvY2F0aW9uLWJheS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport * as XLSX from 'xlsx';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiserviceService } from 'src/app/services/api/apiservice.service';\nimport { FileUploadErrorsDialogComponent } from '../../../public/file-upload-errors-dialog/file-upload-errors-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-upload-location-bay',\n  templateUrl: './upload-location-bay.component.html',\n  styleUrls: ['./upload-location-bay.component.scss']\n})\nexport class UploadLocationBayComponent implements OnInit {\n\n  ErrorData: any;\n  // errorData: any;\n  file: File;\n  arrayBuffer: any;\n  isLoading: boolean = false;\n  responseData = '';\n  planData = '';\n  data = [];\n  IsErrorLog:boolean=false;\n  planId: number;\n  totalRecords: number;\n  totalErrorRecords: number;\n  gotResponse:boolean=false;\n  constructor(\n    private router: Router,\n    private acitvatedRoute: ActivatedRoute,\n    private toastr: ToastrService,\n    private service: ApiserviceService,\n    public dialog: MatDialog,\n  ) { }\n\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\",\"create-freight\");\n  }\n\n  onFileChange(event) {\n   // this.ErrorData=\"\";\n   this.gotResponse=false;\n    this.IsErrorLog=false;\n    this.isLoading = true;\n    this.file = event.target.files[0];\n    let importedItemFileList = [];\n    if (this.file['type'] == 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\n      let fileReader = new FileReader();\n      fileReader.onload = (e) => {\n        this.arrayBuffer = fileReader.result;\n        var data = new Uint8Array(this.arrayBuffer);\n        var arr = new Array();\n        for (var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);\n        var bstr = arr.join(\"\");\n        var workbook = XLSX.read(bstr, { type: 'binary', cellDates: true, cellNF: false, cellText: false });\n        var first_sheet_name = workbook.SheetNames[0];\n        var worksheet = workbook.Sheets[first_sheet_name];\n       // console.log(XLSX.utils.sheet_to_json(worksheet,{raw:false}));\n       // importedItemFileList = XLSX.utils.sheet_to_json(worksheet, { dateNF: \"YYYY-MM-DD\" });\n        importedItemFileList = XLSX.utils.sheet_to_json(worksheet, { dateNF: \"YYYY-MM-DD\", raw: false });\n        \n\n        if(importedItemFileList.length>0){\n          for(var i=0 ; i < importedItemFileList.length; i++) {\n            delete importedItemFileList[i].id;\n          }\n        }\n      //  delete myObject.regex;\n        let filedata = {\n          itemsList: importedItemFileList\n        }\n        console.log(\"importedItemFileList\", importedItemFileList);\n        console.log(\"POSTING DATA \", JSON.stringify(filedata));\n        this.service.post_service(ApiserviceService.apisList.uploadMtLocationBay, filedata).subscribe(response => {\n\n          // this.planData = JSON.stringify(this.responseData);\n          console.log(\"resposne\", response['statusCode']);\n          if (response['statusCode'] == 200) {\n         //   errorsRecords\n            this.responseData = response['data'];\n            console.log(\"resposne\", this.responseData);\n            this.planId = this.responseData['planId'];\n            this.toastr.success(response['message']);\n            this.ErrorData = this.responseData['errorsRecords'];\n            this.totalRecords = this.responseData['totalRecords'];\n            console.log(\"totalRecords \" +this.totalRecords );\n            this.gotResponse=true;\n            if(this.ErrorData != undefined && this.ErrorData.length>0){\n              this.totalErrorRecords = this.ErrorData.length;\n              console.log(\"ErrorData \" +this.ErrorData.length );\n              this.IsErrorLog=true\n            }\n            this.isLoading = false;\n          } else {\n            this.isLoading = false;\n            //this.openDialog(response['data'])\n            this.ErrorData = response['data'];\n            this.IsErrorLog=true\n          }\n\n        },\n          (err) => {\n            console.log(\"Error\", err);\n            this.toastr.error(\"Something went wrong..\", \"Error!\");\n            this.isLoading = false;\n          })\n       // console.log(\"freightData\", JSON.stringify(freightData));\n      }\n      fileReader.readAsArrayBuffer(this.file);\n    } else {\n      this.isLoading = false;\n      this.toastr.error(\"upload only Xlsx files ..\", \"Error!\");\n    }\n\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UploadLocationBayComponent } from './upload-location-bay.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoaderModule } from '../../../public/loader/loader-shared.module';\nimport { customMaterialModule } from '../../../angular-material';\nimport { FormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\n\n\nconst routes: Routes = [\n  { path: '', component: UploadLocationBayComponent }\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    LoaderModule,\n    CommonModule,\n    customMaterialModule,\n    FormsModule,\n    NgxDatatableModule\n  ],\n  declarations: [UploadLocationBayComponent]\n})\nexport class UploadLocationBayModule { }\n"],"sourceRoot":""}