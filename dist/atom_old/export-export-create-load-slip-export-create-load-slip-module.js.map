{"version":3,"sources":["webpack:///./src/app/export/export-create-load-slip/export-create-load-slip.component.html","webpack:///./src/app/export/export-create-load-slip/export-create-load-slip.component.ts","webpack:///./src/app/export/export-create-load-slip/export-create-load-slip.module.ts"],"names":[],"mappings":"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","file":"export-export-create-load-slip-export-create-load-slip-module.js","sourcesContent":["module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\"> Loadslip >\\n    <span>{{title}}\\n      <span class=\\\"pull-right refresh-span\\\" *ngIf=\\\"(this.loadslipID && !this.viewType)\\\">\\n        <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export Download\\\">\\n          <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </span>\\n    </span>\\n  </h6>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"loadslip-fields tab-loadslip-fields\\\">\\n    <div class=\\\"row margin-bottom-5\\\">\\n      <div class=\\\"col-md-7\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2\\\">\\n            <div class='inputbordered'>\\n              <div>Source</div>\\n              <div>\\n                <b>{{userSource}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pd-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <mat-form-field appearance=\\\"standard\\\" *ngIf=\\\"!checkMultiStop()\\\">\\n                <mat-select placeholder=\\\"Container\\\" [(ngModel)]=\\\"containerNum\\\" name=\\\"containerNum\\\"\\n                  (ngModelChange)=\\\"getLoadSlipUtilazations($event)\\\">\\n                  <mat-option *ngFor=\\\"let truckType of truckTypes;let i=index\\\" [value]=\\\"truckType.CONTAINER_NUM\\\">\\n                    {{truckType.CONTAINER_NUM | uppercase}} <span *ngIf=\\\"truckType.ITEM_CATEGORY\\\">&nbsp; - &nbsp;\\n                      ({{truckType.ITEM_CATEGORY}})</span>\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <div *ngIf=\\\"checkMultiStop()\\\">\\n                <div>Container</div>\\n                <div>\\n                  <b>{{containerNum || '--'}}</b>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Container Type</div>\\n              <div>\\n                <b>{{truckT?truckT:'--' }}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2  pd-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Transporter</div>\\n              <div>\\n                <b>{{transporter?transporter:'--' }}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Destination</div>\\n              <div>\\n                <b>{{destination?destination:'--' | uppercase}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <div class=\\\"inputbordered\\\">\\n              <div>LS Category</div>\\n              <div>\\n                <b>{{loadslipCategory || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-5\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2 pd-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Dest Desc</div>\\n              <div [title]=\\\"description\\\" [ngClass]=\\\"{'cursor-pointer':description?.length>8}\\\">\\n                <b>{{description ? (description?.length>8) ? (description | slice:0:8)+'..':(description) : '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <mat-form-field appearance=\\\"standard\\\">\\n                <mat-select placeholder=\\\"Ship To\\\" [(ngModel)]=\\\"ShipTo\\\" name=\\\"shito\\\">\\n                  <mat-option *ngFor=\\\"let shipPlace of shiptoPlaceList;let i=index\\\" [value]=\\\"shipPlace\\\">\\n                    {{shipPlace}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 pl-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <mat-form-field appearance=\\\"standard\\\" *ngIf=\\\"!checkMultiStop()\\\">\\n                <!-- <mat-select [(ngModel)]=\\\"actualTruckType\\\" name=\\\"actualTruckType\\\" placeholder=\\\"Actual Truck Type\\\"\\n                  (selectionChange)=\\\"getLoadSlipUtilazations(containerNum)\\\">\\n                  <mat-option selected>None</mat-option>\\n                  <mat-option *ngFor=\\\"let list of actualTruckTypeList\\\" [value]=\\\"list.value\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-select> -->\\n                <mat-select placeholder=\\\"Actual Truck Type\\\" [(ngModel)]=\\\"actualTruckType\\\" name=\\\"actualTruckType\\\"\\n                  (selectionChange)=\\\"getLoadSlipUtilazations(containerNum)\\\">\\n                  <mat-option selected>None</mat-option>\\n                  <mat-optgroup *ngFor=\\\"let group of truckTypeClass\\\" [label]=\\\"group.name\\\" [disabled]=\\\"group.disabled\\\">\\n                    <mat-option *ngFor=\\\"let type of group.mtTruckTypeInfos\\\" [value]=\\\"type.value\\\"\\n                      style=\\\"font-weight: normal\\\">\\n                      {{type.value}}\\n                    </mat-option>\\n                  </mat-optgroup>\\n                </mat-select>\\n              </mat-form-field>\\n              <div *ngIf=\\\"checkMultiStop()\\\">\\n                <div>Actual Truck Type</div>\\n                <div>\\n                  <b>{{actualTruckType || '--'}}</b>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <mat-form-field appearance=\\\"standard\\\" *ngIf=\\\"!checkMultiStop()\\\">\\n                <mat-select placeholder=\\\"Variant 1\\\" [(ngModel)]=\\\"variant_ONE\\\" name=\\\"variant_ONE\\\"\\n                  (selectionChange)=\\\"getLoadSlipUtilazations(containerNum)\\\">\\n                  <mat-option selected>None</mat-option>\\n                  <mat-option *ngFor=\\\"let item of variant_one_List\\\" [value]=\\\"item\\\">\\n                    {{item | uppercase}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <div *ngIf=\\\"checkMultiStop()\\\">\\n                <div>Variant 1</div>\\n                <div>\\n                  <b>{{variant_ONE || '--'}}</b>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <div class=\\\"form-group inputbordered\\\">\\n              <div>Frt Avail</div>\\n              <div>\\n                <b>{{ freightAvailableflag || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row margin-bottom-5\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-7 pr-0\\\">\\n            <div class=\\\"bordered\\\">\\n              <div>Truck No</div>\\n              <div>\\n                <b>{{truckType || '--'}}\\n                  <!-- <span *ngIf=\\\"indentCategory\\\">&nbsp; - &nbsp;({{indentCategory}})</span> -->\\n                </b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-5\\\">\\n            <div class='bordered'>\\n              <div>TTE Qty </div>\\n              <div><b>{{totalTTE ? (totalTTE | number : '1.2-2') : '--' }}</b></div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"col-md-3 pd-0\\\">\\n        <div class=\\\"bordered-box\\\">\\n          <div class=\\\"row text-center\\\" >\\n              <div class=\\\"col-md-3  bordered-box-left-div\\\">\\n                  <div>\\n                      Wt (Kg)\\n                  </div>\\n                  <div >\\n                    <b>{{totalWeight?(totalWeight | number : '1.2-2'):0}}</b>\\n                  </div>\\n                </div>\\n            <div class=\\\"col-md-3 text-center bordered-box-left-div\\\">\\n              <div>\\n                TTE Util\\n              </div>\\n              <div [ngClass]=\\\"(totalTTESeletecd > 100)?'text-danger':'color-green'\\\">\\n                <b>{{totalTTESeletecd?(totalTTESeletecd | number : '1.2-2'):0 }}%</b>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"col-md-3  bordered-box-left-div\\\">\\n              <div>\\n                Wt Util\\n              </div>\\n              <div [ngClass]=\\\"(totalMaterialWeight > 100)?'text-danger':'color-green'\\\">\\n                <b>{{totalMaterialWeight?(totalMaterialWeight | number : '1.2-2'):0}}%</b>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div>\\n                Vol Util\\n              </div>\\n              <div [ngClass]=\\\"(totalTruckVolume > 100)?'text-danger':'color-green'\\\">\\n                <b>{{totalTruckVolume?(totalTruckVolume | number : '1.2-2'):0}}%</b>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-5\\\">\\n        <!-- <div class=\\\"row bg-theme\\\">\\n          <div class=\\\"col-md-2 col-wid-20p\\\">\\n            <div>Tyres</div>\\n            <div>\\n              {{totalTyres?totalTyres:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-20p\\\">\\n            <div>Tubes</div>\\n            <div>\\n              {{totalTubes?totalTubes:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-20p\\\">\\n            <div>Flaps</div>\\n            <div>\\n              {{totalFlaps?totalFlaps:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-20p\\\">\\n            <div> Valves</div>\\n            <div>\\n              {{totalValves?totalValves:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-20p\\\">\\n            <div>Pctr</div>\\n            <div>{{totalPctr?totalPctr:0}} </div>\\n          </div>\\n        </div> -->\\n        <div class=\\\"row bg-theme export-padding h-100\\\">\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Tyres</div>\\n            <div>\\n              {{totalTyres?totalTyres:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Tubes</div>\\n            <div>\\n              {{totalTubes?totalTubes:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Flaps</div>\\n            <div>\\n              {{totalFlaps?totalFlaps:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div> Valves</div>\\n            <div>\\n              {{totalValves?totalValves:0}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Pctr</div>\\n            <div>{{totalPctr?totalPctr:0}} </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Others</div>\\n            <div>{{totalOthersCount?totalOthersCount:0}} </div>\\n          </div>\\n          <div class=\\\"col-md-2 col-wid-16p\\\">\\n            <div>Tot Qty</div>\\n            <div>{{totalQuantity?totalQuantity:0}} </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-2 flow-btns font-11 MD-MP\\\">\\n        <button mat-raised-button mat-raised-button color=\\\"primary\\\" class=\\\"btm-action-btn tab-mb-10\\\" (click)=\\\"onOpenModal()\\\"\\n          data-target=\\\"#myModal\\\">{{invoiceBtn}} </button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!isDraftMode\\\" (click)=\\\"shareTruckDestinationList()\\\">Share\\n          Truck(MP)</button>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 \\\">\\n            <div class='bordered'>\\n              <div>Shipment No</div>\\n              <div>\\n                <b>{{shipmentNumber || '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6 pd-0\\\">\\n            <div class='bordered'>\\n              <div>Load Slip No </div>\\n              <div><b>{{loadslipID || '--'}}</b></div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-1 pr-0\\\">\\n        <div class=\\\"form-group bordered\\\">\\n          <div>Cntry of Dest</div>\\n          <div>\\n            <!-- <b class=\\\"font-11\\\">{{countryOfDestination?countryOfDestination:'--' }}</b> -->\\n            <div [title]=\\\"countryOfDestination\\\" [ngClass]=\\\"{'cursor-pointer':countryOfDestination?.length>8}\\\">\\n              <b>{{countryOfDestination ? (((countryOfDestination?.length>8)? (countryOfDestination | slice:0:8)+'..':(countryOfDestination)) | uppercase) : '--'}}</b>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4 pr-0\\\">\\n            <div class='bordered'>\\n              <div>Indt Cat </div>\\n              <div [title]=\\\"indentCategory\\\" [ngClass]=\\\"{'cursor-pointer':indentCategory?.length>11}\\\">\\n                <b>{{indentCategory ? (((indentCategory?.length>11)? (indentCategory | slice:0:11)+'..':(indentCategory)) | uppercase) : '--'}}</b>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4 pr-0\\\">\\n            <div class='bordered'>\\n              <div>City</div>\\n              <div>\\n                <!-- <b>{{city?city:'--'}}</b> -->\\n                <div [title]=\\\"city\\\" [ngClass]=\\\"{'cursor-pointer':city?.length>8}\\\">\\n                  <b>{{city ? (((city?.length>8)? (city | slice:0:8)+'..':(city)) | uppercase) : '--'}}</b>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4 \\\">\\n            <div class=\\\"form-group inputbordered dropdownSeq\\\">\\n              <mat-form-field appearance=\\\"standard\\\">\\n                <mat-select placeholder=\\\"Drop Seq\\\" [(ngModel)]=\\\"dropSeq\\\" name=\\\"dropSeq\\\">\\n                  <mat-option *ngFor=\\\"let item of dropSeqList;let i=index\\\" [value]=\\\"item\\\">\\n                    {{item}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"col-md-1 pl-0 flow-btns tab-flow-btns exportLoadBtns\\\">\\n        <!-- [disabled]=\\\"releasedDate != null\\\" -->\\n        <button *ngIf=\\\"(bayArrivedDate == null)\\\" mat-raised-button (click)=\\\"eventCall(loadslipID,'ARRIVED_BAY')\\\"\\n          class=\\\"mat-default\\\" >Arrived\\n          Bay</button>\\n        <button *ngIf=\\\"(bayArrivedDate != null)\\\" class=\\\"greenButton\\\">Arrived Bay <b>: {{bay}}</b> <span>{{bayArrivedDate\\n            | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 pl-0 flow-btns tab-flow-btns exportLoadBtns\\\">\\n        <button mat-raised-button color=\\\"default\\\" (click)=\\\"saveAsDraft_Print_trigger('PRINT')\\\" class=\\\"mat-default\\\"\\n          *ngIf=\\\"(lsPrintDate == null) && (releasedDate == null)\\\">Print\\n          LS</button>\\n        <button (click)=\\\"saveAsDraft_Print_trigger('PRINT')\\\" class=\\\"greenButton\\\"\\n          *ngIf=\\\"(lsPrintDate != null) && (releasedDate == null)\\\">Print\\n          LS<span> ({{(lsPrintDate) | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}})</span></button>\\n        <button (click)=\\\"downloadLoadslip()\\\" class=\\\"greenButton\\\" *ngIf=\\\"(releasedDate != null)\\\">Print\\n          Pdf<span> ({{(lsPrintDate) | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}})</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns tab-flow-btns exportLoadBtns\\\">\\n        <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(loadingStartDate == null)\\\"\\n          (click)=\\\"eventCall(loadslipID,'LOADING_START')\\\" >Loading\\n          Start</button>\\n        <button *ngIf=\\\"(loadingStartDate != null)\\\" class=\\\"greenButton\\\">Loading Start <span>{{loadingStartDate |\\n            customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns tab-flow-btns  tab-pl-15 exportLoadBtns\\\">\\n        <button mat-raised-button color=\\\"default\\\" *ngIf=\\\"(loadingEndDate == null)\\\"\\n          (click)=\\\"eventCall(loadslipID,'LOADING_END')\\\">Loading\\n          End</button>\\n        <button *ngIf=\\\"(loadingEndDate != null)\\\" class=\\\"greenButton\\\">Loading End <span>{{loadingEndDate |\\n            customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n      <div class=\\\"col-md-1 flow-btns tab-flow-btns tab-pl-15 exportLoadBtns\\\">\\n        <button mat-raised-button color=\\\"default\\\" [disabled]=\\\"(IS_RELEASE) || (loadSlipData.length == 0)\\\"\\n          *ngIf=\\\"(releasedDate == null)\\\" (click)=\\\"eventCall(loadslipID,'RELEASED')\\\">Release</button>\\n        <button *ngIf=\\\"(releasedDate != null)\\\" class=\\\"greenButton\\\">Release <span>{{releasedDate | customDateFormat |\\n            date:'dd-MMM-yyyy,HH:mm'}}</span></button>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"mb-3\\\">\\n    <ngx-datatable class='material' [rows]='loadSlipData' [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\n       [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [summaryRow]=\\\"true\\\" [summaryHeight]=\\\"'auto'\\\"\\n      [summaryPosition]=\\\"'bottom'\\\" [scrollbarH]=\\\"true\\\">\\n      <ngx-datatable-column name=\\\"Invoice Number\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"INVOICE_NUMBER\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.INVOICE_NUMBER || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Material Code\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"ITEM_ID\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_ID || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Material Description\\\" [width]=\\\"250\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"ITEM_DESCRIPTION\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_DESCRIPTION || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Cat\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"ITEM_CATEGORY\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.ITEM_CATEGORY || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Qty\\\" [width]=\\\"40\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"QTY\\\"\\n        [summaryFunc]=\\\"qtySumm\\\" [summaryTemplate]=\\\"qtSummaryCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.QTY || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Weight\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"WEIGHT\\\"\\n        [summaryFunc]=\\\"weightSumm\\\" [summaryTemplate]=\\\"weSummaryCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.WEIGHT || \\\"--\\\"}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n    </ngx-datatable>\\n    <ng-template #weSummaryCell let-row=\\\"row\\\" let-value=\\\"value\\\">\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\" style=\\\"padding-left:0px !important\\\">\\n          <span class=\\\"chip-content\\\">{{ weightSumm?(weightSumm | number :\\n            '1.2-2'):0}} Kg/{{metricTon?(metricTon | number :'1.2-2'):0}} MT</span>\\n          <!-- <span class=\\\"chip-content\\\">Total Qty : {{ qtySumm }}</span> -->\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #qtSummaryCell let-row=\\\"row\\\" let-value=\\\"value\\\">\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{ qtySumm?qtySumm:0}}</span>\\n          <!-- <span class=\\\"chip-content\\\">Total Qty : {{ qtySumm }}</span> -->\\n        </div>\\n      </div>\\n    </ng-template>\\n    <!-- <ng-template>\\n      <div style=\\\"padding: 5px 10px\\\">\\n        <div class=\\\"pull-right\\\">\\n          <strong>Total Qty</strong>: {{totalTyres?totalTyres:0}}\\n        </div>\\n      </div>\\n    </ng-template> -->\\n  </div>\\n\\n  <div align=\\\"center\\\" *ngIf=\\\"truckType\\\">\\n    <button mat-stroked-button color=\\\"primary\\\" class=\\\"mr-3\\\" (click)=\\\"cancelLoadslipCreation()\\\"\\n      *ngIf=\\\"!(loadslipID)\\\">Cancel</button>\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"btm-action-btn\\\" (click)=\\\"saveAsDraft_Print_trigger('DRAFT')\\\"\\n      *ngIf=\\\"isDraftMode\\\">Save\\n      as Draft</button>\\n    <!-- <button (click)=\\\"show(12345,'DRAFT')\\\"> show</button> -->\\n  </div>\\n</div>\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\" style=\\\"width: 100%\\\">\\n      <div class=\\\"modal-header \\\">\\n        <h4 class=\\\"modal-title\\\" style=\\\"font-size: 16px\\\">Invoice\\n          <button type=\\\"button\\\" class=\\\"close pull-right\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </h4>\\n      </div>\\n      <div class=\\\"modal-body\\\" style=\\\"height: 250px;overflow-y: auto\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8 table\\\">\\n            <!-- Checkbox Column -->\\n            <ng-container matColumnDef=\\\"select\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                  [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                  [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n                </mat-checkbox>\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">\\n                <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                  [checked]=\\\"selection.isSelected(row)\\\">\\n                </mat-checkbox>\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"invoiceNumber\\\">\\n              <th mat-header-cell *matHeaderCellDef> Invoice No </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceNumber}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"deliveryNumber\\\">\\n              <th mat-header-cell *matHeaderCellDef> Delivery No </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.deliveryNumber}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"containerNum\\\">\\n              <th mat-header-cell *matHeaderCellDef> Container No </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.containerNum}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"destLoc\\\">\\n              <th mat-header-cell *matHeaderCellDef> Destination </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.destLoc}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"invoiceDate\\\">\\n              <th mat-header-cell *matHeaderCellDef> Invoice Date </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.invoiceDate}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"billTo\\\">\\n              <th mat-header-cell *matHeaderCellDef> Bill To </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.billTo}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"billToName\\\">\\n              <th mat-header-cell *matHeaderCellDef> Bill To Name </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.billToName}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"shipTo\\\">\\n              <th mat-header-cell *matHeaderCellDef> Ship To </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.shipTo}} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"shipToName\\\">\\n              <th mat-header-cell *matHeaderCellDef> Ship To Name </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.shipToName}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\" *ngIf=\\\"isDraftMode\\\">\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"confirmInvoiceForExport()\\\"\\n          data-dismiss=\\\"modal\\\">Confirm</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- modal for share truck -->\\n<div class=\\\"modal\\\" id=\\\"shareTruckModal\\\" data-keyboard=\\\"false\\\" data-backdrop=\\\"static\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Select Pickup Location</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <mat-form-field appearance=\\\"standard\\\">\\n          <mat-select [(ngModel)]=\\\"shareTruckLocation\\\" name=\\\"shareTruckLocation\\\" placeholder=\\\"Select Pickup Location\\\">\\n            <mat-option *ngFor=\\\"let sharebledestination of shareTrcukDestinations\\\" [value]=\\\"sharebledestination\\\">\\n              {{sharebledestination}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"shareTruck()\\\">Confirm</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog } from '@angular/material';\nimport { LoadslipCancelPopupComponent } from 'src/app/public/loadslip-cancel-popup/loadslip-cancel-popup.component';\nimport { constants } from 'src/app/constants';\nimport { LoadslipSuccessDialogComponent } from 'src/app/public/loadslip-success-dialog/loadslip-success-dialog.component';\nimport { CreateLoadslipsErrorPopupComponent } from 'src/app/public/create-loadslips-error-popup/create-loadslips-error-popup.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource } from '@angular/material';\n// import * as $ from 'jquery'\ndeclare var $: any;\n@Component({\n  selector: 'app-export-create-load-slip',\n  templateUrl: './export-create-load-slip.component.html',\n  styles: []\n})\nexport class ExportCreateLoadSlipComponent implements OnInit {\n  eventTriggers: any;\n  destinationList: any;\n  isLoading: boolean = false;\n  totalTTESeletecd: any;\n  totalTruckVolume: any;\n  totalTyres: any;\n  totalTubes: any;\n  totalFlaps: any;\n  totalValves: any;\n  ShipTo: any;\n  page = {\n    limit: 10,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n  limitOptions: Array<any> = [\n    { key: '10', value: 10 },\n    { key: '20', value: 20 },\n    { key: '30', value: 30 },\n    { key: '50', value: 50 },\n    { key: '100', value: 100 }\n  ];\n  pageSize: number;\n  loadSlipData = [];\n  source = '';\n  destination = '';\n  truckType = '';\n  minDate = new Date();\n  editing = {};\n  createLoadSlipSuccess: boolean = false;\n  truckTypes = [];\n  loadslipUtilizationData: any;\n  totalMaterialWeight: any;\n  shiptoPlaceList: any;\n  userSource: string;\n  isLoadslipIdAvaliable: boolean = false;\n  setDefaultCurrency: string;\n  totalPctr: any;\n  viewType: string;\n  loadslipID: any;\n  bayArrivedDate: any;\n  loadingStartDate: any;\n  loadingEndDate: any;\n  confirmedDate: any;\n  releasedDate: any;\n  lsPrintDate: any;\n  shipmentNumber: any;\n  bay: any;\n  totalTTE: number;\n  totalWeight: number;\n  totalVolume: any;\n  totalLoadedQty: any;\n  loadslipCategory: any;\n  marketSegmentMap: any;\n  roles: any;\n  title: string;\n  IS_RELEASE: boolean = true;\n  displayedColumns: string[] = ['select', 'invoiceNumber', 'deliveryNumber', 'containerNum', 'destLoc', 'invoiceDate', 'billTo', 'billToName', 'shipTo', 'shipToName'];\n  dataSource = new MatTableDataSource<PeriodicElement>();\n  selection = new SelectionModel<PeriodicElement>(true, []);\n  invoiceDataList = [];\n  // truckNo: string;\n  invoiceBtn: string;\n  invoiceData = [];\n  isConfirmed: boolean = false;\n  selectedInvoiceListItems = [];\n  finalInvoiceList = [];\n  containerNum: string;\n  dropSeqList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  dropSeq: string;\n  IS_MULTI_STOP: boolean;\n  trackDetailsObj: any;\n  multistopTruckNumber: string;\n  multistopTruckType: string;\n  loadslipTteUtil: number = 0;\n  loadslipWtUtil: number = 0;\n  loadslipVolUtil: number = 0;\n  sendForBarcodeDate: any;\n  variant_one_List = [];\n  variant_two_List = [];\n  variant_ONE: string;\n  variant_TWO: string;\n  actualTruckType: any;\n  freightAvailableflag: string;\n  itemLevelTotalTTE: number;\n  itemLevelTotalWeight: number;\n  itemLevelTotalVolume: any;\n  shareTrcukDestinations = [];\n  shareTruckLocation: string;\n  actualTruckTypeList: any[];\n  route_shipmentNumber: string\n  isDraftMode: boolean = true;\n  @ViewChild('weSummaryCell') weSummaryCell: TemplateRef<any>;\n  weightSumm: number = 0;\n  qtySumm: number = 0;\n  truckT: string;\n  transporter: string;\n  metricTon: number = 0;\n  IsUpdate: boolean = false;\n  countryOfDestination: any;\n  indentCategory: any;\n  description: any;\n  city:any;\n  truckTypeClass: any;\n  totalOthersCount: number;\n  totalQuantity: number = 0;\n\n  constructor(public service: ApiserviceService, private router: Router, private ActivatedRoute: ActivatedRoute, private toastr: ToastrService, private dialog: MatDialog) { }\n\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"load-slip\");\n    //  this.isLoading = true; \n    this.userSource = localStorage.getItem(\"sourceID\");\n    this.loadslipID = this.ActivatedRoute.snapshot.params['loadslipId'];\n    this.viewType = this.ActivatedRoute.snapshot.params['viewType']\n    this.route_shipmentNumber = this.ActivatedRoute.snapshot.queryParams['shipmentNumber']\n    this.shipmentNumber = this.route_shipmentNumber;\n    this.roles = constants.roles;\n    this.pageSize = 20;\n    this.page.limit = 20;\n\n\n    if (!this.loadslipID) {\n      this.title = 'Create Load Slip For Export';\n      this.invoiceBtn = 'Add Invoice'\n    } else if (this.loadslipID && !this.viewType) {\n      this.title = 'Drafted Load Slip For Export';\n      this.invoiceBtn = 'Edit Invoice'\n    } else if (this.loadslipID && this.viewType) {\n      this.title = 'View Load Slip For Export';\n      this.invoiceBtn = 'View Invoice'\n    }\n\n\n    if (this.loadslipID) {\n      this.getLoadSlipsDetailsById();\n    } else if (this.route_shipmentNumber) {\n      this.getLoadSlipUtilizationsForExportShareTuck(this.route_shipmentNumber);\n      // this.getGateInContainer();\n    } else {\n      this.getGateInContainer();\n    }\n\n\n    // get variants \n    this.getvariants();\n\n  }\n\n  getLoadSlipUtilizationsForExportShareTuck(shipmentNumber) {\n    this.isLoading = true;\n    let data = {\n      // 'truckNumber': this.truckNumber,\n      // 'trucktype': this.truckType,\n      'shipmentId': shipmentNumber,\n      // 'destLoc': this.destination,\n      // 'loadSlipId': this.loadslipID,\n      'type': 'FGS_EXP',\n      // 'actucaltrucktype': this.actualTruckType,\n      // 'variant1': this.variant_ONE\n    }\n    this.service.post_service(ApiserviceService.apisList.getLoadSlipUtlizationsForExport, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let truckRepsonseData = response['data'];\n        // this.loadSlipData = [];\n        this.loadslipUtilizationData = truckRepsonseData['loadSlipUtilizationDto'];       \n        this.totalTTESeletecd = this.loadslipUtilizationData.shipmentTotalTTEUtil;\n        this.totalMaterialWeight = this.loadslipUtilizationData.shipmentTotalWtUtil;\n        this.totalTruckVolume = this.loadslipUtilizationData.shipmentTotalVolUtil;\n        this.multistopTruckNumber = this.loadslipUtilizationData.truckNumber;\n        this.multistopTruckType = this.loadslipUtilizationData.truckType;\n        this.actualTruckType = this.loadslipUtilizationData.actualTruckType;\n        this.variant_ONE = this.loadslipUtilizationData.variant1;\n        this.destination = this.loadslipUtilizationData.destLoc;\n        this.truckType = this.loadslipUtilizationData.truckNumber;\n        this.containerNum = this.loadslipUtilizationData.containerNum;\n        this.invoiceDataList = truckRepsonseData['delInvHeaders'];\n        this.truckT = this.loadslipUtilizationData.truckType;\n        this.transporter = this.loadslipUtilizationData.servprov;\n        this.countryOfDestination = this.loadslipUtilizationData.countryName;\n        this.dataSource = new MatTableDataSource<PeriodicElement>(this.invoiceDataList);\n        // setTimeout(() => {\n        this.isLoading = false;\n        // }, 500);\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n\n  // Check multi stop \n  checkMultiStop() {\n    //check multi stop on based on the shipmentNumber,TruckNumber,Typeof truck if we get from the Route Params\n    // We can the Boolean of MULTI stop \n    if ((this.route_shipmentNumber) || (this.IS_MULTI_STOP)) {\n      return true\n    } else {\n      return false;\n    }\n  }\n  // loadslip same trcuk navigation\n  loadslipOnSameTruckNavigation() {\n    if (this.shipmentNumber) {\n      this.router.navigate(['/fgs/create-load-slip-for-export'], { queryParams: { shipmentNumber: this.shipmentNumber } })\n    } else {\n      this.toastr.error('Please Create a Loadslip')\n    }\n\n  }\n\n  //share Truck destination list\n  shareTruckDestinationList() {\n    if (this.loadslipID) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.shareTruckDestions).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.shareTrcukDestinations = response['data'];\n          if (this.shareTrcukDestinations) {\n            $('#shareTruckModal').modal('show');\n          }\n          this.isLoading = false;\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n        }\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.toastr.warning(\"Please create a Loadslip\", \"!! Warning\");\n    }\n  }\n  //share truck Server API\n  shareTruck() {\n    this.isLoading = true;\n    if(this.shareTruckLocation){\n    let data = {};\n    this.service.post_service(ApiserviceService.apisList.shareTruck + \"?shipmentId=\" + this.shipmentNumber + '&pickupLoc=' + this.shareTruckLocation, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.toastr.success(response['message']);\n        // this.shareTrcukDestinations = response['data'];\n        this.shareTrcukDestinations = [];\n        $('#shareTruckModal').modal('hide');\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }else{\n    this.toastr.warning(\"Please select a pickup location...\", 'Warning!');\n    this.isLoading = false;\n  }\n}\n\n\n  // get master variants data\n  getvariants() {\n    //this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getVariants).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        this.variant_one_List = responseData.variant1;\n        this.variant_two_List = responseData.variant2;\n        //this.isLoading = false;\n        // get the list of actual trucktypes\n       // this.getActualTruckTypeList();\n      } else {\n        // this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    })\n  }\n\n  // get the list of actual truck type\n  getActualTruckTypeList() {\n    this.actualTruckTypeList = [];\n    //this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getMasterTruckstype).subscribe(response => {\n      console.log(\"respio\", response)\n      this.actualTruckTypeList = response['data'];\n      //this.isLoading = false;\n    }, (err) => {\n      console.log(\"Error\", err);\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n     // Truck types based on destination\n     getTruckTypesForDest(destination){\n      if(destination){\n        this.service.get_service(ApiserviceService.apisList.getMasterTruckTypesWithDest+'?sourceLoc='+this.userSource+'&destLoc='+destination).subscribe(response => {\n          if(response['statusCode'] == 200){\n            this.truckTypeClass = response['data'];\n          }else{\n            this.toastr.error(response['message'] ? response['message'] : 'Something went wrong...!', 'errError!');\n          }\n        }, err =>{\n          this.toastr.error(err ? err : 'Something went wrong...', 'Error!')\n        })\n        }\n    }\n\n  // for getting gate in container list \n  getGateInContainer() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getExportGateInContainer + \"?type=FGS_EXP&loadslipId=\").subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        this.truckTypes = responseData['gatedInTrucks'];\n        this.isLoading = false;\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong !\", \"!Error\")\n        this.isLoading = false;\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    });\n  }\n\n  // for getting load slip details by load slip id from server\n  getLoadSlipsDetailsById() {\n    this.isLoadslipIdAvaliable = true;\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.getLoadSlipDetailsByID + \"/\" + this.loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        this.destination = responseData.destination;\n        this.description = responseData.description;\n        this.indentCategory = responseData.truckIndentCategory;\n        this.city = responseData.city;\n        this.shipmentNumber = responseData.shipmentID;\n        this.loadslipCategory = responseData.loadslipCategory;\n        this.bayArrivedDate = responseData.bayArrivedDate;\n        this.loadingStartDate = responseData.loadingStartDate;\n        this.loadingEndDate = responseData.loadingEndDate;\n        this.confirmedDate = responseData.confirmedDate;\n        this.releasedDate = responseData.releasedDate;\n        this.lsPrintDate = responseData.lsPrintDate;\n        this.bay = responseData.bay;\n        this.ShipTo = responseData.shipTo;\n        this.truckType = responseData.truckNumber;\n        this.multistopTruckNumber = responseData.truckNumber;\n        this.indentCategory = responseData.truckIndentCategory;\n        this.IS_MULTI_STOP = responseData.multiStop;\n        this.totalTyres = responseData.totalTyres;\n        this.totalTubes = responseData.totalTubes;\n        this.totalFlaps = responseData.totalFlaps;\n        this.totalValves = responseData.totalValves;\n        this.totalPctr = responseData.totPctr;\n        this.totalValves = responseData.totalValves;\n        this.totalOthersCount=responseData.otherQty;\n        this.totalQuantity = responseData.totQty;\n        this.dropSeq = responseData.dropSeq;\n        this.freightAvailableflag = responseData.freightAvailableflag;\n        // Shipment level values\n        this.totalTTESeletecd = responseData.shipmentTTEUtil;\n        this.totalMaterialWeight = responseData.shipmentWeightUtil;\n        this.totalTruckVolume = responseData.shipmentVolumeUtil;\n        //Loads slip values \n        this.loadslipTteUtil = responseData.tteUtil;\n        this.loadslipWtUtil = responseData.weightUtil;\n        this.loadslipVolUtil = responseData.volumeUtil;\n        this.totalLoadedQty = responseData.totalLoadedQty;\n        this.totalTTE = responseData.totalTTE;\n        this.totalWeight = responseData.totalWeight;\n        this.totalVolume = responseData.totalVolume;\n        // variants & Actual Truck Type\n        this.variant_ONE = responseData.variant1;\n        this.actualTruckType = responseData.actualTruckType;\n        this.containerNum = responseData.containerNum\n        this.invoiceDataList = responseData['delInvHeaderList'];\n        this.IS_MULTI_STOP = responseData.multiStop;\n        this.isDraftMode = responseData.isInDraft;\n        this.truckT = responseData.truckType;\n        this.transporter = responseData.servprov;\n        this.countryOfDestination = responseData.countryName;\n        // if view type is print checking condition for display invoice list else \n        if (this.isDraftMode) {\n          this.dataSource = new MatTableDataSource<PeriodicElement>(this.invoiceDataList);\n          let selectedItems = [];\n          for (let i = 0; i < this.invoiceDataList.length; i++) {\n            if (this.invoiceDataList[i].loadslipId == this.loadslipID) {\n              selectedItems.push(this.invoiceDataList[i]);\n            }\n          }\n          this.selection = new SelectionModel<PeriodicElement>(true, selectedItems);\n          this.IS_RELEASE = (selectedItems.length > 0) ? false : true;\n        } else {\n          for (let i = 0; i < this.invoiceDataList.length; i++) {\n            if (this.invoiceDataList[i].loadslipId == this.loadslipID) {\n              this.selectedInvoiceListItems.push(this.invoiceDataList[i]);\n              this.dataSource = new MatTableDataSource<PeriodicElement>(this.selectedInvoiceListItems);\n            }\n          }\n          this.IS_RELEASE = (this.selectedInvoiceListItems.length > 0) ? false : true;\n          this.selection = new SelectionModel<PeriodicElement>(true, this.selectedInvoiceListItems);\n        }\n        this.getTruckTypesForDest(this.destination);\n\n\n        // for getting container list based on loadslipId and type in draft mode\n        this.getContainerListBaseLoadslipId(responseData);\n\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\")\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  // for getting container list based on loadslipId and type in draft mode\n  getContainerListBaseLoadslipId(responseData) {\n    this.service.get_service(ApiserviceService.apisList.getExportGateInContainer + \"?type=FGS_EXP&loadslipId=\" + this.loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let dataResponse = response['data'];\n        this.truckTypes = dataResponse['gatedInTrucks'];\n        let newObject = {\n          \"CONTAINER_NUM\": responseData.containerNum,\n          \"DEST_LOC\": responseData.destination,\n          \"TRUCK_NUMBER\": responseData.truckNumber,\n          \"TRUCK_TYPE\": responseData.truckType,\n          \"SERVPROV\": responseData.servprov,\n          \"ITEM_CATEGORY\" : responseData.truckIndentCategory,\n          \"DEST_DESC\" : responseData.description\n        }\n        let findTrcuk = this.truckTypes.findIndex(data => data.TRUCK_NUMBER == responseData.truckNumber);\n        if (findTrcuk == -1) {\n          this.truckTypes.push(newObject);\n        }\n        this.shiptoPlaceList = responseData.shipmentToLocs;\n        let trackingObj = this.truckTypes.find(truckObj => truckObj.TRUCK_NUMBER == this.truckType);\n        let respData = trackingObj;\n\n        // for getting loadslip utilization data for export from server\n        this.getLoadSlipUtilizationsForExport(respData.TRUCK_NUMBER, respData.TRUCK_TYPE, this.shipmentNumber);\n\n        // this.isLoading = false;\n        // Set table data\n        this.setLoadSlipDraftData(responseData);\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong !\", \"!Error\")\n        this.isLoading = false;\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    });\n  }\n  // for getting loadslip utilization data for export from server\n  getLoadSlipUtilizationsForExport(truckNumber, truckType, shipmentNumber) {\n    this.isLoading = true;\n    let data = {\n      'truckNumber': truckNumber,\n      'trucktype': truckType,\n      'shipmentId': shipmentNumber,\n      'destLoc': this.destination,\n      'loadSlipId': this.loadslipID,\n      'type': 'FGS_EXP',\n      'actucaltrucktype': this.actualTruckType,\n      'variant1': this.variant_ONE\n    }\n    this.service.post_service(ApiserviceService.apisList.getLoadSlipUtlizationsForExport, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let truckRepsonseData = response['data'];\n        // this.loadSlipData = [];\n        this.loadslipUtilizationData = truckRepsonseData['loadSlipUtilizationDto'];\n        this.totalTTESeletecd = this.loadslipUtilizationData.shipmentTotalTTEUtil;\n        this.totalMaterialWeight = this.loadslipUtilizationData.shipmentTotalWtUtil;\n        this.totalTruckVolume = this.loadslipUtilizationData.shipmentTotalVolUtil;\n        // this.multistopTruckNumber = this.loadslipUtilizationData.truckNumber;\n        // this.multistopTruckType = this.loadslipUtilizationData.truckType;\n        // this.actualTruckType = this.loadslipUtilizationData.actualTruckType;\n        // this.variant_ONE = this.loadslipUtilizationData.variant1;\n        // this.destination = this.loadslipUtilizationData.destLoc;\n        // this.containerNum = this.loadslipUtilizationData.containerNum;\n        // this.truckType = this.loadslipUtilizationData.truckNumber;\n        // this.invoiceDataList = truckRepsonseData['delInvHeaders'];\n        // this.dataSource = new MatTableDataSource<PeriodicElement>(this.invoiceDataList);\n        if (truckRepsonseData.delInvHeaders && this.invoiceDataList.length == 0) {\n          this.invoiceDataList = truckRepsonseData.delInvHeaders;\n          this.dataSource = new MatTableDataSource<PeriodicElement>(this.invoiceDataList);\n        }\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  // for setting loadslip details data \n  setLoadSlipDraftData(responseData) {\n    // this.isLoading = true;\n    this.IS_RELEASE = ((responseData.loadslipDraftDataDtos) ? (responseData.loadslipDraftDataDtos.length > 0) : []) ? false : true;\n    if (responseData.loadslipDraftDataDtos) {\n      // this.totalTyres = 0;\n      // this.totalTubes = 0;\n      // this.totalFlaps = 0;\n      // this.totalValves = 0;\n      // this.totalPctr = 0;\n      responseData.loadslipDraftDataDtos.forEach(data => {\n        let newData = {\n          \"BATCH_CODE\": data.batchCode,\n          \"QTY\": data.loadedQty,\n          \"lineNumber\": data.lineNumber,\n          \"ITEM_DESCRIPTION\": data.itemDesc,\n          \"ITEM_ID\": data.itemId,\n          \"VOLUME\": data.grossVol,\n          \"WEIGHT\": data.weight,\n          \"TTE\": data.tte,\n          \"SUM_QTY\": data.availableQty,\n          \"ITEM_CATEGORY\": data.itemCategory,\n          \"MIN_PRIORITY\": data.priority,\n          \"isScannable\": data.isScannable,\n          // flap details\n          // \"FLAP_DESC\": data.flapSKU,\n          \"flapBatch\": data.flapBatch,\n          \"FLAP_CODE\": data.flapSKU,\n          \"FLAP_COMP_QTY\": data.flapCompQty,\n          \"totalFlapQty\": data.falpQty,\n\n          //tube details\n          \"tubeBatch\": data.tubeBatch,\n          \"TUBE_CODE\": data.tubeSKU,\n          \"TUBE_COMP_QTY\": data.tubeCompQty,\n          \"totalTubeQty\": data.tubeQty,\n\n          //value details\n          \"VALVE_DESC\": data.valveBatch,\n          \"VALVE_CODE\": data.valveSKU,\n          \"VALVE_COMP_QTY\": data.valveCompQty,\n          \"totalValueQty\": data.valveQty,\n          \"INVOICE_NUMBER\": data.invoiceNumber,\n          \"LINE_NUMBER\": data.lineNumber\n          // \"weight\": data.weight\n        };\n        this.loadSlipData.push(newData);\n        this.loadSlipData = [...this.loadSlipData];\n      });\n      this.weightSumm = 0;\n      this.qtySumm = 0;\n      this.metricTon = 0;\n      this.weightSummaryCell()\n      // this.totalTyres = responseData.totalTyres;\n      // this.totalTubes = responseData.totalTubes;\n      // this.totalFlaps = responseData.totalFlaps;\n      // this.totalValves = responseData.totalValves;\n      // this.totalPctr = responseData.totalpctr;\n      // this.totalTTESeletecd = responseData.tteUtil;\n      // this.totalMaterialWeight = responseData.weightUtil;\n      // this.totalTruckVolume = responseData.volumeUtil;\n      // this.totalLoadedQty = responseData.totalLoadedQty;\n      // this.totalTTE = responseData.totalTTE;\n      // this.totalWeight = responseData.totalWeight;\n      // this.totalVolume = responseData.totalVolume;\n    }\n    // this.isLoading = false;\n  }\n\n\n  onPageSizeChanged(event) {\n    this.page.limit = event;\n    this.page.pageSize = this.pageSize;\n  }\n\n  createLoadSlip() {\n    this.createLoadSlipSuccess = true;\n  }\n\n  // get Load slip Utilizations for export\n  getLoadSlipUtilazations(containerNumber) {\n    this.isLoading = true;\n    // this.clearFields();\n\n    // Here we getting only truck number based on the truck number we are getting container number ,destination location,truck type\n    let trackingObj = this.truckTypes.find(truckObj => truckObj.CONTAINER_NUM == containerNumber);\n    // whole object\n    let respData = trackingObj;\n    //splitting those details\n    this.truckType = respData.TRUCK_NUMBER;\n    this.containerNum = trackingObj.CONTAINER_NUM;\n    this.destination = trackingObj.DEST_LOC\n    this.truckT = trackingObj.TRUCK_TYPE;\n    this.transporter = trackingObj.SERVPROV;\n    this.indentCategory = trackingObj.ITEM_CATEGORY;\n    this.description = trackingObj.DEST_DESC;\n    this.countryOfDestination = trackingObj.COUNTRYNAME;\n    let data = {\n      'truckNumber': respData.TRUCK_NUMBER,\n      'trucktype': respData.TRUCK_TYPE,\n      'shipmentId': this.shipmentNumber,\n      'destLoc': this.destination,\n      'loadSlipId': this.loadslipID,\n      'type': 'FGS_EXP',\n      'actucaltrucktype': this.actualTruckType,\n      'variant1': this.variant_ONE,\n      'souceLoc':this.userSource,\n      'trasporter':this.transporter\n    }\n    this.service.post_service(ApiserviceService.apisList.getLoadSlipUtlizationsForExport, data).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let repsonseData = response['data']\n        this.invoiceDataList = repsonseData.delInvHeaders;\n        this.dataSource = new MatTableDataSource<PeriodicElement>(this.invoiceDataList);\n        this.loadslipUtilizationData = repsonseData['loadSlipUtilizationDto']\n        // If we selected the Container Table data is populated ,then Actual truck type or variant selected manual calculate the values\n        this.ManualTTE_Weight_volume_Calculation();\n        this.city = this.loadslipUtilizationData.city;\n        this.variant_ONE = this.loadslipUtilizationData.variant1;\n        this.getTruckTypesForDest(this.destination);\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  // Calculate manual TTE ,Material Weight ,Total Volume\n  ManualTTE_Weight_volume_Calculation() {\n    let loadslipItemLevelTTE = 0;\n    let LoadslipItemLevelWeight = 0;\n    let LoadslipItemLevelVolume = 0;\n    this.loadSlipData.forEach(row => {\n      if (row.QTY != null) {\n        let QTY = Number(row.QTY)\n        // Item Level Calculations\n        loadslipItemLevelTTE += QTY * (row.TTE ? row.TTE : 0);\n        //TODO\n        LoadslipItemLevelWeight += 1 * (row.WEIGHT ? row.WEIGHT : 0);\n        LoadslipItemLevelVolume += QTY * (row.VOLUME ? row.VOLUME : 0);\n      }\n    })\n    //total Material Weight  filled In the Truck\n    if (this.loadslipUtilizationData.truckWeightCapacity != null && this.loadslipUtilizationData.truckWeightCapacity != 0) {\n      this.totalMaterialWeight = ((LoadslipItemLevelWeight / this.loadslipUtilizationData.truckWeightCapacity) * 100);\n    }\n    else {\n      this.totalMaterialWeight = 0;\n    }\n    //Total  TTE filled int the Truck\n    if (this.loadslipUtilizationData.tteCapacity != null && this.loadslipUtilizationData.tteCapacity != 0) {\n      //Check TTE Util for Multi-Drop or Noramal Loadslip creation\n\n      this.totalTTESeletecd = ((loadslipItemLevelTTE / this.loadslipUtilizationData.tteCapacity) * 100);\n    } else {\n      this.totalTTESeletecd = 0;\n    }\n    // Total Volume Occupied in The Truck \n    if (this.loadslipUtilizationData.truckVolumeCapacity != null && this.loadslipUtilizationData.truckVolumeCapacity != 0) {\n      this.totalTruckVolume = ((LoadslipItemLevelVolume / this.loadslipUtilizationData.truckVolumeCapacity) * 100)\n    } else {\n      this.totalTruckVolume = 0;\n    }\n  }\n  // Load slips events trigger\n  eventCall(loadSlipID, eventType) {\n    if (loadSlipID) {\n      this.isLoading = true;\n      let data = {\n        loadslipID: loadSlipID,\n        eventType: eventType\n      }\n      this.service.post_service(ApiserviceService.apisList.updateLoadSlipevent, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.toastr.success(response['message']);\n          //Event type if Draft\n          let responseData = response['data']['data'];\n          this.bayArrivedDate = responseData.bayArrivedDate;\n          this.loadingStartDate = responseData.loadingStartDate;\n          this.loadingEndDate = responseData.loadingEndDate;\n          this.confirmedDate = responseData.confirmedDate;\n          this.releasedDate = responseData.releasedDate;\n          this.lsPrintDate = responseData.lsPrintDate;\n          this.bay = responseData.bay;\n\n          this.isLoading = false;\n\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n        }\n\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    } else {\n      this.toastr.warning(\"Please create a Loadslip\", \"!! Warning\");\n    }\n\n  }\n\n  //save as draft or print eEvents trigger\n  saveAsDraft_Print_trigger(eventType) {\n    this.isLoading = true;\n    let linenumber;\n    let newDraftableDataArray = [];\n    this.loadSlipData.forEach((data, index) => {\n      if (data.QTY) {\n        linenumber = index + 1;\n        let newArray = {\n          \"batchCode\": data.BATCH_CODE,\n\n          \"falpQty\": data.totalFlapQty,\n          \"flapBatch\": data.flapBatch,\n          \"flapSKU\": data.FLAP_CODE,\n\n          \"grossVol\": data.VOLUME,\n          \"grossWt\": data.WEIGHT,\n          \"itemDesc\": data.ITEM_DESCRIPTION,\n          \"itemId\": data.ITEM_ID,\n          \"lineNumber\": linenumber,\n          \"loadedQty\": data.QTY,\n          'itemCategory': data.ITEM_CATEGORY,\n          \"tte\": data.TTE,\n          \"invoiceNumber\": data.INVOICE_NUMBER,\n\n          \"tubeBatch\": data.tubeBatch,\n          \"tubeQty\": data.totalTubeQty,\n          \"tubeSKU\": data.TUBE_CODE,\n          // \"valveBatch\": data.VALVE_DESC,\n          \"valveBatch\": '',\n          \"valveQty\": data.totalValueQty,\n          \"valveSKU\": data.VALVE_CODE,\n          // 'invoiceNumber': data.INVOICE_NUMBER\n        }\n        newDraftableDataArray.push(newArray);\n      }\n    });\n    if (this.loadslipID) {\n      if (!this.isConfirmed) {\n        this.finalInvoiceList = [];\n        for (let i = 0; i < this.invoiceDataList.length; i++) {\n          if (this.invoiceDataList[i].loadslipId == this.loadslipID) {\n            this.finalInvoiceList.push(this.invoiceDataList[i].invoiceNumber);\n          }\n        }\n      }\n      //Check whether it is save or Update\n      this.IsUpdate = true\n    } else {\n      this.IsUpdate = false;\n    }\n    let sendbleTTEUtil = 0;\n    let sendableWEIGHTUtil = 0;\n    let sendableVOLUMEUtil = 0;\n    let multiloadslipItemLevelTTE = 0;\n    let multiLoadslipItemLevelWeight = 0;\n    let multiLoadslipItemLevelVolume = 0;\n    if (this.checkMultiStop()) {\n      // MULTI STOP TTE , WEIGHT, VOLUME\n      this.loadSlipData.forEach(row => {\n        if (row.QTY != null) {\n          let QTY = Number(row.QTY)\n          multiloadslipItemLevelTTE += QTY * (row.TTE ? row.TTE : 0);\n          //Todo\n          multiLoadslipItemLevelWeight += 1 * (row.WEIGHT ? row.WEIGHT : 0);\n          multiLoadslipItemLevelVolume += QTY * (row.VOLUME ? row.VOLUME : 0);\n        }\n      })\n      //total Material Weight  filled In the Truck\n      if (this.loadslipUtilizationData.truckWeightCapacity != null && this.loadslipUtilizationData.truckWeightCapacity != 0) {\n        sendableWEIGHTUtil = ((multiLoadslipItemLevelWeight / this.loadslipUtilizationData.truckWeightCapacity) * 100);\n      }\n      //Total  TTE filled int the Truck\n      if (this.loadslipUtilizationData.tteCapacity != null && this.loadslipUtilizationData.tteCapacity != 0) {\n        //Check TTE Util for Multi-Drop or Noramal Loadslip creation\n        sendbleTTEUtil = ((multiloadslipItemLevelTTE / this.loadslipUtilizationData.tteCapacity) * 100);\n      }\n      // Total Volume Occupied in The Truck \n      if (this.loadslipUtilizationData.truckVolumeCapacity != null && this.loadslipUtilizationData.truckVolumeCapacity != 0) {\n        sendableVOLUMEUtil = ((multiLoadslipItemLevelVolume / this.loadslipUtilizationData.truckVolumeCapacity) * 100)\n      }\n      // sendbleTTEUtil = Number(this.totalTTESeletecd - this.loadslipUtilizationData.shipmentTotalTTEUtil);\n      // sendableWEIGHTUtil = Number(this.totalMaterialWeight ? (this.totalMaterialWeight - this.loadslipUtilizationData.shipmentTotalWtUtil) : 0);\n      // sendableVOLUMEUtil = Number(this.totalTruckVolume ? (this.totalTruckVolume - this.loadslipUtilizationData.shipmentTotalVolUtil) : 0);\n    } else {\n      // SINGLE STOP TTE ,WEIGHT, VOLUME\n      sendbleTTEUtil = Number(this.totalTTESeletecd);\n      sendableWEIGHTUtil = Number(this.totalMaterialWeight ? this.totalMaterialWeight : 0);\n      sendableVOLUMEUtil = Number(this.totalTruckVolume ? this.totalTruckVolume : 0)\n    }\n\n\n    let saveasDraftData = {\n      'source': this.userSource,\n      'destination': this.destination,\n      'truckNumber': this.truckType,\n      'containerNum': this.containerNum,\n      'loadslipDraftDataDtos': newDraftableDataArray,\n      'action': eventType,\n      'loadSlipId': this.loadslipID,\n      'tteUtil': sendbleTTEUtil,\n      'weightUtil': sendableWEIGHTUtil,\n      'volumeUtil': sendableVOLUMEUtil,\n      'totalTyres': this.totalTyres,\n      'totalTubes': this.totalTubes,\n      'totalFlaps': this.totalFlaps,\n      'totalValves': this.totalValves,\n      'totPctr': this.totalPctr,\n      'otherQty':this.totalOthersCount,\n      'totalLoadedQty': this.totalLoadedQty,\n      'totalTTE': this.totalTTE,\n      'totalWeight': this.totalWeight,\n      'totalVolume': this.totalVolume,\n      'shipTo': this.ShipTo,\n      'invoiceList': this.finalInvoiceList,\n      'type': 'FGS_EXP',\n      'shipmentID': this.shipmentNumber,\n      'actualTruckType': this.actualTruckType,\n      'variant1': this.variant_ONE,\n      'dropSeq': this.dropSeq\n    }\n    // if (eventType != 'PRINT') {\n    //   //check type of Save Single Stop or Multi Stop\n    //   if (this.checkMultiStop()) {\n    //     this.saveAsDraftMultiStopAPI(saveasDraftData)\n    //   } else {\n    //     // for saving loadslip for export in draft mode\n    //     this.saveLoadslipDraftForExport(saveasDraftData);\n    //   }\n    // }\n    // else {\n    //   //check type of Save Single Stop or Multi Stop\n    //   if (this.checkMultiStop()) {\n    //     this.MultiStopPrintServerAPI(saveasDraftData)\n    //   } else {\n    //     // for print  loadslip for export \n    //     this.saveLoadslipPrintForExport(saveasDraftData);\n    //   }\n    // }\n    let HTTPAPI;\n    if (this.truckType) {\n      if (this.checkMultiStop()) {\n        HTTPAPI = ApiserviceService.apisList.multipleDropLoadSlip;\n        this.saveLoadslipDraftForExport(saveasDraftData, HTTPAPI)\n      } else {\n        HTTPAPI = ApiserviceService.apisList.loadslidSaveasDraft\n        // for saving loadslip for export in draft mode\n        this.saveLoadslipDraftForExport(saveasDraftData, HTTPAPI);\n      }\n    } else {\n      this.isLoading = false;\n      this.toastr.error(\"Please select a Truck\", \" ! Error \")\n\n    }\n  }\n\n  // for saving loadslip for export in draft mode\n  saveLoadslipDraftForExport(saveasDraftData, HTTPAPI) {\n    this.isLoading = true;\n    this.service.post_service(HTTPAPI, saveasDraftData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.toastr.success(response['message']);\n        this.loadSlipData = [];\n        // let responseData = response['data'].loadslipDraftDto.loadslipDraftDataDtos;\n        let responseData = response['data'].loadslipDraftDto ? (response['data'].loadslipDraftDto) : {};\n        this.totalOthersCount=response['data'].otherQty;\n        this.totalQuantity = response['data'].totQty;\n        this.setLoadSlipDraftData(responseData);\n        // responseData.forEach(data => {\n        //   let newData = {\n        //     \"BATCH_CODE\": data.batchCode,\n        //     \"qty\": data.loadedQty,\n        //     \"QTY\": data.loadedQty,\n        //     \"lineNumber\": data.lineNumber,\n        //     \"ITEM_DESCRIPTION\": data.itemDesc,\n        //     \"ITEM_ID\": data.itemId,\n        //     \"VOLUME\": data.grossVol,\n        //     \"WEIGHT\": data.grossWt,\n        //     \"TTE\": data.tte,\n        //     \"SUM_QTY\": data.availableQty,\n        //     \"ITEM_CATEGORY\": data.itemCategory,\n        //     \"MIN_PRIORITY\": data.priority,\n        //     \"isScannable\": data.isScannable,\n        //     // flap details\n        //     // \"FLAP_DESC\": data.flapSKU,\n        //     \"flapBatch\": data.flapBatch,\n        //     \"FLAP_CODE\": data.flapSKU,\n        //     \"FLAP_COMP_QTY\": data.flapCompQty,\n        //     \"totalFlapQty\": data.falpQty,\n\n        //     //tube details\n        //     \"tubeBatch\": data.tubeBatch,\n        //     \"TUBE_CODE\": data.tubeSKU,\n        //     \"TUBE_COMP_QTY\": data.tubeCompQty,\n        //     \"totalTubeQty\": data.tubeQty,\n\n        //     //value details\n        //     \"VALVE_DESC\": data.valveBatch,\n        //     \"VALVE_CODE\": data.valveSKU,\n        //     \"VALVE_COMP_QTY\": data.valveCompQty,\n        //     \"totalValueQty\": data.valveQty,\n        //     \"INVOICE_NUMBER\": data.invoiceNumber,\n        //     \"LINE_NUMBER\": data.lineNumber\n        //   };\n        //   this.loadSlipData.push(newData);\n        //   this.loadSlipData = [...this.loadSlipData];\n        // });\n        if (this.loadslipID) {\n          this.lsPrintDate = response['data'].lsPrintDate;\n        }\n        let BASE64 = response['data'].loadslip;\n        if (BASE64) {\n          const linkSource = 'data:application/pdf;base64,' + BASE64;\n          var element = document.createElement('a');\n          element.setAttribute('href', linkSource);\n          element.setAttribute('download', response['data'].loadSlipId);\n          document.body.appendChild(element);\n          element.click();\n          document.body.removeChild(element);\n        }\n        if (response['data'].loadSlipId) {\n          // this.showLoadslipInModal(response['data'].loadSlipId, \"DRAFT\");\n          this.showLoadslipInModal(response['data'].loadSlipId, saveasDraftData.action, this.IsUpdate, response['data']);\n        }\n        this.isLoading = false;\n\n      } else {\n        // this.openloadsliperrorPopup(response['data'])\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    });\n  }\n  // // for print  loadslip for export \n  // saveLoadslipPrintForExport(saveasDraftData) {\n  //   this.isLoading = true;\n  //   this.service.downloadPDF(ApiserviceService.apisList.loadslidSaveasDraft, saveasDraftData).subscribe((response: any) => {\n  //     if (response.statusCode == 200) {\n  //       if (this.loadslipID) {\n  //         this.lsPrintDate = response['data'].lsPrintDate;\n  //       }\n  //       const linkSource = 'data:application/pdf;base64,' + response['data'].PDF_DATA;\n  //       var element = document.createElement('a');\n  //       element.setAttribute('href', linkSource);\n  //       element.setAttribute('download', response['data'].LOADSLIP_ID);\n  //       document.body.appendChild(element);\n  //       element.click();\n  //       document.body.removeChild(element);\n  //       if (response['data'].LOADSLIP_ID) {\n  //         // PRINT\n  //         // this.showLoadslipInModal(response['data'].LOADSLIP_ID, \"PRINT\");\n  //         this.showLoadslipInModal(response['data'].LOADSLIP_ID, \"PRINT\", this.IsUpdate, response['data']);\n  //       }\n  //       this.isLoading = false;\n  //     } else {\n  //       if (response['data']) {\n  //         this.openloadsliperrorPopup(response['data'])\n  //       }\n  //       this.isLoading = false;\n  //     }\n  //   }, (err) => {\n  //     this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n  //     this.isLoading = false;\n  //   });\n  // }\n\n\n  // // save As Draft Multi stop API\n  // saveAsDraftMultiStopAPI(saveasDraftData) {\n  //   this.isLoading = true;\n  //   this.service.post_service(ApiserviceService.apisList.multipleDropLoadSlip, saveasDraftData).subscribe(response => {\n  //     if (response['statusCode'] == 200) {\n\n  //       this.toastr.success(response['message']);\n  //       this.loadSlipData = [];\n  //       let responseData = response['data'].loadslipDraftDto.loadslipDraftDataDtos;\n  //       responseData.forEach(data => {\n  //         let newData = {\n  //           \"BATCH_CODE\": data.batchCode,\n  //           \"qty\": data.loadedQty,\n  //           \"QTY\": data.loadedQty,\n  //           \"lineNumber\": data.lineNumber,\n  //           \"ITEM_DESCRIPTION\": data.itemDesc,\n  //           \"ITEM_ID\": data.itemId,\n  //           \"VOLUME\": data.grossVol,\n  //           \"WEIGHT\": data.grossWt,\n  //           \"TTE\": data.tte,\n  //           \"SUM_QTY\": data.availableQty,\n  //           \"ITEM_CATEGORY\": data.itemCategory,\n  //           \"MIN_PRIORITY\": data.priority,\n  //           \"isScannable\": data.isScannable,\n  //           // flap details\n  //           // \"FLAP_DESC\": data.flapSKU,\n  //           \"flapBatch\": data.flapBatch,\n  //           \"FLAP_CODE\": data.flapSKU,\n  //           \"FLAP_COMP_QTY\": data.flapCompQty,\n  //           \"totalFlapQty\": data.falpQty,\n\n  //           //tube details\n  //           \"tubeBatch\": data.tubeBatch,\n  //           \"TUBE_CODE\": data.tubeSKU,\n  //           \"TUBE_COMP_QTY\": data.tubeCompQty,\n  //           \"totalTubeQty\": data.tubeQty,\n\n  //           //value details\n  //           \"VALVE_DESC\": data.valveBatch,\n  //           \"VALVE_CODE\": data.valveSKU,\n  //           \"VALVE_COMP_QTY\": data.valveCompQty,\n  //           \"totalValueQty\": data.valveQty,\n  //           \"INVOICE_NUMBER\": data.invoiceNumber,\n  //           \"LINE_NUMBER\": data.lineNumber\n  //         };\n  //         this.loadSlipData.push(newData);\n  //         this.loadSlipData = [...this.loadSlipData];\n  //         console.log(this.loadSlipData, \"this.loadSlipData\")\n  //       });\n  //       if (response['data'].loadSlipId) {\n  //         // this.showLoadslipInModal(response['data'].loadSlipId, \"DRAFT\");\n  //         this.showLoadslipInModal(response['data'].loadSlipId, \"DRAFT\", this.IsUpdate, response['data']);\n  //       }\n  //       this.isLoading = false;\n\n  //     } else {\n  //       if (response['data']) {\n  //         this.openloadsliperrorPopup(response['data'])\n  //       }\n  //       this.isLoading = false;\n  //     }\n  //   })\n  // }\n\n\n  // // Signle stop or Loadslip updation Print API\n  // MultiStopPrintServerAPI(saveasDraftData) {\n  //   this.isLoading = true;\n  //   this.service.downloadPDF(ApiserviceService.apisList.multipleDropLoadSlip, saveasDraftData).subscribe((response: any) => {\n  //     if (response.statusCode == 200) {\n  //       if (this.loadslipID) {\n  //         this.lsPrintDate = response['data'].lsPrintDate;\n  //       }\n  //       const linkSource = 'data:application/pdf;base64,' + response['data'].PDF_DATA;\n  //       var element = document.createElement('a');\n  //       element.setAttribute('href', linkSource);\n  //       element.setAttribute('download', response['data'].LOADSLIP_ID);\n  //       document.body.appendChild(element);\n  //       element.click();\n  //       document.body.removeChild(element);\n  //       //PRINT\n  //       // this.showLoadslipInModal(response['data'].LOADSLIP_ID, \"PRINT\");\n  //       this.showLoadslipInModal(response['data'].LOADSLIP_ID, \"PRINT\", this.IsUpdate, response['data']);\n  //       this.isLoading = false;\n  //     } else {\n  //       if (response['data']) {\n  //         this.openloadsliperrorPopup(response['data'])\n  //       }\n  //       this.isLoading = false;\n  //     }\n  //     console.log(response)\n  //   }, (err) => {\n  //     console.log(\"Error\", err);\n  //     this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n  //     this.isLoading = false;\n  //   })\n  // }\n\n\n  //open loadslip error list \n  openloadsliperrorPopup(errorList) {\n    const dialogRef = this.dialog.open(CreateLoadslipsErrorPopupComponent, {\n      data: errorList,\n      disableClose: true\n    });\n  }\n\n\n  // Show loadslipId with success POPUP\n  showLoadslipInModal(value, typeofevent, IsUpdate, response) {\n    const dialogRef = this.dialog.open(LoadslipSuccessDialogComponent, {\n      data: {\n        loadslipId: value,\n        type: typeofevent,\n        isupdate: IsUpdate,\n        loadslipData: response\n      },\n      disableClose: true\n    });\n    //reset the data which user selected after successful load slip creation\n    if (!this.loadslipID) {\n      this.clearFields();\n      this.ShipTo = '';\n    }\n  }\n\n  clearFields() {\n    if (!this.checkMultiStop()) {\n      this.totalMaterialWeight = ''\n      this.totalTTESeletecd = ''\n      this.totalTruckVolume = '';\n    }\n    this.totalTyres = '';\n    this.totalTubes = '';\n    this.totalFlaps = '';\n    this.totalValves = '';\n    this.destination = '';\n    this.truckType = '';\n    this.containerNum = ''\n    // this.loadSlipData = [];\n    // this.invoiceDataList = [];\n    // this.masterToggle();\n  }\n\n  //clear user enter data\n  cancelLoadslipCreation() {\n    this.isLoading = true;\n    const dialogRef = this.dialog.open(LoadslipCancelPopupComponent, { disableClose: true });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.totalMaterialWeight = ''\n        this.totalTTESeletecd = ''\n        this.totalTruckVolume = '';\n        this.totalTyres = '';\n        this.totalTubes = '';\n        this.totalValves = '';\n        this.destination = '';\n        this.totalFlaps = '';\n        this.truckType = '';\n        this.loadSlipData = [];\n        this.containerNum = '';\n        this.truckT = '';\n        this.transporter = '';\n        this.loadslipCategory = '';\n        this.ShipTo = '';\n        this.actualTruckType = '';\n        this.variant_ONE = '';\n        this.freightAvailableflag = '';\n        this.loadSlipData.forEach(data => {\n          data.qty = 0;\n        })\n        this.loadSlipData = [...this.loadSlipData];\n        this.description ='';\n        this.indentCategory='';\n        this.city='';\n      }\n      this.isLoading = false;\n    })\n  }\n\n\n  // Download loadslip after trigger CONFIRM event\n  downloadLoadslip() {\n    this.isLoading = true;\n    this.service.get_service(ApiserviceService.apisList.printLoadslip + \"?loadslipId=\" + this.loadslipID).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        let responseData = response['data'];\n        const linkSource = 'data:application/pdf;base64,' + responseData;\n        var element = document.createElement('a');\n        element.setAttribute('href', linkSource);\n        element.setAttribute('download', this.loadslipID);\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n\n        this.isLoading = false;\n        this.toastr.success(response['message']);\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    if (this.viewType) {\n      const numSelected = this.selection.selected.length;\n      const numRows = this.selectedInvoiceListItems.length;\n      return numSelected === numRows;\n    } else {\n      const numSelected = this.selection.selected.length;\n      const numRows = this.invoiceDataList.length;\n      return numSelected === numRows;\n    }\n\n  }\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.viewType) {\n      this.isAllSelected() ? this.selection.clear() : this.selectedInvoiceListItems.forEach(row => this.selection.select(row));\n    } else {\n      this.isAllSelected() ? this.selection.clear() : this.invoiceDataList.forEach(row => this.selection.select(row));\n    }\n  }\n\n  // for confirm invoice list for export\n  confirmInvoiceForExport() {\n    this.isConfirmed = true;\n    this.finalInvoiceList = [];\n    for (const iterator of this.selection.selected) {\n      this.invoiceData = iterator['invoiceNumber'];\n      this.finalInvoiceList.push(this.invoiceData);\n    }\n    let body = {\n      'invoiceList': this.finalInvoiceList\n    }\n    if (this.finalInvoiceList.length) {\n      this.loadSlipData = [];\n      $('#myModal').modal('hide');\n      this.isLoading = true;\n      this.service.post_service(ApiserviceService.apisList.sendInvoiceList, body).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          this.isLoading = false;\n          let data = response['data'];\n          this.totalTyres = 0;\n          this.totalTubes = 0;\n          this.totalFlaps = 0;\n          this.totalValves = 0;\n          this.totalLoadedQty = 0;\n          this.totalTTE = 0;\n          this.totalWeight = 0;\n          this.totalPctr = 0;\n          \n          this.totalVolume = 0;this.totalOthersCount=0;\n          data['exportInfoDtoList'].forEach(data => {\n            let newData = {\n              \"BATCH_CODE\": data.batchCode,\n              \"qty\": data.loadedQty,\n              \"lineNumber\": data.lineNumber,\n              \"ITEM_DESCRIPTION\": data.description,\n              \"ITEM_ID\": data.itemId,\n              \"VOLUME\": data.grossVol,\n              \"WEIGHT\": data.weight,\n              \"TTE\": data.tte,\n              \"SUM_QTY\": data.availableQty,\n              \"QTY\": data.qty,\n              \"ITEM_CATEGORY\": data.category,\n              \"MIN_PRIORITY\": data.priority,\n              \"isScannable\": data.isScannable,\n              // flap details\n              // \"FLAP_DESC\": data.flapSKU,\n              \"flapBatch\": data.flapBatch,\n              \"FLAP_CODE\": data.flapSKU,\n              \"FLAP_COMP_QTY\": data.flapCompQty,\n              \"totalFlapQty\": data.falpQty,\n              \"LINE_NUMBER\": data.sapLineNo,\n\n              //tube details\n              \"tubeBatch\": data.tubeBatch,\n              \"TUBE_CODE\": data.tubeSKU,\n              \"TUBE_COMP_QTY\": data.tubeCompQty,\n              \"totalTubeQty\": data.tubeQty,\n\n              //value details\n              \"VALVE_DESC\": data.valveBatch,\n              \"VALVE_CODE\": data.valveSKU,\n              \"VALVE_COMP_QTY\": data.valveCompQty,\n              \"totalValueQty\": data.valveQty,\n              \"INVOICE_NUMBER\": data.invoiceNumber,\n              // \"weight\": data.weight\n            };\n            let qty = Number(data.qty)\n            // totalweight += qty * (data.grossWt ? data.grossWt : 0);\n            // totalTTE += qty * (data.tte ? data.tte : 0);\n            // totalVolume += qty * (data.volume ? data.volume : 0);\n            this.totalTTE += qty * (data.tte ? data.tte : 0);\n            this.totalWeight += 1 * (data.weight ? data.weight : 0);\n            this.totalVolume += qty * (data.grossVol ? data.grossVol : 0);\n\n            // if (data.classification == 'TYRE') {\n            //   this.totalTyres += qty;\n            // } else if (data.classification == 'TUBE') {\n            //   this.totalTubes += qty;\n            // } else if (data.classification == 'FLAP') {\n            //   this.totalFlaps += qty;\n            // } else if (data.classification == 'VALVE') {\n            //   this.totalValves += qty;\n            // } else if (data.classification == 'PCTR') {\n            //   this.totalPctr += qty;\n            // }\n            switch (data.classification) {\n              // for Total tubes\n              case 'TUBE':\n                this.totalTubes += parseInt(data.qty ? data.qty : 0);\n                break;\n              // for total Flaps\n              case 'FLAP':\n                this.totalFlaps += parseInt(data.qty ? data.qty : 0);\n                break;\n              // for Valves\n              case 'VALVE':\n                this.totalValves += parseInt(data.qty ? data.qty : 0);\n                break;\n    \n              case 'TYRE':\n                // if it is PCTR\n                if (data.category === 'PCTR') {\n                  this.totalPctr += parseInt(data.qty ? data.qty : 0);\n                  //It it is tyre\n                } else {\n                  this.totalTyres += parseInt(data.qty);\n                  this.totalTubes += parseInt(data.totalTubeQty ? data.totalTubeQty : 0);\n                  this.totalFlaps += parseInt(data.totalFlapQty ? data.totalFlapQty : 0);\n                  this.totalValves += parseInt(data.totalValueQty ? data.totalValueQty : 0);\n                }\n                break;\n              //  default is tyres\n              default:\n                // For others \n                this.totalOthersCount += Number(data.qty ? data.qty : 0);\n                break;\n            }\n            // this.totalTyres += qty;\n            // this.totalTubes += qty * (data.TUBE_COMP_QTY ? data.TUBE_COMP_QTY : 0);\n            // this.totalFlaps += qty * (data.FLAP_COMP_QTY ? data.FLAP_COMP_QTY : 0);\n            // this.totalValves += qty * (data.VALVE_COMP_QTY ? data.VALVE_COMP_QTY : 0);\n\n            this.totalLoadedQty += qty;\n            this.loadSlipData.push(newData);\n            this.loadSlipData = [...this.loadSlipData];\n          });\n          this.weightSumm = 0;\n          this.qtySumm = 0;\n          this.metricTon = 0;\n          this.weightSummaryCell();\n          if (this.loadslipUtilizationData != undefined && this.loadslipUtilizationData.truckWeightCapacity != null && this.loadslipUtilizationData.truckWeightCapacity != 0) {\n            if (this.checkMultiStop()) {\n              this.totalMaterialWeight = ((this.totalWeight / this.loadslipUtilizationData.truckWeightCapacity) * 100);\n              this.totalMaterialWeight = (this.totalMaterialWeight + this.loadslipUtilizationData.shipmentTotalWtUtil) - this.loadslipWtUtil;\n            } else {\n              this.totalMaterialWeight = ((this.totalWeight / this.loadslipUtilizationData.truckWeightCapacity) * 100);\n            }\n\n            // this.totalMaterialWeight = ((this.totalWeight / this.loadslipUtilizationData.truckWeightCapacity) * 100);\n          }\n\n          if (this.loadslipUtilizationData != undefined && this.loadslipUtilizationData.tteCapacity != null && this.loadslipUtilizationData.tteCapacity != 0) {\n            //Check TTE Util for Multi-Drop or Noramal Loadslip creation\n            if (this.checkMultiStop()) {\n              this.totalTTESeletecd = ((this.totalTTE / this.loadslipUtilizationData.tteCapacity) * 100);\n              this.totalTTESeletecd = (this.totalTTESeletecd + this.loadslipUtilizationData.shipmentTotalTTEUtil) - this.loadslipTteUtil;\n            } else {\n              this.totalTTESeletecd = ((this.totalTTE / this.loadslipUtilizationData.tteCapacity) * 100);\n            }\n\n            // this.totalTTESeletecd = ((this.totalTTE / this.loadslipUtilizationData.tteCapacity) * 100);\n          }\n\n          if (this.loadslipUtilizationData != undefined && this.loadslipUtilizationData.truckVolumeCapacity != null && this.loadslipUtilizationData.truckVolumeCapacity != 0) {\n            if (this.checkMultiStop()) {\n              this.totalTruckVolume = ((this.totalVolume / this.loadslipUtilizationData.truckVolumeCapacity) * 100);\n              this.totalTruckVolume = (this.totalTruckVolume + this.loadslipUtilizationData.shipmentTotalVolUtil) - this.loadslipVolUtil;\n            } else {\n              this.totalTruckVolume = ((this.totalVolume / this.loadslipUtilizationData.truckVolumeCapacity) * 100)\n            }\n\n\n\n            // this.totalTruckVolume = ((this.totalVolume / this.loadslipUtilizationData.truckVolumeCapacity) * 100)\n          }\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Some thing went wrong\", \"! Error\")\n        }\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      });\n    } else {\n      // this.toastr.error(\"Please select invoice\", \"!Error\");\n      // without Selection of invoices we have clear values of tteutile,weightutil,volumeUtil,tubes,flaps,valves,tteQty,totalLoadedQty\n\n      // for multistop no need empty the values tteUtil,weightUtil,volumeUtil\n      // get the utlization values assign those values\n      // we can't reset the values because previous loadslip contains the tte util values\n      // without shipment , in multistop selected invoices, not created loadslip, then again unselected invoices at this situtation we need take values from utlization values  \n      if (this.checkMultiStop()) {\n        this.totalTTESeletecd = this.loadslipUtilizationData.shipmentTotalTTEUtil;\n        this.totalMaterialWeight = this.loadslipUtilizationData.shipmentTotalWtUtil;\n        this.totalTruckVolume = this.loadslipUtilizationData.shipmentTotalVolUtil;\n      } else {\n        this.totalMaterialWeight = '';\n        this.totalTTESeletecd = '';\n        this.totalTruckVolume = '';\n      }\n\n      this.totalTyres = '';\n      this.totalTubes = '';\n      this.totalFlaps = '';\n      this.totalValves = '';\n      this.totalLoadedQty = '';\n      this.loadSlipData = [];\n      this.totalTTE = 0;\n      this.totalVolume = 0;\n      this.totalWeight = 0;\n      this.totalPctr = '';\n    }\n\n\n  }\n\n  // for open invoice list modal\n  onOpenModal() {\n\n    // if (!this.isConfirmed || !this.selection.selected.length) {\n    let selectedItems = [];\n    for (let i = 0; i < this.invoiceDataList.length; i++) {\n      // if (this.invoiceDataList[i].loadslipId != null) {\n      //   selectedItems.push(this.invoiceDataList[i]);\n      // } else {\n      this.loadSlipData.forEach(element => {\n        if (element.INVOICE_NUMBER == this.invoiceDataList[i].invoiceNumber) {\n          selectedItems.push(this.invoiceDataList[i]);\n          return;\n        }\n      });\n\n      // }\n      // }\n      this.selection = new SelectionModel<PeriodicElement>(true, selectedItems);\n    }\n    $('#myModal').modal('show');\n  }\n\n\n  weightSummaryCell() {\n    //  return \"Total Weight: \" + 10\n    // return 'Weight summary: ' + this.loadSlipData.map(row => row['WEIGHT'])\n    //   .reduce((res, cell) => res += cell, 0);\n\n    this.loadSlipData.forEach((item) => {\n      this.weightSumm += item.WEIGHT;\n      this.qtySumm += item.QTY;\n    });\n\n    this.metricTon = this.weightSumm / 1000;\n  }\n\n    // Print Excel\n    export(): void {\n      this.isLoading = true;\n      this.service.get_service_DownLoadExcel(ApiserviceService.apisList.printLoadslip + '?loadslipId=' + this.loadslipID + '&excel=' + true).subscribe(response => {\n        if (response) {\n          // Uncomment when export excel is generated in backend\n          var blob = new Blob([response.body], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n          // var filename = 'LoadslipDetails.xlsx';\n          var filename = this.loadslipID+'.xlsx';\n          const link = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          document.body.appendChild(a);\n          a.setAttribute('style', 'display: none');\n          a.href = link;\n          a.download = filename\n          a.click();\n          window.URL.revokeObjectURL(link);\n          a.remove();\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n  \n    }\n\n  // qtySummaryCell() {\n  //   // return 'QTY summary: ' + this.loadSlipData.map(row => row['QTY'])\n  //   //   .reduce((res, cell) => res += cell, 0);\n  //   return \"QY\" + 10\n  // }\n\n  // summaryForProp1(cells: any[]) {\n  //   return 'Inline summary: ' + cells[0];\n  // }\n\n  // summaryForProp2() {\n  //   return this.loadSlipData.map(row => row['QTY'])\n  //     .reduce((res, cell) => res += cell, 0);\n  // }\n}\n\n\n\nexport interface State {\n  value: string;\n  viewValue: string;\n}\nexport interface TruckType {\n  value: string;\n  viewValue: string;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { customMaterialModule } from '../../angular-material';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ExportCreateLoadSlipComponent } from './export-create-load-slip.component';\nimport { ShareModuleModule } from 'src/app/public/share-module/share-module.module';\nimport { LoadslipCancelPopupComponent } from 'src/app/public/loadslip-cancel-popup/loadslip-cancel-popup.component';\nimport { LoadslipSuccessDialogComponent } from 'src/app/public/loadslip-success-dialog/loadslip-success-dialog.component';\nimport { CreateLoadslipsErrorPopupComponent } from 'src/app/public/create-loadslips-error-popup/create-loadslips-error-popup.component';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\n\nconst routes: Routes = [\n  { path: '', component: ExportCreateLoadSlipComponent },\n  { path: ':loadslipId', component: ExportCreateLoadSlipComponent },\n  { path: ':loadslipId/:viewType', component: ExportCreateLoadSlipComponent },\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    FormsModule,\n    customMaterialModule,\n    LoaderModule,\n    NgxDatatableModule,\n    ShareModuleModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    ExportCreateLoadSlipComponent,\n  ],\n  entryComponents: [\n    ExportCreateLoadSlipComponent,\n    LoadslipCancelPopupComponent,\n    LoadslipSuccessDialogComponent,\n    CreateLoadslipsErrorPopupComponent,\n  ]\n})\nexport class ExportCreateLoadSlipModule { }\n"],"sourceRoot":""}