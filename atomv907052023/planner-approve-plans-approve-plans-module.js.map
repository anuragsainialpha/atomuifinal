{"version":3,"sources":["webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts","webpack:///./src/app/planner/approve-plans/approve-plans.component.html","webpack:///./src/app/planner/approve-plans/approve-plans.component.scss","webpack:///./src/app/planner/approve-plans/approve-plans.component.ts","webpack:///./src/app/planner/approve-plans/approve-plans.module.ts","webpack:///./src/app/public/approve-plan-errors/approve-plan-errors.component.html","webpack:///./src/app/public/approve-plan-errors/approve-plan-errors.component.scss","webpack:///./src/app/public/approve-plan-errors/approve-plan-errors.component.ts"],"names":[],"mappings":"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","file":"planner-approve-plans-approve-plans-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6 class=\\\"manulal-plan-header\\\">\\n    Dispatch Plan > Approve Plan\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n  <div class=\\\"manualplan-fields\\\">\\n    <div class=\\\"col-md-12 row\\\" *ngIf=\\\"isShow\\\">\\n      <div class=\\\"col-md-12 padding-right-40\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"formPicker\\\" placeholder=\\\"From Date\\\" [(ngModel)]=\\\"fromDate\\\"\\n                  name=\\\"fromDate\\\" (dateChange)=\\\"addEvent('fromDate', $event)\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"formPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #formPicker disabled=\\\"false\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput disabled [matDatepicker]=\\\"toPicker\\\" [min]=\\\"fromDate\\\" placeholder=\\\"To Date\\\"\\n                  [(ngModel)]=\\\"toDate\\\" name=\\\"toDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toPicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toPicker [disabled]=\\\"!fromDate\\\"></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <!-- check_Role_DP_REP == roles.planner3  -->\\n          <!-- <div class=\\\"col-md-1 pl-0\\\" *ngIf=\\\"service.isDPREPRole()\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Source\\\" (keyup)=\\\"getfilterSource($event)\\\" autocomplete=\\\"off\\\"\\n                [matAutocomplete]=\\\"sourceAutocomplete\\\" [(ngModel)]=\\\"sourceCode\\\" name=\\\"source\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\">\\n                <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n                  <span matTooltip={{list.value}}>{{list.value}} - ({{list.description}})</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n          </div> -->\\n          <!-- Source With Drop doem for DPREP and disable input field for NORMAL USERs -->\\n          <div class=\\\"col-md-1 pl-0\\\" *ngIf = \\\"isSoureDisable()\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Source\\\" (keyup)=\\\"getfilterSource($event)\\\" [disabled]=\\\"(isSoureDisable()) \\\"\\n                autocomplete=\\\"off\\\" [matAutocomplete]=\\\"sourceAutocomplete\\\" [(ngModel)]=\\\"sourceCode\\\" name=\\\"source\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\" >\\n                <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n                  <span matTooltip={{list.value}}>{{list.value}} - ({{list.description}})</span>\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\" *ngIf = \\\"!isSoureDisable()\\\">\\n              <div class=\\\"form-group cust-form-group\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                  <mat-select placeholder=\\\"Source\\\" [(ngModel)]=\\\"sourceCodeList\\\" name=\\\"sourceCodeList\\\"\\n                    multiple [disabled]=\\\"(isSoureDisable()) \\\">\\n                    <mat-option *ngFor=\\\"let source of openPlanSourceList\\\" [value]=\\\"source\\\">{{source}}</mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Destination\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n                  [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\" (keyup)=\\\"getUserSearchData($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\"\\n                    (click)=\\\"setDestDescription(list.description)\\\"\\n                    (onSelectionChange)=\\\"setDestDescription(list.description)\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Destination Description\\\" aria-label=\\\"State\\\"\\n                  [matAutocomplete]=\\\"destDisAutocomplete\\\" [(ngModel)]=\\\"destinationDesc\\\" name=\\\"destination\\\"\\n                  (keyup)=\\\"getUserDestinationList($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #destDisAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of descriptionList\\\" [value]=\\\"list.description\\\"\\n                    (click)=\\\"setDestination(list.value)\\\" (onSelectionChange)=\\\"setDestination(list.value)\\\">\\n                    <span>({{list.description}})</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Material Code\\\" aria-label=\\\"Material Code\\\"\\n                  [matAutocomplete]=\\\"materialCodeAutocomplete\\\" [(ngModel)]=\\\"materialCode\\\" name=\\\"materialCode\\\"\\n                  (keyup)=\\\"filterMaterialCode($event)\\\" autocomplete=\\\"off\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #materialCodeAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of materilcodelist\\\" [value]=\\\"list.value\\\"\\n                    (click)=\\\"setMaterialDescription(list.description)\\\"\\n                    (onSelectionChange)=\\\"setMaterialDescription(list.description)\\\">\\n                    <span>{{list.value}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Material Description\\\" aria-label=\\\"Material Description\\\"\\n                  [matAutocomplete]=\\\"materialDescriptionAutocomplete\\\" [(ngModel)]=\\\"materialDescription\\\"\\n                  name=\\\"materialDescription\\\" autocomplete=\\\"off\\\" (keyup)=\\\"filterMaterialDescription($event)\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #materialDescriptionAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of materialDescriptionList\\\" [value]=\\\"list.description\\\"\\n                    (click)=\\\"setMaterialCode(list.value)\\\" (onSelectionChange)=\\\"setMaterialCode(list.value)\\\">\\n                    <span>{{list.description}}</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <mat-select placeholder=\\\"Category\\\" [(ngModel)]=\\\"materialGroup\\\" name=\\\"materialGroup\\\" multiple>\\n                  <mat-option *ngFor=\\\"let category of categoryList\\\" [value]=\\\"category\\\">{{category}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"MKT Segment\\\" [(ngModel)]=\\\"mktsegment\\\" name=\\\"mktsegment\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let mktsegment of mktsegmentList\\\" [value]=\\\"mktsegment\\\">\\n                    {{mktsegment}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Plan Id\\\" [(ngModel)]=\\\"planId\\\" autocomplete=\\\"off\\\" name=\\\"planId\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Plan Status\\\" [(ngModel)]=\\\"planStatus\\\" name=\\\"planStatus\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let item of planStatusList\\\" [value]=\\\"item.value\\\">\\n                    {{item.key}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Status\\\" [(ngModel)]=\\\"status\\\" name=\\\"status\\\" multiple>\\n                  <!-- <mat-option [value]=\\\"\\\">None</mat-option> -->\\n                  <mat-option *ngFor=\\\"let data of statuses\\\" [value]=\\\"data.value\\\">{{data.key}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Insert User\\\" [(ngModel)]=\\\"insertUser\\\" name=\\\"insertUser\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pl-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <mat-select placeholder=\\\"Priority\\\" [(ngModel)]=\\\"priority\\\" name=\\\"priority\\\" multiple>\\n                  <mat-option value=\\\"ISNULL\\\">ISNULL</mat-option>\\n                  <mat-option *ngFor=\\\"let priority of priorityList\\\" [value]=\\\"priority\\\">{{priority}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"col-md-2 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"Destination\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"statesAutocomplete\\\"\\n                  [(ngModel)]=\\\"destination\\\" name=\\\"destination\\\" (keyup)=\\\"getUserSearchData($event)\\\" autocomplete=\\\"off\\\">\\n                <mat-autocomplete #statesAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of destinationList\\\" [value]=\\\"list.value\\\">\\n                    <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div> -->\\n        </div>\\n      </div>\\n      <div class=\\\"pull-right\\\">\\n        <div class=\\\"search-fileds\\\">\\n          <button class=\\\"theme-small-button\\\" (click)=\\\"plannerSearch()\\\" matTooltip=\\\"Search\\\">\\n            <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <button class=\\\"theme-delete-button\\\" (click)=\\\"clearAll()\\\" matTooltip=\\\"Clear\\\">\\n            <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"datatable\\\">\\n    <ngx-datatable #table class='material ngx-table-custom-scroll ngx-table-tr-custom-scroll' [rows]='pendingPlanList'\\n      [columnMode]=\\\"'force'\\\" [count]=\\\"page.count\\\" [externalPaging]=\\\"true\\\" [headerHeight]=\\\"50\\\" [limit]=\\\"page.limit\\\"\\n      [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [selected]=\\\"selected\\\" [selectionType]=\\\"'checkbox'\\\"\\n      [selectAllRowsOnPage]=\\\"false\\\" [scrollbarH]=\\\"true\\\" (activate)=\\\"onActivate($event)\\\" [offset]=\\\"page.offset\\\"\\n      (page)=\\\"datatablePageData($event)\\\" [summaryRow]=\\\"true\\\" [summaryHeight]=\\\"'auto'\\\" [summaryPosition]=\\\"'bottom'\\\">\\n\\n      <ngx-datatable-column name=\\\"Plan Id\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"planId\\\"\\n        [summaryFunc]=\\\"emptySumm\\\" [frozenLeft]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.planId}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Disp Date\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"dispatchDate\\\"\\n        [frozenLeft]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.dispatchDate | customDateFormat | date:'dd-MMM-yyyy'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Source\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"sourceLocation\\\"\\n        [frozenLeft]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.sourceLocation}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Dest\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"destinationLocation\\\"\\n        [frozenLeft]=\\\"true\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.destinationLocation}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Material Code\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"itemId\\\"\\n        [frozenLeft]=\\\"freezeLeftValue\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.itemId}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column [cellClass]=\\\"'myClass'\\\" name=\\\"Material Description\\\" [width]=\\\"210\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"itemDescription\\\" [frozenLeft]=\\\"freezeLeftValue\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.itemDescription}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Dest Description\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"destinationDescription\\\">\\n        <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\n          <div>\\n            {{row.destinationDescription}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Cat\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"category\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.category}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"TTE\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"tte\\\"\\n        [summaryTemplate]=\\\"tteCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.tte}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Batch\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"batchCode\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.batchCode}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Pr\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"priority\\\"\\n        [summaryFunc]=\\\"emptySumm\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.priority}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"MKT Seg\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"marketSegment\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.marketSegment}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Plan Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"quantity\\\"\\n        [summaryTemplate]=\\\"planQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.quantity}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Appr Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"approvedQuantity\\\"\\n        [summaryTemplate]=\\\"apprQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.approvedQuantity?row.approvedQuantity:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Un Appr Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"unapprovedQuantity\\\" [summaryTemplate]=\\\"unapprQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.unapprovedQuantity?row.unapprovedQuantity:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Appr Del\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"deletedApprQuantity\\\" [summaryTemplate]=\\\"apprDeleteQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.deletedApprQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Un Appr Del\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"deletedUnApprQuantity\\\" [summaryTemplate]=\\\"unapprDeleteQtyCell\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.deletedUnApprQuantity}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Reserved\\\" [width]=\\\"65\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"reservedQuantity\\\"\\n        [summaryTemplate]=\\\"reservedQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.reservedQuantity?row.reservedQuantity:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Loaded\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"loaded\\\"\\n        [summaryTemplate]=\\\"loadedQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.loaded?row.loaded:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Disp\\\" [width]=\\\"60\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"dispatchedQuantity\\\"\\n        [summaryTemplate]=\\\"dispatchedQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.dispatchedQuantity?row.dispatchedQuantity:0}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Avail Qty\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"availableQuantity\\\" [summaryTemplate]=\\\"availableQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.availableQuantity}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Total Available\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"totalAvailableQuantity\\\" [summaryTemplate]=\\\"totalAvailableQtyCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.totalAvailableQuantity}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\" Qty to be Appr\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"approvalQuantity\\\" [summaryFunc]=\\\"emptySumm\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <ng-container *ngIf=\\\"row.status !== 'COMPLETED'\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\"\\n              (click)=\\\"ApprovalEditing[rowIndex + '-approvalQuantity'] = true\\\"\\n              *ngIf=\\\"!ApprovalEditing[rowIndex + '-approvalQuantity']\\\">\\n              {{row.approvalQuantity}}\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"ApprovalEditing[rowIndex + '-approvalQuantity']\\\">\\n              <input type=\\\"text\\\" class=\\\"table-input\\\" [value]=\\\"(row.approvalQuantity!=0)?row.approvalQuantity:''\\\"\\n                (input)=\\\"editApprovalQuantity($event,row,'approvalQuantity')\\\" oncopy=\\\"return false\\\" oncut=\\\"return false\\\"\\n                onpaste=\\\"return false\\\" (keypress)=\\\"service.numberOnly($event)\\\">\\n            </div>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"row.status == 'COMPLETED'\\\">\\n            {{row.approvalQuantity}}\\n          </ng-container>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Qty to be Un Appr\\\" [width]=\\\"70\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n        prop=\\\"unapprovalQuantity\\\" [summaryFunc]=\\\"emptySumm\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <ng-container *ngIf=\\\"row.status !== 'COMPLETED'\\\">\\n            <div class=\\\"edit-field\\\" title=\\\"Double click to edit\\\"\\n              (click)=\\\"ApprovalEditing[rowIndex + '-unapprovalQuantity'] = true\\\"\\n              *ngIf=\\\"!ApprovalEditing[rowIndex + '-unapprovalQuantity']\\\">\\n              {{row.unapprovalQuantity?row.unapprovalQuantity:0}}\\n              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"ApprovalEditing[rowIndex + '-unapprovalQuantity']\\\">\\n              <input type=\\\"text\\\" class=\\\"table-input\\\" [value]=\\\"(row.unapprovalQuantity != 0)?row.unapprovalQuantity:''\\\"\\n                (input)=\\\"editUnApprovalQuantity($event,row,'unapprovalQuantity')\\\" oncopy=\\\"return false\\\"\\n                oncut=\\\"return false\\\" onpaste=\\\"return false\\\" (keypress)=\\\"service.numberOnly($event)\\\">\\n            </div>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"row.status == 'COMPLETED'\\\">\\n            {{row.unapprovalQuantity?row.unapprovalQuantity:0}}\\n          </ng-container>\\n          <div class=\\\"clearfix\\\"></div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Avail TTE\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"availbleTTE\\\"\\n        [summaryTemplate]=\\\"totalAvailableTTEPercentageCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.availbleTTE | number : '1.2-2' }}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Truck Count\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"truckCount\\\"\\n        [summaryTemplate]=\\\"truckPercentageCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.truckCount | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Weight (Kg)\\\" [width]='60' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"Weight\\\"\\n      [summaryTemplate]=\\\"weightCell\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.weight | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Available Weight (Kg)\\\" [width]='80' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalWeight\\\"\\n      [summaryTemplate]=\\\"totalWeightCell\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totalWeight | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Weight Util (%)\\\" [width]='60' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"weightUtil\\\"\\n        [summaryTemplate]=\\\"totalWeightUtilCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.weightUtil | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Volume (CUMTR)\\\" [width]='70' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"Volume\\\"\\n      [summaryTemplate]=\\\"volumeCell\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.volume | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Available Volume (CUMTR)\\\" [width]='110' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"totalVolume\\\"\\n      [summaryTemplate]=\\\"totalVolumeCell\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.totalVolume | number : '1.2-2'}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Volume Util (%)\\\" [width]='80' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"volume\\\"\\n        [summaryTemplate]=\\\"totalVolumeUtilCell\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.volumeUtil | number : '1.2-2'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Plan Status\\\" [width]='100' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"appStatus\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.status}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"145\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"insertUser\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\">\\n          <div>\\n            {{row.insertUser}}\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Update User\\\" [width]='145' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"updateUser\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.updateUser}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Insert Date\\\" [width]='130' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"insertDate\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.insertDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Update Date\\\" [width]='130' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"updateDate\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.updateDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Plan Age (Days)\\\" [width]='70' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"planAge\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          {{row.planAge}}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Comments\\\" [width]='100' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"comments\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          <span [attr.title]=\\\"row.comments\\\" (click)=\\\"showIntegrationMessage(row)\\\">{{\\n            (row.comments?.length>9)? (row.comments | slice:0:9)+'..':(row.comments)}}</span>\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <ngx-datatable-column name=\\\"Status\\\" [width]='160' [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"appStatus\\\">\\n        <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n          <button class=\\\"btn btn-sm lightgreen-button\\\"\\n            [ngClass]=\\\"(row.appStatus=='APPROVED')?'lightgreen-button':'light-red-color'\\\">\\n            {{row.appStatus}}\\n          </button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column [width]=\\\"50\\\" [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"false\\\"\\n        [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-header-template let-value=\\\"value\\\" let-allRowsSelected=\\\"allRowsSelected\\\"\\n          let-selectFn=\\\"selectFn\\\" let-row=\\\"row\\\" let-rowIndex=\\\"rowIndex\\\">\\n          <input type=\\\"checkbox\\\" [checked]=\\\"allRowsSelected\\\"\\n            (change)=\\\"selectFn(!allRowsSelected);onSelectAll($event)\\\" />\\n        </ng-template>\\n        <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-isSelected=\\\"isSelected\\\" let-row=\\\"row\\\"\\n          let-rowIndex=\\\"rowIndex\\\" let-onCheckboxChangeFn=\\\"onCheckboxChangeFn\\\">\\n          <input type=\\\"checkbox\\\" [checked]=\\\"isSelected\\\" (change)=\\\"onCheckboxChangeFn($event);onSelect($event,row)\\\" />\\n        </ng-template>\\n      </ngx-datatable-column>\\n\\n      <!-- Footer Template starts -->\\n      <ngx-datatable-footer>\\n          <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\" let-selectedCount=\\\"selectedCount\\\"\\n            let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n            <div class=\\\"page-count\\\">\\n              <span *ngIf=\\\"selectedCount\\\">\\n                {{selectedCount.toLocaleString()}} Selected | \\n              </span>\\n              Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n              (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n              {{(rowCount)}} records.\\n            </div>\\n            <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n              [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\" [size]=\\\"pageSize\\\"\\n              [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\" (change)=\\\"table.onFooterPage($event)\\\">\\n            </datatable-pager>\\n          </ng-template>\\n        </ngx-datatable-footer>\\n        <!-- Footer Template Ends -->\\n    </ngx-datatable>\\n    <!-- Table bottom grid columns -->\\n    <ng-template #tteCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{(tteSum)?(tteSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #planQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{planQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #apprQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{apprQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #unapprQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{unapprQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #apprDeleteQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{apprDeleteQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #unapprDeleteQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{unapprDeleteQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #reservedQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{reservedQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #loadedQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{loadedQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #dispatchedQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{dispatchedQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #availableQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{availableQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalAvailableQtyCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{totalAvailableQtySum}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #truckPercentageCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">\\n            {{(TruckPercentageSum)?(TruckPercentageSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalAvailableTTEPercentageCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalTTEPercentageSum)?(totalTTEPercentageSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalWeightCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalWeightSum)?(totalWeightSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #weightCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(weightSum)?(weightSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalWeightUtilCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalWeightUtilSum)?(totalWeightUtilSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #volumeCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(volumeSum)?(volumeSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalVolumeCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalVolumeSum)?(totalVolumeSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template #totalVolumeUtilCell>\\n      <div class=\\\"name-container\\\">\\n        <div class=\\\"chip\\\">\\n          <span class=\\\"chip-content\\\">{{(totalVolumeUtilSum)?(totalVolumeUtilSum | number :'1.2-2'):0}}\\n          </span>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </div>\\n  <div align=\\\"center\\\" *ngIf=\\\"planItemInfo.length\\\">\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"btm-action-btn mb-3\\\" (click)=\\\"approvePlan()\\\">Approve</button>\\n  </div>\\n</div>\\n\\n\\n\\n\\n<div id=\\\"commnetsModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Comments</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        {{modalComment}}\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".manulal-plan-header {\\n  padding: 5px 0px;\\n  margin-bottom: 0px;\\n  font-weight: 600; }\\n  .manulal-plan-header span {\\n    color: #3F2B53;\\n    margin-right: 15px; }\\n  .manualplan-fields {\\n  background-color: transparent;\\n  box-shadow: none;\\n  padding: 0px; }\\n  .manualplan-fields p > i {\\n    cursor: pointer; }\\n  .manualplan-fields .col-md-3 {\\n    padding: 0px 15px; }\\n  .manualplan-fields .form-group {\\n    margin-bottom: 0; }\\n  .manualplan-fields .form-group .mat-form-field .mat-form-field-wrapper {\\n      padding-bottom: 0.5em !important; }\\n  .show-entries .mat-form-field-label {\\n  display: none !important; }\\n  .manual-plan-table {\\n  margin-top: 10px;\\n  width: 100%;\\n  overflow: hidden;\\n  overflow-x: auto; }\\n  .manual-plan-table table {\\n    table-layout: fixed;\\n    margin-bottom: 0em; }\\n  .manual-plan-table table tr {\\n      height: 30px; }\\n  .manual-plan-table table tr th {\\n        width: 150px;\\n        padding: 0.3rem; }\\n  .manual-plan-table table tr td {\\n        width: 150px;\\n        padding: 0.25rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGxhbm5lci9hcHByb3ZlLXBsYW5zL0M6XFxVc2Vyc1xcQW51cmFnU2FpbmlcXERvd25sb2Fkc1xcYXRvbS11aV9vcmlnaW5hbF8yMTA5MjAyMlxcYXRvbS11aS9zcmNcXGFwcFxccGxhbm5lclxcYXBwcm92ZS1wbGFuc1xcYXBwcm92ZS1wbGFucy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGxhbm5lci9hcHByb3ZlLXBsYW5zL0M6XFxVc2Vyc1xcQW51cmFnU2FpbmlcXERvd25sb2Fkc1xcYXRvbS11aV9vcmlnaW5hbF8yMTA5MjAyMlxcYXRvbS11aS9zcmNcXGFzc2V0c1xcc3R5bGVzXFxfdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDSSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGdCQUFnQixFQUFBO0VBSHBCO0lBS1EsY0NSaUI7SURTakIsa0JBQWtCLEVBQUE7RUFLMUI7RUFDSSw2QkFBNkI7RUFDN0IsZ0JBQWdCO0VBQ2hCLFlBQVksRUFBQTtFQUhoQjtJQUtRLGVBQWUsRUFBQTtFQUx2QjtJQVFRLGlCQUFpQixFQUFBO0VBUnpCO0lBV1EsZ0JBQWdCLEVBQUE7RUFYeEI7TUFjZ0IsZ0NBQWdDLEVBQUE7RUFLaEQ7RUFFUSx3QkFBd0IsRUFBQTtFQUdoQztFQUNJLGdCQUFnQjtFQUNoQixXQUFVO0VBQ1YsZ0JBQWU7RUFDZixnQkFBZSxFQUFBO0VBSm5CO0lBTVEsbUJBQW1CO0lBQ25CLGtCQUFrQixFQUFBO0VBUDFCO01BU1ksWUFBVyxFQUFBO0VBVHZCO1FBV2dCLFlBQVc7UUFDWCxlQUFjLEVBQUE7RUFaOUI7UUFlZ0IsWUFBVztRQUNYLGdCQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wbGFubmVyL2FwcHJvdmUtcGxhbnMvYXBwcm92ZS1wbGFucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuQGltcG9ydCAnLi4vLi4vLi4vYXNzZXRzL3N0eWxlcy92YXJpYWJsZXMnO1xuQGltcG9ydCAnLi4vLi4vLi4vYXNzZXRzL3N0eWxlcy9taXhpbnMnO1xuXG4ubWFudWxhbC1wbGFuLWhlYWRlcntcbiAgICBwYWRkaW5nOiA1cHggMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIHNwYW57XG4gICAgICAgIGNvbG9yOiAkZGFyay1jb2xvci10aGVtZTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgICAgICAvLyBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIC8vIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgfVxufVxuLm1hbnVhbHBsYW4tZmllbGRze1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgcGFkZGluZzogMHB4O1xuICAgIHAgPiBpe1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICAgIC5jb2wtbWQtM3tcbiAgICAgICAgcGFkZGluZzogMHB4IDE1cHg7XG4gICAgfVxuICAgIC5mb3JtLWdyb3Vwe1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICAubWF0LWZvcm0tZmllbGQge1xuICAgICAgICAgICAgLm1hdC1mb3JtLWZpZWxkLXdyYXBwZXJ7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDAuNWVtICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4uc2hvdy1lbnRyaWVze1xuICAgIC5tYXQtZm9ybS1maWVsZC1sYWJlbHtcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cbn1cbi5tYW51YWwtcGxhbi10YWJsZXtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIHdpZHRoOjEwMCU7XG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgIG92ZXJmbG93LXg6YXV0bztcbiAgICB0YWJsZXtcbiAgICAgICAgdGFibGUtbGF5b3V0OiBmaXhlZDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMGVtO1xuICAgICAgICB0cntcbiAgICAgICAgICAgIGhlaWdodDozMHB4O1xuICAgICAgICAgICAgdGh7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTUwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowLjNyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0ZHtcbiAgICAgICAgICAgICAgICB3aWR0aDoxNTBweDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjAuMjVyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCIkdGhlbWUtcHVycGxlLWJhY2tncm91bmQtY29sb3I6I0ZBRjlGRTtcbiRkYXJrLWNvbG9yLXRoZW1lOiMzRjJCNTM7XG4kdGhlbWUtcHVycGxlLWNvbG9yOiM1QTMwOTQ7XG4kbGlnaHQtY29sb3ItdGhlbWU6I2Q0YjZmZjtcbiRtZWRpdW0tY29sb3ItdGhlbWU6ICM3NzU4OTk7XG4kdGhlbWUtZ3JleTojYWFhO1xuJHRoZW1lLWxpZ2h0LWdyZXk6ICNjY2M7XG4kdGhlbWUtd2hpdGU6I2ZmZmZmZjtcbiR0aGVtZS1ibGFjazojMDAwO1xuJHRoZW1lLWJsdWUtY29sb3I6IzIxOTZmMztcbiR0aGVtZS1ncmVlbi1jb2xvcjojNDE3NTA1O1xuJHRoZW1lLWxpZ2h0LWdyZWVuLWNvbG9yOiNCOEU5ODY7XG4kdGhlbWUtbGlnaHQtYnJvd24tY29sb3I6I0VDRTE1NSA7XG4kdGhlbWUtYnJvd24tY29sb3I6IzlCOTMyQjtcbiR0aGVtZS1icm93bi1ib3JkZXI6I0NGQzMyRDtcbiR0aGVtZS1zZWFyY2hib3gtYmFja2dyb3VuZC1jb2xvcjojRjlGNEZGO1xuJHRoZW1lLW9wYWN0aXR5LWJvcmRlcjojYmU5NmY1O1xuJHRoZW1lLXJlZC10ZXh0OiNDNzNEM0Q7XG4kdGhlbWUtcmVkLWJhY2tncm91bmQtY29sb3I6ICNGQ0FFQUU7XG4kdGhlbWVuLXJlZC1ib3JkZXItY29sb3I6I0VENzM3MztcbiR0YWJsZS1ib3JkZXItY29sb3I6ICNkZWUyZTY7XG4kc2Vjb25kYXJ5LXRoZW1lOiAjYzI1NjNmO1xuJHNlY29uZGFyeS1saWdodC10aGVtZTogI2VmY2NjNTsiXX0= */\"","import { HelperServiceService } from './../../services/helper-service/helper-service.service';\nimport { Component, OnInit, ViewChild, ChangeDetectionStrategy, DoCheck, ElementRef } from '@angular/core';\nimport { ApiserviceService } from '../../services/api/apiservice.service';\nimport { DateAdapter, MAT_DATE_FORMATS, MatDialog } from '@angular/material';\nimport { AppDateAdapter, APP_DATE_FORMATS } from '../../public/date.adapters';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\nimport * as XLSX from 'xlsx';\nimport { constants } from '../../constants';\nimport * as moment from 'moment'\nimport { ApprovePlanErrorsComponent } from 'src/app/public/approve-plan-errors/approve-plan-errors.component';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\ndeclare var $: any;\n@Component({\n  selector: 'app-approve-plans',\n  templateUrl: './approve-plans.component.html',\n  styleUrls: ['./approve-plans.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: AppDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\n  ],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ApprovePlansComponent implements OnInit, DoCheck {\n\n\n  ApprovalEditing = {};\n  isShow: boolean = true;\n  planData = [];\n  page = {\n    limit: 200,\n    count: 0,\n    offset: 0,\n    orderBy: 'myColumn1',\n    orderDir: 'desc',\n    pageSize: 10\n  };\n  pageSize: number;\n  materialGroup = [];\n  openPlanSourceList = [];\n  status: any;\n  planId: number;\n  materialCode: any;\n  mktsegment: any;\n  destination = '';\n  destinationDesc = '';\n  descriptionList = [];\n  destinationList = [];\n  index: number;\n  pendingPlanList = [];\n  materilcodelist = [];\n  materialDescription = '';\n  isLoading: boolean = false;\n  minDate = new Date();\n  selected = [];\n  planItemInfo = [];\n  allRowsSelected: boolean = false;\n  statuses = [];\n  materialDescriptionList: any[];\n  filterPlanStatus = [];\n  source: string;\n  insertUser: string;\n  mktsegmentList = [];\n  categoryList = [];\n  currentDate = this.helperService.getTodayDate();\n  currentDateAsString = this.helperService.getTodayDateASString();\n  fromDispatchDate: string = '';\n  toDispatchDate: string = '';\n  toDate: string = '';\n  fromDate: string = '';\n  // roles: { \"planner1\": string; \"plannner2\": string; \"planner3\": string; \"transporter\": string; \"fgsOperations1\": string; \"fgsOperations2\": string; \"fgsOperations4\": string; \"gateSecurity\": string; \"rdc_PLN\": string; \"rdc_GAT\": string; \"JIT_OPERATION\": string; \"JIT_GATE_SECURITY\": string; \"EXPORT_CHA\": string; \"ABU_PLN\": string; };\n  roles: { \"planner1\": string; \"plannner2\": string; \"planner3\": string; \"transporter\": string; \"fgsOperations1\": string; \"fgsOperations2\": string; \"fgsOperations4\": string; \"gateSecurity\": string; \"rdc_PLN\": string; \"rdc_GAT\": string; \"JIT_OPERATION\": string; \"JIT_GATE_SECURITY\": string; \"EXPORT_CHA\": string; \"ABU_PLN\": string; \"L1MGR\": string; \"L2MGR\": string; };\n  planStatusList: { \"key\": string; \"value\": string; }[];\n  planStatus: any;\n  check_Role_DP_REP: string;\n  sourceCode: string;\n  sourceList: any[];\n  modalComment: any;\n  totalTruckPercentage: number = 0;\n  totalTTEPercentageSum: number = 0;\n  tteSum: number = 0;\n  planQtySum: number = 0;\n  apprQtySum: number = 0;\n  unapprQtySum: number = 0;\n  apprDeleteQtySum: number = 0;\n  unapprDeleteQtySum: number = 0;\n  reservedQtySum: number = 0;\n  loadedQtySum: number = 0;\n  dispatchedQtySum: number = 0;\n  availableQtySum: number = 0;\n  totalAvailableQtySum: number = 0;\n  TruckPercentageSum: number = 0;\n  weightSum: number = 0;\n  volumeSum: number = 0;\n  totalWeightSum: number = 0;\n  totalWeightUtilSum: number = 0;\n  totalVolumeSum: number = 0;\n  totalVolumeUtilSum: number = 0;\n  standredFTLTTE: number;\n  standardFTLWeight: number;\n  standardFTLVolumne: number;\n  priorityList = [];\n  priority = [];\n  sourceCodeList = [];\n  freezeLeftValue: boolean = true;\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  constructor(\n    public service: ApiserviceService,\n    private toastr: ToastrService,\n    private helperService: HelperServiceService,\n    private activatedRoute: ActivatedRoute,\n    public dialog: MatDialog\n  ) { }\n\nngDoCheck() {\n  let width = $(window).width();\n  if(width < 1024) {\n    this.freezeLeftValue = false;\n  }\n  else {\n    this.freezeLeftValue = true;\n  }\n}\n\n  ngOnInit() {\n    localStorage.setItem(\"userMenu\", \"dispatch-plan\");\n    this.statuses = constants.planStatus;\n    this.filterPlanStatus = constants.filterPlanStatus;\n    // (localStorage.getItem(\"sourceID\") != null && localStorage.getItem(\"sourceID\") != '') ? this.sourceCodeList.push(localStorage.getItem(\"sourceID\")) : null;\n    this.source = localStorage.getItem(\"sourceID\");\n    this.pageSize = 10;\n    let routePlanId = this.activatedRoute.snapshot.params['planId'];\n    this.planId = routePlanId;\n    this.roles = constants.roles;\n    this.check_Role_DP_REP = this.service.checkRole();\n    this.planStatusList = constants.planStatusList;\n\n    if (this.isSoureDisable()) {\n      this.sourceCode = localStorage.getItem(\"sourceID\");\n      (localStorage.getItem(\"sourceID\") != null && localStorage.getItem(\"sourceID\") != '') ? this.sourceCodeList.push(localStorage.getItem(\"sourceID\")) : null;\n    }\n    if (this.service.isDPREPRole() || this.service.CheckExtWareHouse()) {\n      this.getPlansSourceList();\n    } else {\n      this.openPlanSourceList.push(localStorage.getItem(\"sourceID\"))\n    }\n    //check the page is search with Particular plan Id  or not ,If it true \n    this.getPlanData(routePlanId);\n\n    //for getting category master data\n    this.getCategoryMasterData();\n    this.getMarketSegment();\n    this.getPriorityList();\n    \n  }\n\n  isSoureDisable() {\n    // source Not disable for DP_REP, L1_MGR, L2_MGR role & External warehouses, if roles not belongs to DP_REP & External wareHouse we are returning boolean value which makes  disable \n    if ((this.check_Role_DP_REP !== this.roles.planner3 && this.check_Role_DP_REP !== this.roles.L1MGR && this.check_Role_DP_REP !== this.roles.L2MGR)\n      && (!this.service.CheckExtWareHouse())) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  // For getting all the Open Plans source List for DPREP\n  getPlansSourceList() {\n    this.service.get_service(ApiserviceService.apisList.getOpenPlansSourceLocs).subscribe(response => {\n      if (response['statusCode'] == '200') {\n        this.openPlanSourceList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Some Thing Went Wrong !!!')\n      }\n    })\n  }\n  //check the page is search with Particular plan Id  or not ,If it true \n  getPlanData(routePlanId) {\n    if (routePlanId) {\n      let bodyData = {\n        'planId': routePlanId,\n        'statuses': this.filterPlanStatus,\n        // 'sourceLocation': this.source,\n        'pageLength': this.page.limit,\n        'sourceCodeList': this.sourceCodeList\n      }\n      this.getApprovePlan(bodyData);\n    } else {\n      //get the all plans which are for dispach(successfully created)\n      let bodyData = {\n        'statuses': this.filterPlanStatus,\n        // 'sourceLocation': this.source,\n        'fromDispatchDate': this.currentDate,\n        'toDispatchDate': this.currentDate,\n        'pageLength': this.page.limit,\n        'sourceCodeList': this.sourceCodeList\n      };\n      this.fromDate = this.currentDateAsString;\n      this.toDate = this.fromDate;\n      this.getApprovePlan(bodyData);\n    }\n  }\n  //for getting approve data\n  getApprovePlan(bodyData) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.planinfo, bodyData).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.clearAllSum();\n        let responseData = response['data'].planItems;\n        // this.standredFTLTTE = response['data'].standardFtlTteCapacity;\n        // this.standardFTLWeight = response['data'].standardFtlWeight;\n        // this.standardFTLVolumne = response['data'].standardFTLVolumne;\n        // responseData.forEach(element => {\n        //   // For RDC: The Avail TTE and Truck count should be based on Plan Qty and not Available Qty\n        //   if (this.service.checkRole() == this.roles.rdc_PLN) {\n        //     element.truckPercentage = (((element.quantity ? element.quantity : 0) * (element.tte ? element.tte : 0)) / this.standredFTLTTE);\n        //     element.availableTTE = ((element.quantity ? element.quantity : 0) * (element.tte ? element.tte : 0));\n        //     // Weight Util values calculations\n        //     element.weightUtil = ((((element.quantity ? element.quantity : 0) * (element.weight ? element.weight : 0)) / this.standardFTLWeight) * 100);\n        //     // Volume Util values calculations\n        //     element.volumeUtil = ((((element.quantity ? element.quantity : 0) * (element.volume ? element.volume : 0)) / this.standardFTLVolumne) * 100);\n        //   } else {\n        //     element.truckPercentage = (((element.availableQuantity ? element.availableQuantity : 0) * (element.tte ? element.tte : 0)) / this.standredFTLTTE);\n        //     element.availableTTE = ((element.availableQuantity ? element.availableQuantity : 0) * (element.tte ? element.tte : 0));\n        //     // Weight Util values calculations\n        //     element.weightUtil = ((((element.availableQuantity ? element.availableQuantity : 0) * (element.weight ? element.weight : 0)) / this.standardFTLWeight) * 100);\n        //     // Volume Util values calculations\n        //     element.volumeUtil = ((((element.availableQuantity ? element.availableQuantity : 0) * (element.volume ? element.volume : 0)) / this.standardFTLVolumne) * 100);\n        //   }\n\n        // });\n        this.pendingPlanList = [...responseData];\n        this.page.count = response['data'].total;\n        // this.page.limit = response['data'].pageLength\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'], \"! Error\")\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  //set value destination\n  setDestination(value) {\n    //  this.destinationDesc = value;\n    this.destination = value;\n  }\n\n  //set value to destination description\n  setDestDescription(value) {\n    this.destinationDesc = value;\n  }\n\n  getPriorityList() {\n    this.service.get_service(ApiserviceService.apisList.getPriorityList).subscribe(response => {\n      if (response['statusCode'] == 200) {\n        this.priorityList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Some Thing Went Wrong !!!')\n      }\n    }, err => {\n      this.toastr.error('Some Thing Went Wrong !!!')\n    })\n  }\n\n  getMarketSegment() {\n    this.service.get_service(ApiserviceService.apisList.getMarketSegment).subscribe(response => {\n      if (response['statusCode'] == '200') {\n        this.mktsegmentList = response['data'];\n      } else {\n        this.toastr.error(response['message'] ? response['message'] : 'Some Thing Went Wrong !!!')\n      }\n    })\n  }\n\n  getUserDestinationList(event) {\n    this.destination = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.getDestinationDescriptionDataList + event.target.value).subscribe(response => {\n        if (response['data']) {\n          this.descriptionList = response['data'].searchResult;\n        }\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //for getting category master data\n  getCategoryMasterData() {\n    this.service.get_service(ApiserviceService.apisList.categoryMasterData).subscribe(response => {\n      this.categoryList = response['data'];\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n    })\n  }\n\n  onSelect(event, data) {\n    if (event.target.checked) {\n      // if the checkbox checked we need update plan Qty based on the status\n      // if the status  APPROVAL PENDING  we need populate Plan Qty\n      // if the sattus  APPROVAL_PART we need update only UnAppr QTY\n      if (data.appStatus == 'APPROVAL PENDING') {\n        data.approvalQuantity = data.quantity;\n      } else if (data.appStatus == \"APPROVED PART\") {\n        data.approvalQuantity = data.unapprovedQuantity;\n      }\n\n      this.planItemInfo.push(data);\n    } else {\n      data.approvalQuantity = 0;\n      data.unapprovalQuantity = 0;\n      let index = this.planItemInfo.indexOf(data);\n      this.planItemInfo.splice(index, 1);\n    }\n    this.tteSum = this.planItemInfo.reduce((sum, { tte }) => sum + tte, 0);\n    this.planQtySum = this.planItemInfo.reduce((sum, { quantity }) => sum + quantity, 0);\n    this.apprQtySum = this.planItemInfo.reduce((sum, { approvedQuantity }) => sum + approvedQuantity, 0);\n    this.unapprQtySum = this.planItemInfo.reduce((sum, { unapprovedQuantity }) => sum + unapprovedQuantity, 0);\n    this.apprDeleteQtySum = this.planItemInfo.reduce((sum, { deletedApprQuantity }) => sum + deletedApprQuantity, 0);\n    this.unapprDeleteQtySum = this.planItemInfo.reduce((sum, { deletedUnApprQuantity }) => sum + deletedUnApprQuantity, 0);\n    this.reservedQtySum = this.planItemInfo.reduce((sum, { reservedQuantity }) => sum + reservedQuantity, 0);\n    this.loadedQtySum = this.planItemInfo.reduce((sum, { loaded }) => sum + loaded, 0);\n    this.dispatchedQtySum = this.planItemInfo.reduce((sum, { dispatchedQuantity }) => sum + dispatchedQuantity, 0);\n    this.availableQtySum = this.planItemInfo.reduce((sum, { availableQuantity }) => sum + availableQuantity, 0);\n    this.totalAvailableQtySum = this.planItemInfo.reduce((sum, { totalAvailableQuantity }) => sum + totalAvailableQuantity, 0);\n    this.totalTTEPercentageSum = this.planItemInfo.reduce((sum, { availbleTTE }) => sum + availbleTTE, 0);\n    this.TruckPercentageSum = this.planItemInfo.reduce((sum, { truckCount }) => sum + truckCount, 0);\n    this.weightSum = this.planItemInfo.reduce((sum, { weight }) => sum + weight, 0);\n    this.totalWeightSum = this.planItemInfo.reduce((sum, { totalWeight }) => sum + totalWeight, 0);\n    this.totalWeightUtilSum = this.planItemInfo.reduce((sum, { weightUtil }) => sum + weightUtil, 0);\n    this.volumeSum = this.planItemInfo.reduce((sum, { volume }) => sum + volume, 0);\n    this.totalVolumeSum = this.planItemInfo.reduce((sum, { totalVolume }) => sum + totalVolume, 0);\n    this.totalVolumeUtilSum = this.planItemInfo.reduce((sum, { volumeUtil }) => sum + volumeUtil, 0);\n  }\n  onSelectAll(event) {\n    this.planItemInfo = [];\n\n    this.TruckPercentageSum = 0;\n    this.totalTTEPercentageSum = 0;\n    this.pendingPlanList.forEach(data => {\n      this.onSelect(event, data);\n    });\n  }\n\n  // Clearing all the sum values after success response\n  clearAllSum() {\n    this.tteSum = 0;\n    this.planQtySum = 0;\n    this.apprQtySum = 0;\n    this.unapprQtySum = 0;\n    this.apprDeleteQtySum = 0;\n    this.unapprDeleteQtySum = 0;\n    this.reservedQtySum = 0;\n    this.loadedQtySum = 0;\n    this.dispatchedQtySum = 0;\n    this.availableQtySum = 0;\n    this.totalAvailableQtySum = 0;\n    this.totalTTEPercentageSum = 0;\n    this.TruckPercentageSum = 0;\n    this.weightSum = 0;\n    this.totalWeightSum = 0;\n    this.totalWeightUtilSum = 0;\n    this.volumeSum = 0;\n    this.totalVolumeSum = 0;\n    this.totalVolumeUtilSum = 0;\n  }\n\n  onActivate(event) {\n    if (event.type == 'checkbox') {\n      //Stop event propagation and let onSelect() work\n      event.event.stopPropagation();\n    } else {\n      //Do somethings when you click on rows\n    }\n  }\n\n  // onPageSizeChanged(event) {\n  //   this.page.limit = event;\n  //   this.page.pageSize = this.pageSize;\n  //   this.datatablePageData(this.page);\n  // }\n\n  datatablePageData(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    this.planItemInfo = [];\n    this.pendingPlanList = [];\n    this.selected = [];\n    this.index = pageInfo.offset;\n    this.forDateValidation();\n    let bodyData = {\n      'fromDispatchDate': this.fromDispatchDate,\n      'toDispatchDate': this.toDispatchDate,\n      'index': pageInfo.offset,\n      'pageLength': this.page.limit,\n      'destinationCode': this.destination,\n      'marketSegment': this.mktsegment,\n      'materialCode': this.materialCode,\n      'materialDescription': this.materialDescription,\n      'materialGroup': this.materialGroup,\n      'planId': this.planId,\n      'status': this.status,\n      'statuses': this.filterPlanStatus,\n      // 'sourceLocation': this.source,\n      'planStatus': this.planStatus,\n      'insertUser': this.insertUser,\n      // 'sourceCode': this.sourceCode,\n      'priorityList': this.priority,\n      'sourceCodeList': this.sourceCodeList\n    }\n\n    this.getApprovePlan(bodyData);\n  }\n  addEvent(type, event) {\n    if (event.target.value) {\n      let checkToDate: any = this.toDate;\n      console.log(\"Check--->1\", checkToDate);\n      if (this.toDate == this.currentDateAsString) {\n        // on page load we are defaluting the  to date with string. Comparing string with date is not possible\n        // If toDate is equal to currentDate then chagetingthe checkDate to new Date() otherwise defaulting with toDate\n        checkToDate = new Date();\n        console.log(\"Check--->2\", checkToDate);\n      }\n      /* Checking if selected from date greater than to date.\n     Clearing the toDate field when from date greater than to date */\n      if (this.toDate && (this.fromDate > checkToDate)) {\n        this.toDate = '';\n      }\n    }\n  }\n\n  // clear the data what the user entered\n  clearAll() {\n    this.destination = '';\n    this.mktsegment = [];\n    this.materialCode = \"\";\n    this.materialDescription = \"\";\n    this.destinationDesc = \"\";\n    this.descriptionList = [];\n    this.materialGroup = [];\n    this.planId = null;\n    this.status = [];\n    this.destinationList = [];\n    this.materilcodelist = [];\n    this.fromDate = '';\n    this.toDate = '';\n    this.planStatus = [];\n    this.insertUser = '';\n    this.sourceCode = '';\n    this.sourceList = [];\n    this.priority = [];\n    this.sourceCodeList = [];\n\n    if (this.isSoureDisable()) {\n      this.sourceCode = localStorage.getItem(\"sourceID\");\n      (localStorage.getItem(\"sourceID\") != null && localStorage.getItem(\"sourceID\") != '') ? this.sourceCodeList.push(localStorage.getItem(\"sourceID\")) : null;\n    }\n  }\n\n\n  //refersh data\n  refreshData() {\n    this.ApprovalEditing = {};\n    this.table.offset = 0;\n    this.selected = [];\n    this.currentDateAsString = this.helperService.getTodayDateASString();\n    this.fromDate = this.currentDateAsString;\n    this.toDate = this.fromDate;\n    this.pendingPlanList = [];\n    this.planItemInfo = [];\n    this.clearAll();\n    this.clearAllSum();\n    this.fromDate = this.currentDateAsString;\n    this.toDate = this.fromDate;\n    this.forDateValidation();\n\n    let bodyData = {\n      'fromDispatchDate': this.fromDispatchDate,\n      'toDispatchDate': this.toDispatchDate,\n      'planId': this.planId,\n      'statuses': this.filterPlanStatus,\n      'pageLength': this.page.limit,\n      'sourceCodeList': this.sourceCodeList\n    }\n    this.getApprovePlan(bodyData);\n  }\n\n  getUserSearchData(event) {\n    this.destinationDesc = '';\n    if (event.target.value.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.destinationList = [];\n      let index = 0;\n      this.isLoading = true\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + this.destination + \"&index=\" + index).subscribe(response => {\n        this.destinationList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //filter material code by user input\n  filterMaterialCode(event) {\n    let filtervalue = event.target.value;\n    this.materialDescription = '';\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.materilcodelist = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?materialCode=' + filtervalue).subscribe(response => {\n        this.materilcodelist = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n    if (filtervalue == '') {\n      this.materialDescription = '';\n      this.materilcodelist = [];\n    }\n    if (filtervalue.length > 1 && event.keyCode == 13) {\n      this.materilcodelist.forEach(item => {\n        if (item.value == filtervalue) {\n          this.setMaterialDescription(item.description);\n        }\n      })\n    }\n  }\n  // Date Validation\n  forDateValidation() {\n    if (this.fromDate != '' && this.fromDate != null) {\n      this.fromDispatchDate = moment(new Date(this.fromDate)).format(\"DD/MM/YYYY\");\n    } else {\n      this.fromDispatchDate = '';\n    }\n    if (this.toDate != '' && this.toDate != null) {\n      this.toDispatchDate = moment(new Date(this.toDate)).format(\"DD/MM/YYYY\");\n    } else {\n      this.toDispatchDate = '';\n    }\n  }\n  //set value for material description\n  setMaterialDescription(value) {\n    this.materialDescription = value;\n  }\n\n  plannerSearch() {\n    this.ApprovalEditing = {};\n    this.selected = [];\n    this.table.offset = 0;\n    this.pendingPlanList = [];\n    this.planItemInfo = [];\n    this.forDateValidation();\n    let bodyData = {\n      'fromDispatchDate': this.fromDispatchDate,\n      'toDispatchDate': this.toDispatchDate,\n      'destinationCode': this.destination,\n      // 'index': this.page.offset,\n      'marketSegment': this.mktsegment,\n      'materialCode': this.materialCode,\n      'materialDescription': this.materialDescription,\n      'materialGroup': this.materialGroup,\n      'pageLength': this.page.limit,\n      'planId': this.planId,\n      'status': this.status,\n      'statuses': this.filterPlanStatus,\n      // 'sourceLocation': this.source,\n      'planStatus': this.planStatus,\n      'insertUser': this.insertUser,\n      // 'sourceCode': this.sourceCode,\n      'priorityList': this.priority,\n      'sourceCodeList': this.sourceCodeList\n    }\n    if (this.fromDate != '' && this.fromDate != null) {\n      if (this.toDate != '' && this.toDate != null) {\n        this.pendingPlanList = [];\n        this.getApprovePlan(bodyData);\n      } else {\n        this.toastr.error(\"Please select To Date\", \"!Error\")\n      }\n    } else {\n      this.getApprovePlan(bodyData);\n    }\n  }\n\n  approvePlan() {\n    this.isLoading = true;\n\n    let approvePlanInfo = {\n      planItems: this.planItemInfo,\n      index: this.page.offset,\n      pageLength: this.page.limit\n    }\n    this.service.post_service(ApiserviceService.apisList.approvePlanInfo, approvePlanInfo).subscribe(response => {\n      this.isLoading = false;\n\n      //get the fresh data of approve plans data\n      if (response['statusCode'] == 200) {\n        this.ApprovalEditing = {};\n        let responseData = response['data'];\n        this.selected = [];\n        this.planItemInfo = [];\n        this.clearAllSum();\n        responseData.planItems.forEach(element => {\n          // // For RDC: The Avail TTE and Truck count should be based on Plan Qty and not Available Qty\n          // if (this.service.checkRole() == this.roles.rdc_PLN) {\n          //   element.truckPercentage = (((element.quantity ? element.quantity : 0) * (element.tte ? element.tte : 0)) / this.standredFTLTTE);\n          //   element.availableTTE = ((element.quantity ? element.quantity : 0) * (element.tte ? element.tte : 0));\n          //   // Weight Util values calculations\n          //   element.weightUtil = ((((element.quantity ? element.quantity : 0) * (element.weight ? element.weight : 0)) / this.standardFTLWeight) * 100);\n          //   // Volume Util values calculations\n          //   element.volumeUtil = ((((element.quantity ? element.quantity : 0) * (element.volume ? element.volume : 0)) / this.standardFTLVolumne) * 100);\n          // } else {\n          //   element.truckPercentage = (((element.availableQuantity ? element.availableQuantity : 0) * (element.tte ? element.tte : 0)) / this.standredFTLTTE);\n          //   element.availableTTE = ((element.availableQuantity ? element.availableQuantity : 0) * (element.tte ? element.tte : 0));\n          //   // Weight Util values calculations\n          //   element.weightUtil = ((((element.availableQuantity ? element.availableQuantity : 0) * (element.weight ? element.weight : 0)) / this.standardFTLWeight) * 100);\n          //   // Volume Util values calculations\n          //   element.volumeUtil = ((((element.availableQuantity ? element.availableQuantity : 0) * (element.volume ? element.volume : 0)) / this.standardFTLVolumne) * 100);\n          // }\n          let updatebleIndex = this.pendingPlanList.findIndex(value => value.id == element.id);\n          this.pendingPlanList[updatebleIndex] = element;\n          this.pendingPlanList = [...this.pendingPlanList];\n        })\n        this.toastr.success(response['message']);\n      } else {\n        this.openErrorDialog(response['data']);\n        // this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      }\n    }, (err) => {\n      this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n      this.isLoading = false;\n    })\n  }\n\n  //open Error list Dialog\n  openErrorDialog(value) {\n    const dialogRef = this.dialog.open(ApprovePlanErrorsComponent, {\n      // width: '250px',\n      data: { errorData: value },\n      disableClose: true\n    });\n  }\n\n  // edit  apporoval quantity\n  updateApprovalPlan(event, cell, rowIndex, row) {\n    let getIndex = this.pendingPlanList.findIndex(data => data.id == row.id);\n    this.pendingPlanList[getIndex][cell] = Number(event.target.value);\n    this.pendingPlanList = [...this.pendingPlanList];\n  }\n\n  // update the values which was given user\n  editApprovalQuantity(event, row, cell) {\n    //let find the index of modified\n    let modifiedIndex = this.pendingPlanList.findIndex(item => (item.planId == row.planId) && (item.lineNumber == row.lineNumber))\n    //Make the Qty to be UnApproved to be Zero if entered\n    this.pendingPlanList[modifiedIndex]['unapprovalQuantity'] = 0;\n    //If user enter Negitive values\n    if (Number(event.target.value) < 0) {\n      this.pendingPlanList[modifiedIndex][cell] = 0;\n      event.target.value = 0;\n    } else if ((row.quantity - row.approvedQuantity) < Number(event.target.value)) {\n      event.target.value = 0;\n      this.pendingPlanList[modifiedIndex][cell] = 0;\n      this.toastr.error('Invalid Quantity to be approved');\n    } else {\n      this.pendingPlanList[modifiedIndex][cell] = Number(event.target.value);\n    }\n\n    this.pendingPlanList = [... this.pendingPlanList];\n\n\n  }\n\n  editUnApprovalQuantity(event, row, cell) {\n    let repsonsedata = row;\n    //let find the index of modified\n    let modifiedIndex = this.pendingPlanList.findIndex(item => (item.planId == row.planId) && (item.lineNumber == row.lineNumber));\n    //Make the Qty to be UnApproved to be Zero if entered\n    this.pendingPlanList[modifiedIndex]['approvalQuantity'] = 0;\n    //If user enter Negitive values\n    if (Number(event.target.value) < 0) {\n      this.pendingPlanList[modifiedIndex][cell] = 0;\n      event.target.value = 0;\n    } else if (row.approvedQuantity == 0) {\n      event.target.value = 0;\n      this.pendingPlanList[modifiedIndex][cell] = 0;\n      this.toastr.error(\"please approve quantity before unapproved !\")\n    } else if ((Number(event.target.value) > repsonsedata.approvedQuantity)) {\n      this.pendingPlanList[modifiedIndex][cell] = 0;\n      event.target.value = 0;\n      this.toastr.error(\"Un Approval Quantity should not greater than approved Quantity\");\n    } else {\n      this.pendingPlanList[modifiedIndex][cell] = Number(event.target.value);\n    }\n    this.pendingPlanList = [... this.pendingPlanList]\n  }\n\n\n  //show the filter\n  showFilter() {\n    this.isShow = !this.isShow\n  }\n  //export excel data\n  export(): void {\n    if (this.pendingPlanList.length > 0) {\n      this.isLoading = true;\n      this.forDateValidation();\n      let data = {\n        'fromDispatchDate': this.fromDispatchDate,\n        'toDispatchDate': this.toDispatchDate,\n        'destinationCode': this.destination,\n        // 'index': this.page.offset,\n        'marketSegment': this.mktsegment,\n        'materialCode': this.materialCode,\n        'materialDescription': this.materialDescription,\n        'materialGroup': this.materialGroup,\n        'pageLength': this.page.count,\n        'planId': this.planId,\n        'status': this.status,\n        'statuses': this.filterPlanStatus,\n        // 'sourceLocation': this.source,\n        'planStatus': this.planStatus,\n        'insertUser': this.insertUser,\n        // 'sourceCode': this.sourceCode,\n        'priorityList': this.priority,\n        'sourceCodeList': this.sourceCodeList,\n      }\n      this.service.post_service(ApiserviceService.apisList.planinfo, data).subscribe(response => {\n        if (response['statusCode'] == 200) {\n          let newApprovePlanData = response['data'].planItems;\n          let excelRawData = newApprovePlanData;\n          let newExcelData = []; let data;\n          for (let i = 0; i < excelRawData.length; i++) {\n\n            // // For RDC: The Avail TTE and Truck count should be based on Plan Qty and not Available Qty\n            // // For FGS : The Avail TTE and Truck count should be based on Available Qty\n            // let availbleTTE; let truckCount;\n            // if (this.service.checkRole() == this.roles.rdc_PLN) {\n            //   availbleTTE = ((excelRawData[i].quantity ? excelRawData[i].quantity : 0) * (excelRawData[i].tte ? excelRawData[i].tte : 0));\n            //   truckCount = (((excelRawData[i].quantity ? excelRawData[i].quantity : 0) * (excelRawData[i].tte ? excelRawData[i].tte : 0)) / this.standredFTLTTE);\n            //   // Weight Util values calculations\n            //   excelRawData[i].weightUtil = ((((excelRawData[i].quantity ? excelRawData[i].quantity : 0) * (excelRawData[i].weight ? excelRawData[i].weight : 0)) / this.standardFTLWeight) * 100);\n            //   // Volume Util values calculations\n            //   excelRawData[i].volumeUtil = ((((excelRawData[i].quantity ? excelRawData[i].quantity : 0) * (excelRawData[i].volume ? excelRawData[i].volume : 0)) / this.standardFTLVolumne) * 100);\n            // } else {\n            //   availbleTTE = ((excelRawData[i].availableQuantity ? excelRawData[i].availableQuantity : 0) * (excelRawData[i].tte ? excelRawData[i].tte : 0));\n            //   truckCount = (((excelRawData[i].availableQuantity ? excelRawData[i].availableQuantity : 0) * (excelRawData[i].tte ? excelRawData[i].tte : 0)) / this.standredFTLTTE);\n            //   // Weight Util values calculations\n            //   excelRawData[i].weightUtil = ((((excelRawData[i].availableQuantity ? excelRawData[i].availableQuantity : 0) * (excelRawData[i].weight ? excelRawData[i].weight : 0)) / this.standardFTLWeight) * 100);\n            //   // Volume Util values calculations\n            //   excelRawData[i].volumeUtil = ((((excelRawData[i].availableQuantity ? excelRawData[i].availableQuantity : 0) * (excelRawData[i].volume ? excelRawData[i].volume : 0)) / this.standardFTLVolumne) * 100);\n            // }\n            data = {\n              \"plan Id\": excelRawData[i].planId,\n              \"Dispatch Date\": this.service.customDateFormat(excelRawData[i].dispatchDate),\n              \"Source\": excelRawData[i].sourceLocation,\n              \"Destination\": excelRawData[i].destinationLocation,\n              \"Material Code\": excelRawData[i].itemId,\n              \"Material Description\": excelRawData[i].itemDescription,\n              \"Dest Description\": excelRawData[i].destinationDescription,\n              \"Category\": excelRawData[i].category,\n              \"TTE\": +excelRawData[i].tte,\n              \"Batch code\": excelRawData[i].batchCode,\n              \"Priority\": excelRawData[i].priority,\n              \"MKT segment\": excelRawData[i].marketSegment,\n              \"Plan Quantity\": +excelRawData[i].quantity,\n              \"Approved Quantity\": +excelRawData[i].approvedQuantity,\n              \"Un Approved Quantity\": +excelRawData[i].unapprovedQuantity,\n              \"Approved Deleted\": +excelRawData[i].deletedApprQuantity,\n              \"UnApproved Deleted\": +excelRawData[i].deletedUnApprQuantity,\n              \"Reserved\": +excelRawData[i].reservedQuantity,\n              \"Loaded\": +excelRawData[i].loaded,\n              \"Dispatched Quantity\": +excelRawData[i].dispatchedQuantity,\n              \"Available Quantity\": +excelRawData[i].availableQuantity,\n              \"Total Available Quantity\": +excelRawData[i].totalAvailableQuantity,\n              \"Quantity to be Approval\": +excelRawData[i].approvalQuantity,\n              \"Quantity to be UnApproval\": +excelRawData[i].unapprovalQuantity,\n              \"Avail TTE\": excelRawData[i].availbleTTE ? +excelRawData[i].availbleTTE.toFixed(2) : 0,\n              \"Truck Count\": excelRawData[i].truckCount ? +excelRawData[i].truckCount.toFixed(2) : 0,\n              \"Weight (Kg)\": excelRawData[i].weight ? +excelRawData[i].weight.toFixed(2) : 0,\n              \"Available Weight (Kg)\": excelRawData[i].totalWeight ? +excelRawData[i].totalWeight.toFixed(2) : 0,\n              \"Weight Util (%)\": excelRawData[i].weightUtil ? +excelRawData[i].weightUtil.toFixed(2) : 0,\n              \"Volume (CUMTR)\": excelRawData[i].volume ? +excelRawData[i].volume.toFixed(2) : 0,\n              \"Available Volume (CUMTR)\": excelRawData[i].totalVolume ? +excelRawData[i].totalVolume.toFixed(2) : 0,\n              \"Volume Util (%)\": excelRawData[i].volumeUtil ? +excelRawData[i].volumeUtil.toFixed(2) : 0,\n              \"Plan Status\": excelRawData[i].status,\n              \"Insert User\": excelRawData[i].insertUser,\n              \"Update User\": excelRawData[i].updateUser,\n              \"Insert Date\": this.service.customDateTimeFormat(excelRawData[i].insertDate),\n              \"Update Date\": this.service.customDateTimeFormat(excelRawData[i].updateDate),\n              \"Plan Age (Days)\": excelRawData[i].planAge,\n              \"Comments\": excelRawData[i].comments,\n              \"status\": excelRawData[i].appStatus\n            }\n\n            newExcelData.push(data)\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n          XLSX.writeFile(workBook, 'ApprovedPlans.xlsx');\n          this.isLoading = false;\n        } else {\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        }\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      });\n    } else {\n      this.toastr.error(\"No records found to export\", \"Error!\");\n    }\n\n  }\n\n  //filter material description \n  filterMaterialDescription(event) {\n    this.materialCode = '';\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.materialDescriptionList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?materialDesc=' + filtervalue).subscribe(response => {\n        this.materialDescriptionList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n  emptySumm() {\n    return null;\n  }\n\n  // set material code \n  setMaterialCode(value) {\n    setTimeout(() => {\n      this.materialCode = value;\n    }, 300);\n  }\n\n  // Filter source location\n  getfilterSource(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.sourceList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        console.log(\"respio\", response)\n        this.sourceList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        console.log(\"Error\", err);\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  // show Comments\n  showIntegrationMessage(row) {\n    this.modalComment = row.comments;\n    $(\"#commnetsModal\").modal('show');\n  }\n  onFooterPage(data) {\n    console.log(data);\n\n  }\n}\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { customMaterialModule } from '../../angular-material';\nimport { ApprovePlansComponent } from './approve-plans.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { LoaderModule } from '../../public/loader/loader-shared.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ApprovePlanErrorsComponent } from 'src/app/public/approve-plan-errors/approve-plan-errors.component';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\n\nconst routes: Routes = [\n  { path: '', component: ApprovePlansComponent},\n  { path: ':planId', component: ApprovePlansComponent},\n];\n\n@NgModule({\n  imports: [\n    [RouterModule.forChild(routes)],\n    CommonModule,\n    customMaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n    LoaderModule,\n    NgxDatatableModule,\n    CustomDatePipeModule\n  ],\n  declarations: [\n    ApprovePlansComponent,\n    ApprovePlanErrorsComponent\n  ],\n  entryComponents:[\n    ApprovePlanErrorsComponent,\n    ApprovePlansComponent\n  ],\n  providers:\n    [\n    ],\n})\nexport class approvePlanModule { }\n","module.exports = \"<mat-dialog-content class=\\\"mat-typography\\\">\\n <p *ngFor =\\\"let error of data.errorData\\\" class=\\\"text-danger\\\">{{error}}</p>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"center\\\">\\n    <button mat-stroked-button color=\\\"primary\\\" [mat-dialog-close]=\\\"false\\\" cdkFocusInitial>Close</button>\\n</mat-dialog-actions>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3B1YmxpYy9hcHByb3ZlLXBsYW4tZXJyb3JzL2FwcHJvdmUtcGxhbi1lcnJvcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-approve-plan-errors',\n  templateUrl: './approve-plan-errors.component.html',\n  styleUrls: ['./approve-plan-errors.component.scss']\n})\nexport class ApprovePlanErrorsComponent implements OnInit {\n\n  errorData:any;\n  constructor(\n    public dialogRef: MatDialogRef<ApprovePlanErrorsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: approvePlanErrors\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\nexport interface approvePlanErrors{\n  errorData:''\n}"],"sourceRoot":""}