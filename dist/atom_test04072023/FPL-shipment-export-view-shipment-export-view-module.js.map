{"version":3,"sources":["webpack:///./src/app/FPL/shipment-export-view/shipment-export-view.component.html","webpack:///./src/app/FPL/shipment-export-view/shipment-export-view.component.ts","webpack:///./src/app/FPL/shipment-export-view/shipment-export-view.model.ts","webpack:///./src/app/FPL/shipment-export-view/shipment-export-view.module.ts","webpack:///./src/app/custom-date-pipe.ts","webpack:///./src/app/date-pipe-shared.module.ts"],"names":[],"mappings":"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","file":"FPL-shipment-export-view-shipment-export-view-module.js","sourcesContent":["module.exports = \"<app-loader *ngIf=\\\"isLoading\\\">\\n</app-loader>\\n<div class=\\\"container-fluid\\\">\\n  <h6><b>Shipment Export View</b>\\n    <span class=\\\"pull-right refresh-span\\\">\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"export()\\\" matTooltip=\\\"Export to excel\\\">\\n        <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"refreshData()\\\" matTooltip=\\\"Refresh\\\">\\n        <i class=\\\"fa fa-repeat fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button class=\\\"theme-small-button\\\" (click)=\\\"showFilter()\\\" matTooltip=\\\"Filter\\\">\\n        <i class=\\\"fa fa-filter fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </span>\\n  </h6>\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"manualplan-fields\\\" *ngIf=\\\"IsShow\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-11\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2 pr-0\\\">\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"model.shipmentId\\\" name=\\\"shipment\\\" autocomplete=\\\"off\\\"\\n                placeholder=\\\"Shipment Id\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field>\\n                <input matInput aria-label=\\\"Source\\\" placeholder=\\\"Source\\\" autocomplete=\\\"off\\\"\\n                  (keyup)=\\\"getfilterDestination($event)\\\" autocomplete=\\\"off\\\" [matAutocomplete]=\\\"sourceAutocomplete\\\"\\n                  [(ngModel)]=\\\"model.sourceLoc\\\" name=\\\"source\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n                <mat-autocomplete #sourceAutocomplete=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let list of sourceList\\\" [value]=\\\"list.value\\\">\\n                    <span matTooltip={{list.description}}>{{list.value}} - ({{list.description}})</span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"model.pol\\\" name=\\\"polName\\\" autocomplete=\\\"off\\\" placeholder=\\\"POL\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"model.pod\\\" name=\\\"poDName\\\" autocomplete=\\\"off\\\" placeholder=\\\"POD\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"model.containerNum\\\" name=\\\"containerNumb\\\" autocomplete=\\\"off\\\"\\n                placeholder=\\\"Container Number\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"model.customerName\\\" name=\\\"customerName\\\" autocomplete=\\\"off\\\"\\n                placeholder=\\\"Customer Name\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"model.forwarder\\\" name=\\\"forwarderName\\\" autocomplete=\\\"off\\\"\\n                placeholder=\\\"Forwarder\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"model.cha\\\" name=\\\"chaName\\\" autocomplete=\\\"off\\\" placeholder=\\\"CHA\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"model.piNum\\\" name=\\\"piNumber\\\" autocomplete=\\\"off\\\" placeholder=\\\"PI Number\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"model.sapInvoice\\\" name=\\\"SapInvoice\\\" autocomplete=\\\"off\\\"\\n                placeholder=\\\"SAP Invoice\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"col-md-1 pr-0\\\">\\n            <mat-form-field>\\n              <input matInput [(ngModel)]=\\\"model.bookingNum\\\" name=\\\"bookingNumb\\\" autocomplete=\\\"off\\\"\\n                placeholder=\\\"Booking Number\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-1 text-center\\\">\\n        <div class=\\\"margin-top-10\\\">\\n          <button class=\\\"theme-small-button\\\" (click)=\\\"exportShippingFilter()\\\" matTooltip=\\\"Search\\\">\\n            <i class=\\\"fa fa-search fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n          <button class=\\\"theme-delete-button\\\" (click)=\\\"clearData()\\\" matTooltip=\\\"Clear All\\\">\\n            <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n\\n\\n  </div>\\n  <ngx-datatable #table class='material  ngx-table-custom-scroll ngx-table-tr-custom-scroll' [rows]='shipmentexportdata'\\n    [scrollbarH]=\\\"true\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\"\\n    [limit]=\\\"page.limit\\\" [count]=\\\"page.count\\\" [offset]=\\\"page.offset\\\" [externalPaging]=\\\"true\\\"\\n    (page)=\\\"serverSidePagination($event)\\\">\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Shipment Id\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"shipmentId\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.shipmentId | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Source\\\" [width]=\\\"50\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"sourceLoc\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sourceLoc | uppercase}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"PI No.\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"piNum\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.piNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Customer Name\\\" [width]=\\\"170\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"customerName\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.customerName}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column [frozenLeft]=\\\"true\\\" name=\\\"Pre Inv No.\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\"\\n      prop=\\\"preInvNum\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.preInvNum}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Term of Delivery\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"incoTerm\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.incoTerm}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Term of Payment\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"paymetTerms\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.paymetTerms}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"POL\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"pol\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.pol}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"POD\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"pod\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.pod}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"COFD\\\" [width]=\\\"200\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"cofd\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.cofd}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Freight Forwarder\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"forwarder\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.forwarder}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Billing Party\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"billingParty\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.billingParty}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Shipping Line\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"shippingLine\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.shippingLine}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Container Number\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"containerNum\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.containerNum }}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Container Pick up Date\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"countPicDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <span>{{(row.countPicDate)?(row.countPicDate | customDateFormat | date:'dd-MMM-yyyy'):'' }}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Stuffing/ Billing Date\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"stuffingDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.stuffingDate?(row.stuffingDate | customDateFormat | date:'dd-MMM-yyyy'):''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Booking Num\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"bookingNum\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <span>{{row.bookingNum}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Post Inv No.\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"postInvNum\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        <span>{{row.postInvNum}}</span>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Post Inv No. (SAP Invoice)\\\" [width]=\\\"125\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"sapInvoice\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.sapInvoice}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Post Inv Amount\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"false\\\" prop=\\\"invAmount\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.invAmount}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"CHA\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"cha\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        {{row.cha?row.cha:''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Planned Vessel Name\\\" [width]=\\\"150\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"plannedVessel\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\">\\n        {{row.plannedVessel?row.plannedVessel:''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Planned vsl ETD Loadport\\\" [width]=\\\"130\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"vesslDepartPolDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.vesslDepartPolDate)?(row.vesslDepartPolDate | customDateFormat | date:'dd-MMM-yyyy'):''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Shipping Bill No.\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"shippingBill\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.shippingBill}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Shipping Bill Date\\\" [width]=\\\"110\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"shippingBillDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.shippingBillDate)?(row.shippingBillDate | customDateFormat | date:'dd-MMM-yyyy'):''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Container Placed at CFS/Buffer\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" prop=\\\"gateInDateCfs\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.gateInDateCfs)?(row.gateInDateCfs | customDateFormat | date:'dd-MMM-yyyy'):''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Customs Exams Date\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" prop=\\\"customsExamDate\\\"\\n      [sortable]=\\\"true\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.customsExamDate)?(row.customsExamDate | customDateFormat | date:'dd-MMM-yyyy'):''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"LEO Date\\\" [width]=\\\"90\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"leoDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.leoDate)?(row.leoDate | customDateFormat | date:'dd-MMM-yyyy'):''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n\\n    <ngx-datatable-column name=\\\"Container Moved to Port\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"gateOutDateCgs\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.gateOutDateCgs)?(row.gateOutDateCgs | customDateFormat | date:'dd-MMM-yyyy'):''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Container Gated in\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"gateInDatePort\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.gateInDatePort)?(row.gateInDatePort | customDateFormat | date:'dd-MMM-yyyy'):''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Actual Vessel Name\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"actualVessel\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.actualVessel}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Actual Vessel SOB/ ETD Date\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\"\\n      prop=\\\"shipmentOnBordDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.shipmentOnBordDate)?(row.shipmentOnBordDate | customDateFormat | date:'dd-MMM-yyyy'):''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"ETA\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"etaPod\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.etaPod)?(row.etaPod | customDateFormat | date:'dd-MMM-yyyy'):''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Remarks\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"exportRemarks\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.exportRemarks}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Insert User\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"insertUser\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.insertUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Insert Date\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"insertDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.insertDate)?(row.insertDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'):''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Update User\\\" [width]=\\\"100\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"updateUser\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.updateUser}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Update Date\\\" [width]=\\\"120\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"updateDate\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{(row.updateDate)?(row.updateDate | customDateFormat | date:'dd-MMM-yyyy,HH:mm'):''}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Is Sync OTM\\\" [width]=\\\"80\\\" [resizeable]=\\\"false\\\" [sortable]=\\\"true\\\" prop=\\\"isSyncOtm\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        {{row.isSyncOtm}}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <!-- Footer Template starts -->\\n    <ngx-datatable-footer>\\n      <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n        let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n        <div class=\\\"page-count\\\">\\n          <span *ngIf=\\\"selectedCount\\\">\\n            {{selectedCount.toLocaleString()}} Selected |\\n          </span>\\n          Showing {{(offset * pageSize)+1}} to {{(rowCount>\\n          (curPage*pageSize))?(curPage*pageSize):(rowCount)}} of\\n          {{(rowCount)}} records.\\n        </div>\\n        <datatable-pager [pagerLeftArrowIcon]=\\\"'datatable-icon-left'\\\" [pagerRightArrowIcon]=\\\"'datatable-icon-right'\\\"\\n          [pagerPreviousIcon]=\\\"'datatable-icon-prev'\\\" [pagerNextIcon]=\\\"'datatable-icon-skip'\\\" [page]=\\\"curPage\\\"\\n          [size]=\\\"pageSize\\\" [count]=\\\"rowCount\\\" [hidden]=\\\"!((rowCount / pageSize) > 1)\\\"\\n          (change)=\\\"table.onFooterPage($event)\\\">\\n        </datatable-pager>\\n      </ng-template>\\n    </ngx-datatable-footer>\\n    <!-- Footer Template Ends -->\\n  </ngx-datatable>\\n\\n  <!-- View Loadslips  for coorsponding shipment -->\\n  <div class=\\\"modal\\\" id=\\\"loadslipsModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <!-- Modal Header -->\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Loadslip List</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <!-- Modal body -->\\n        <div class=\\\"modal-body\\\">\\n          <ul>\\n            <li *ngFor=\\\"let item of loadslipList;let i=index\\\">\\n              <span>\\n                {{i+1}})\\n                <span class=\\\"link\\\" style=\\\"margin-left: 10px;margin-right: 50px\\\"\\n                  (click)=\\\"viewLoadslipnavigation(item)\\\">{{item.loadlipId}}\\n                </span>\\n                <span>\\n                  {{item.type}}\\n                </span>\\n              </span>\\n            </li>\\n          </ul>\\n        </div>\\n        <!-- Modal footer -->\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- View Loadslips  for coorsponding shipment -->\\n  <div class=\\\"modal\\\" id=\\\"commentModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <!-- Modal Header -->\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">{{commentHeader}}</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <!-- Modal body -->\\n        <div class=\\\"modal-body\\\">\\n          <p>{{commentMsg}}</p>\\n        </div>\\n        <!-- Modal footer -->\\n      </div>\\n    </div>\\n  </div>\"","import { ApiserviceService } from './../../services/api/apiservice.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport * as XLSX from 'xlsx';\nimport { exportShippingModel } from './shipment-export-view.model';\n@Component({\n  selector: 'app-shipment-export-view',\n  templateUrl: './shipment-export-view.component.html',\n  styleUrls: []\n})\n\nexport class ShipmentExportViewComponent implements OnInit {\n\n  public model = new exportShippingModel();\n  isLoading: boolean = true;\n  shipmentexportdata = [];\n  loadslipList = [];\n  commentHeader: String;\n  commentMsg: string;\n  IsShow: boolean = true;\n  page = {\n    limit: 100,\n    count: 0,\n    offset: 0,\n    orderBy: \"myColumn1\",\n    orderDir: \"desc\",\n    pageSize: 100\n  };\n  sourceList: any[];\n\n  constructor(\n    private service: ApiserviceService,\n    private toastr: ToastrService\n  ) {\n  }\n\n  ngOnInit() {\n    console.log(this.model);\n\n    // activation of tab\n    localStorage.setItem('userMenu', 'shipment-export-view');\n    this.refreshData();\n  }\n  refreshData() {\n    this.clearData();\n    this.getshipmentExportData(this.model);\n  }\n\n  //Show Filter \n  showFilter() {\n    this.IsShow = !this.IsShow\n  }\n  onFooterPage(pageInfo){\n    console.log(pageInfo);\n    \n  }\n\n  getshipmentExportData(data) {\n    this.isLoading = true;\n    this.service.post_service(ApiserviceService.apisList.getExportShipping, data).subscribe(response => {\n      if (response['statusCode'] == '200') {\n        let repsonseData = response['data'];\n        this.shipmentexportdata = repsonseData.ExportShipmentDto;\n        this.shipmentexportdata = [...this.shipmentexportdata];\n        this.page.count = repsonseData.total;\n        this.page.limit = repsonseData.pageLength;\n        this.isLoading = false;\n      } else {\n        this.isLoading = false;\n        this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n      }\n    },\n      (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n  }\n\n\n  serverSidePagination(pageInfo: { count?: number, pageSize?: number, limit?: number, offset?: number }) {\n    let data = { ...this.model };\n    data['pageLength'] = pageInfo.count;\n    // data[\"index\"] = 0;\n    this.getshipmentExportData(data)\n  }\n\n\n  clearData() {\n    this.sourceList = [];\n    this.model = new exportShippingModel();\n  }\n  exportShippingFilter() {\n    this.getshipmentExportData(this.model)\n  }\n  //get filter destination result\n  getfilterDestination(event) {\n    let filtervalue = event.target.value;\n    if (filtervalue.length > 1 && !(event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 8)) {\n      this.sourceList = [];\n      this.isLoading = true;\n      this.service.get_service(ApiserviceService.apisList.searchFilter + '?destination=' + filtervalue).subscribe(response => {\n        this.sourceList = response['data'].searchResult;\n        this.isLoading = false;\n      }, (err) => {\n        this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n        this.isLoading = false;\n      })\n    }\n  }\n\n  //export excel data\n  export(): void {\n    if (this.shipmentexportdata.length > 0) {\n      this.isLoading = true;\n      let data = { ...this.model };\n      data['pageLength'] = this.page.count;\n      this.service.post_service(ApiserviceService.apisList.getExportShipping, data).subscribe(response => {\n        if (response['statusCode'] == '200') {\n          let repsonseData = response['data'];\n          let newViewPlanData = repsonseData.ExportShipmentDto;\n          console.log(\"newViewPlanData\", newViewPlanData);\n          let excelRawData = newViewPlanData;\n          let newExcelData = [];\n          for (let i = 0; i < excelRawData.length; i++) {\n            let data = {\n              \"Shipment Id\": excelRawData[i].shipmentId,\n              \"Source\": excelRawData[i].sourceLoc,\n              \"PI No.\": excelRawData[i].piNum,\n              \"Customer Name\": excelRawData[i].customerName,\n              \"Pre Inv No.\": excelRawData[i].preInvNum,\n              \"Term of Delivery\": excelRawData[i].incoTerm,\n              \"Term of Payment\": excelRawData[i].paymetTerms,\n              \"POL\": excelRawData[i].pol,\n              \"POD\": excelRawData[i].pod,\n              \"COFD\": excelRawData[i].cofd,\n              \"Freight Forwarder\": excelRawData[i].forwarder,\n              \"Billing Party\": excelRawData[i].billingParty,\n              \"Shipping Line\": excelRawData[i].shippingLine,\n              \"Container Num\": excelRawData[i].containerNum,\n              \"Container Pick up Date\": this.service.customDateFormat(excelRawData[i].countPicDate),\n              \"Stuffing/ Billing Date\": this.service.customDateFormat(excelRawData[i].stuffingDate),\n              \"Booking Num\": excelRawData[i].bookingNum,\n              \"Post Inv No.\": excelRawData[i].postInvNum,\n              \"Post Inv No. (SAP Invoice)\": excelRawData[i].sapInvoice,\n              \"Post Inv Amount\": excelRawData[i].invAmount,\n              \"CHA\": excelRawData[i].cha,\n              \"Planned Vessel Name\": excelRawData[i].plannedVessel,\n              \"Planned vsl ETD Loadport\": this.service.customDateFormat(excelRawData[i].vesslDepartPolDate),\n              \"Shipping Bill No.\": excelRawData[i].shippingBill,\n              \"Shipping Bill Date\": this.service.customDateFormat(excelRawData[i].shippingBillDate),\n              \"Container Placed at CFS/Buffer\": this.service.customDateFormat(excelRawData[i].gateInDateCfs),\n              \"Custom Exams Date\": this.service.customDateFormat(excelRawData[i].customsExamDate),\n              \"LEO Date\": this.service.customDateFormat(excelRawData[i].leoDate),\n              \"Container Moved to Port\": this.service.customDateFormat(excelRawData[i].gateOutDateCgs),\n              \"Container Gated in\": this.service.customDateFormat(excelRawData[i].gateInDatePort),\n              \"Actual Vessel Name\": excelRawData[i].actualVessel,\n              \"Actual Vessel SOB/ ETD Date\": this.service.customDateFormat(excelRawData[i].shipmentOnBordDate),\n              \"ETA\": this.service.customDateFormat(excelRawData[i].etaPod),\n              \"Remarks\": excelRawData[i].exportRemarks,\n              \"Insert User\": excelRawData[i].insertUser,\n              \"Insert Date\": this.service.customDateTimeFormat(excelRawData[i].insertDate),\n              \"Update User\": excelRawData[i].updateUser,\n              \"Update Date\": this.service.customDateTimeFormat(excelRawData[i].updateDate),\n              \"Is Sync OTM\": excelRawData[i].isSyncOtm\n            };\n            newExcelData.push(data);\n          }\n          const workBook = XLSX.utils.book_new(); // create a new blank book\n          const workSheet = XLSX.utils.json_to_sheet(newExcelData);\n          XLSX.utils.book_append_sheet(workBook, workSheet, \"data\"); // add the worksheet to the book\n          XLSX.writeFile(workBook, \"ShippingExport.xlsx\");\n          this.isLoading = false;\n          this.isLoading = false;\n        } else {\n          this.isLoading = false;\n          this.toastr.error(response['message'] ? response['message'] : \"Something went wrong..\", \"Error!\");\n        }\n      },\n        (err) => {\n          this.toastr.error(err ? err : \"Something went wrong..\", \"Error!\");\n          this.isLoading = false;\n        })\n    } else {\n      this.toastr.warning(\"No data to Export Excel\", \"! Warning\");\n    }\n\n  }\n\n}\n\n","// export class Array{\n//     public description:string;\n//     public value:string;\n// }\n\nexport class exportShippingModel {\n    public shipmentId: string;\n    public pol: string;\n    public pod: string;\n    public containerNum: string;\n    public customerName: string;\n    public forwarder: string;\n    public cha: string;\n    public piNum: string;\n    public sapInvoice: string;\n    public bookingNum: string;\n    public sourceLoc: string;\n    constructor(values: Object = {}) {\n        Object.assign(this, values);\n    }\n}","import { FormsModule } from '@angular/forms';\nimport { CustomDatePipeModule } from 'src/app/date-pipe-shared.module';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { ShipmentExportViewComponent } from './shipment-export-view.component';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { customMaterialModule } from 'src/app/angular-material';\nimport { LoaderModule } from 'src/app/public/loader/loader-shared.module';\nimport { CommonModule } from '@angular/common';\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShipmentExportViewComponent\n    }\n]\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        NgxDatatableModule,\n        CustomDatePipeModule,\n        customMaterialModule,\n        LoaderModule,\n        FormsModule,\n        CommonModule\n    ],\n    exports: [],\n    declarations: [\n        ShipmentExportViewComponent\n    ],\n\n})\n\nexport class shipmentExportViewModule { }","import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Formats a /Date(XXXXXXXXXXXXXXXX)/ string into a JSON Date object\n * Takes an argument as input of actual date value in /Date(XXXXXXXXXXXXXXXX)/ format.\n * Usage:\n * date-value | customDateFormat\n * Example:\n * {{ '/Date(1402034400000)/' | customDateFormat}}\n * formats to: \"2014-06-06T06:00:00.000Z\" \n*/\n@Pipe({ name: \"customDateFormat\", pure: true })\nexport class CustomDateFormat implements PipeTransform {\n  transform(\n    value: any,\n    valuesplitindexvalues: string,\n    finalDate: string\n  ): number {\n    if (value) {\n      valuesplitindexvalues = value.split(\"/\");\n      finalDate =\n        valuesplitindexvalues[1] +\n        \"/\" +\n        valuesplitindexvalues[0] +\n        \"/\" +\n        valuesplitindexvalues[2];\n      console.log(valuesplitindexvalues);\n      console.log(finalDate);\n    }\n\n    if (finalDate) {\n      var myDate = new Date(finalDate).getTime();\n      return myDate;\n    }\n    console.log(finalDate);\n    \n  }\n}","import { NgModule} from '@angular/core';\nimport { CustomDateFormat } from './custom-date-pipe';\n\n\n@NgModule({\n  imports: [\n   \n  ],\n  declarations: [\n    CustomDateFormat\n  ],\n  exports:[\n    CustomDateFormat\n  ]\n})\n\nexport class CustomDatePipeModule { }\n"],"sourceRoot":""}